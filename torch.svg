<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="326" onload="init(evt)" viewBox="0 0 1200 326" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="326.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="309" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="309" > </text>
<g id="frames">
<g >
<title>runtime.runqempty (1 samples, 0.04%)</title><rect x="1019.5" y="197" width="0.4" height="15.0" fill="rgb(228,183,52)" rx="2" ry="2" />
<text  x="1022.51" y="207.5" ></text>
</g>
<g >
<title>runtime.mapassign (2 samples, 0.07%)</title><rect x="219.9" y="181" width="0.8" height="15.0" fill="rgb(209,120,33)" rx="2" ry="2" />
<text  x="222.86" y="191.5" ></text>
</g>
<g >
<title>indexbytebody (2 samples, 0.07%)</title><rect x="224.2" y="165" width="0.9" height="15.0" fill="rgb(252,111,47)" rx="2" ry="2" />
<text  x="227.19" y="175.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).enlistWorker (7 samples, 0.26%)</title><rect x="1160.6" y="197" width="3.0" height="15.0" fill="rgb(237,8,20)" rx="2" ry="2" />
<text  x="1163.58" y="207.5" ></text>
</g>
<g >
<title>runtime.readyWithTime (2 samples, 0.07%)</title><rect x="642.6" y="213" width="0.9" height="15.0" fill="rgb(249,32,48)" rx="2" ry="2" />
<text  x="645.62" y="223.5" ></text>
</g>
<g >
<title>runtime.pthread_kill (1 samples, 0.04%)</title><rect x="644.4" y="133" width="0.4" height="15.0" fill="rgb(231,31,23)" rx="2" ry="2" />
<text  x="647.35" y="143.5" ></text>
</g>
<g >
<title>runtime.startm (37 samples, 1.36%)</title><rect x="1127.3" y="181" width="16.0" height="15.0" fill="rgb(209,67,46)" rx="2" ry="2" />
<text  x="1130.26" y="191.5" ></text>
</g>
<g >
<title>runtime.procyield (1 samples, 0.04%)</title><rect x="600.2" y="37" width="0.4" height="15.0" fill="rgb(246,171,40)" rx="2" ry="2" />
<text  x="603.22" y="47.5" ></text>
</g>
<g >
<title>runtime.systemstack (17 samples, 0.62%)</title><rect x="644.8" y="245" width="7.3" height="15.0" fill="rgb(207,156,49)" rx="2" ry="2" />
<text  x="647.79" y="255.5" ></text>
</g>
<g >
<title>runtime.mapaccess1_faststr (1 samples, 0.04%)</title><rect x="226.8" y="181" width="0.4" height="15.0" fill="rgb(253,167,42)" rx="2" ry="2" />
<text  x="229.79" y="191.5" ></text>
</g>
<g >
<title>runtime.preemptone (7 samples, 0.26%)</title><rect x="1160.6" y="181" width="3.0" height="15.0" fill="rgb(211,76,10)" rx="2" ry="2" />
<text  x="1163.58" y="191.5" ></text>
</g>
<g >
<title>runtime.entersyscall (2 samples, 0.07%)</title><rect x="599.8" y="117" width="0.8" height="15.0" fill="rgb(247,4,19)" rx="2" ry="2" />
<text  x="602.78" y="127.5" ></text>
</g>
<g >
<title>github.com/vivekprm/go-pprof-demo/stats.addTagsToName (6 samples, 0.22%)</title><rect x="617.1" y="165" width="2.6" height="15.0" fill="rgb(222,46,48)" rx="2" ry="2" />
<text  x="620.09" y="175.5" ></text>
</g>
<g >
<title>runtime.mPark (4 samples, 0.15%)</title><rect x="652.1" y="229" width="1.8" height="15.0" fill="rgb(206,61,42)" rx="2" ry="2" />
<text  x="655.14" y="239.5" ></text>
</g>
<g >
<title>runtime.netpoll (1 samples, 0.04%)</title><rect x="657.3" y="197" width="0.5" height="15.0" fill="rgb(232,171,41)" rx="2" ry="2" />
<text  x="660.33" y="207.5" ></text>
</g>
<g >
<title>runtime.netpoll (1 samples, 0.04%)</title><rect x="1145.4" y="165" width="0.5" height="15.0" fill="rgb(207,200,30)" rx="2" ry="2" />
<text  x="1148.43" y="175.5" ></text>
</g>
<g >
<title>runtime.semawakeup (1 samples, 0.04%)</title><rect x="655.6" y="133" width="0.4" height="15.0" fill="rgb(215,217,20)" rx="2" ry="2" />
<text  x="658.60" y="143.5" ></text>
</g>
<g >
<title>runtime.mPark (4 samples, 0.15%)</title><rect x="661.7" y="181" width="1.7" height="15.0" fill="rgb(222,116,29)" rx="2" ry="2" />
<text  x="664.66" y="191.5" ></text>
</g>
<g >
<title>runtime.preemptone (1 samples, 0.04%)</title><rect x="644.4" y="165" width="0.4" height="15.0" fill="rgb(221,146,23)" rx="2" ry="2" />
<text  x="647.35" y="175.5" ></text>
</g>
<g >
<title>net/http.(*conn).serve (1,417 samples, 51.96%)</title><rect x="10.0" y="261" width="613.1" height="15.0" fill="rgb(207,170,21)" rx="2" ry="2" />
<text  x="13.00" y="271.5" >net/http.(*conn).serve</text>
</g>
<g >
<title>sync/atomic.(*Bool).Load (1 samples, 0.04%)</title><rect x="239.3" y="197" width="0.5" height="15.0" fill="rgb(245,118,6)" rx="2" ry="2" />
<text  x="242.34" y="207.5" ></text>
</g>
<g >
<title>indexbytebody (2 samples, 0.07%)</title><rect x="225.9" y="133" width="0.9" height="15.0" fill="rgb(207,178,7)" rx="2" ry="2" />
<text  x="228.92" y="143.5" ></text>
</g>
<g >
<title>runtime.kevent (1 samples, 0.04%)</title><rect x="1145.4" y="149" width="0.5" height="15.0" fill="rgb(250,137,32)" rx="2" ry="2" />
<text  x="1148.43" y="159.5" ></text>
</g>
<g >
<title>github.com/varstr/uaparser.contains (2 samples, 0.07%)</title><rect x="606.7" y="117" width="0.9" height="15.0" fill="rgb(225,73,3)" rx="2" ry="2" />
<text  x="609.71" y="127.5" ></text>
</g>
<g >
<title>github.com/vivekprm/go-pprof-demo/stats.addTagsToName (5 samples, 0.18%)</title><rect x="610.6" y="165" width="2.2" height="15.0" fill="rgb(231,37,33)" rx="2" ry="2" />
<text  x="613.60" y="175.5" ></text>
</g>
<g >
<title>runtime.osyield (3 samples, 0.11%)</title><rect x="656.0" y="181" width="1.3" height="15.0" fill="rgb(247,89,3)" rx="2" ry="2" />
<text  x="659.04" y="191.5" ></text>
</g>
<g >
<title>strings.Cut (1 samples, 0.04%)</title><rect x="221.6" y="197" width="0.4" height="15.0" fill="rgb(211,182,17)" rx="2" ry="2" />
<text  x="224.60" y="207.5" ></text>
</g>
<g >
<title>context.WithCancel.func1 (3 samples, 0.11%)</title><rect x="216.8" y="245" width="1.3" height="15.0" fill="rgb(213,28,21)" rx="2" ry="2" />
<text  x="219.84" y="255.5" ></text>
</g>
<g >
<title>net/textproto.canonicalMIMEHeaderKey (1 samples, 0.04%)</title><rect x="226.8" y="197" width="0.4" height="15.0" fill="rgb(211,45,12)" rx="2" ry="2" />
<text  x="229.79" y="207.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (4 samples, 0.15%)</title><rect x="1143.7" y="165" width="1.7" height="15.0" fill="rgb(227,52,37)" rx="2" ry="2" />
<text  x="1146.70" y="175.5" ></text>
</g>
<g >
<title>bufio.(*Reader).fill (476 samples, 17.46%)</title><rect x="10.9" y="229" width="205.9" height="15.0" fill="rgb(242,172,34)" rx="2" ry="2" />
<text  x="13.87" y="239.5" >bufio.(*Reader).fill</text>
</g>
<g >
<title>runtime.notetsleep (2 samples, 0.07%)</title><rect x="1163.6" y="213" width="0.9" height="15.0" fill="rgb(219,50,41)" rx="2" ry="2" />
<text  x="1166.60" y="223.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.04%)</title><rect x="610.2" y="165" width="0.4" height="15.0" fill="rgb(231,116,14)" rx="2" ry="2" />
<text  x="613.17" y="175.5" ></text>
</g>
<g >
<title>runtime.schedule (7 samples, 0.26%)</title><rect x="1143.3" y="197" width="3.0" height="15.0" fill="rgb(254,33,52)" rx="2" ry="2" />
<text  x="1146.27" y="207.5" ></text>
</g>
<g >
<title>context.(*cancelCtx).cancel (3 samples, 0.11%)</title><rect x="216.8" y="229" width="1.3" height="15.0" fill="rgb(245,152,16)" rx="2" ry="2" />
<text  x="219.84" y="239.5" ></text>
</g>
<g >
<title>runtime.usleep (9 samples, 0.33%)</title><rect x="1148.9" y="181" width="3.9" height="15.0" fill="rgb(250,139,4)" rx="2" ry="2" />
<text  x="1151.89" y="191.5" ></text>
</g>
<g >
<title>runtime.read (2 samples, 0.07%)</title><rect x="1016.5" y="181" width="0.8" height="15.0" fill="rgb(235,227,52)" rx="2" ry="2" />
<text  x="1019.48" y="191.5" ></text>
</g>
<g >
<title>runtime.newstack (24 samples, 0.88%)</title><rect x="1143.3" y="245" width="10.4" height="15.0" fill="rgb(243,9,51)" rx="2" ry="2" />
<text  x="1146.27" y="255.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).prepare (1 samples, 0.04%)</title><rect x="240.6" y="149" width="0.5" height="15.0" fill="rgb(233,22,18)" rx="2" ry="2" />
<text  x="243.63" y="159.5" ></text>
</g>
<g >
<title>net/http.(*conn).setState (1 samples, 0.04%)</title><rect x="232.0" y="245" width="0.4" height="15.0" fill="rgb(211,223,11)" rx="2" ry="2" />
<text  x="234.98" y="255.5" ></text>
</g>
<g >
<title>regexp.(*Regexp).doExecute (6 samples, 0.22%)</title><rect x="612.8" y="117" width="2.6" height="15.0" fill="rgb(253,133,1)" rx="2" ry="2" />
<text  x="615.76" y="127.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.04%)</title><rect x="218.1" y="181" width="0.5" height="15.0" fill="rgb(237,83,31)" rx="2" ry="2" />
<text  x="221.13" y="191.5" ></text>
</g>
<g >
<title>runtime.sysUnusedOS (8 samples, 0.29%)</title><rect x="1156.7" y="229" width="3.4" height="15.0" fill="rgb(247,55,28)" rx="2" ry="2" />
<text  x="1159.68" y="239.5" ></text>
</g>
<g >
<title>runtime.semawakeup (1 samples, 0.04%)</title><rect x="1189.6" y="213" width="0.4" height="15.0" fill="rgb(223,4,38)" rx="2" ry="2" />
<text  x="1192.57" y="223.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone (1 samples, 0.04%)</title><rect x="644.4" y="245" width="0.4" height="15.0" fill="rgb(247,70,50)" rx="2" ry="2" />
<text  x="647.35" y="255.5" ></text>
</g>
<g >
<title>regexp.(*Regexp).replaceAll (7 samples, 0.26%)</title><rect x="619.7" y="133" width="3.0" height="15.0" fill="rgb(237,76,18)" rx="2" ry="2" />
<text  x="622.69" y="143.5" ></text>
</g>
<g >
<title>runtime.semawakeup (1 samples, 0.04%)</title><rect x="1167.5" y="197" width="0.4" height="15.0" fill="rgb(225,108,12)" rx="2" ry="2" />
<text  x="1170.50" y="207.5" ></text>
</g>
<g >
<title>runtime.usleep (222 samples, 8.14%)</title><rect x="1023.4" y="149" width="96.1" height="15.0" fill="rgb(242,11,54)" rx="2" ry="2" />
<text  x="1026.41" y="159.5" >runtime.usl..</text>
</g>
<g >
<title>runtime.pthread_cond_signal (19 samples, 0.70%)</title><rect x="1179.6" y="165" width="8.2" height="15.0" fill="rgb(236,45,10)" rx="2" ry="2" />
<text  x="1182.61" y="175.5" ></text>
</g>
<g >
<title>runtime.findmoduledatap (1 samples, 0.04%)</title><rect x="654.3" y="213" width="0.4" height="15.0" fill="rgb(250,184,36)" rx="2" ry="2" />
<text  x="657.31" y="223.5" ></text>
</g>
<g >
<title>net/http.Header.sortedKeyValues (1 samples, 0.04%)</title><rect x="238.5" y="165" width="0.4" height="15.0" fill="rgb(212,74,33)" rx="2" ry="2" />
<text  x="241.47" y="175.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.04%)</title><rect x="230.7" y="213" width="0.4" height="15.0" fill="rgb(223,171,11)" rx="2" ry="2" />
<text  x="233.68" y="223.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker (18 samples, 0.66%)</title><rect x="644.4" y="261" width="7.7" height="15.0" fill="rgb(243,192,29)" rx="2" ry="2" />
<text  x="647.35" y="271.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.04%)</title><rect x="234.1" y="213" width="0.5" height="15.0" fill="rgb(245,144,28)" rx="2" ry="2" />
<text  x="237.14" y="223.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.04%)</title><rect x="609.3" y="133" width="0.4" height="15.0" fill="rgb(245,98,32)" rx="2" ry="2" />
<text  x="612.30" y="143.5" ></text>
</g>
<g >
<title>runtime.efaceeq (1 samples, 0.04%)</title><rect x="219.0" y="149" width="0.4" height="15.0" fill="rgb(251,206,22)" rx="2" ry="2" />
<text  x="222.00" y="159.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.04%)</title><rect x="653.9" y="181" width="0.4" height="15.0" fill="rgb(242,169,22)" rx="2" ry="2" />
<text  x="656.87" y="191.5" ></text>
</g>
<g >
<title>net/http.serverHandler.ServeHTTP (47 samples, 1.72%)</title><rect x="602.8" y="245" width="20.3" height="15.0" fill="rgb(234,63,2)" rx="2" ry="2" />
<text  x="605.81" y="255.5" ></text>
</g>
<g >
<title>runtime.netpoll (589 samples, 21.60%)</title><rect x="762.5" y="197" width="254.8" height="15.0" fill="rgb(213,96,47)" rx="2" ry="2" />
<text  x="765.48" y="207.5" >runtime.netpoll</text>
</g>
<g >
<title>net/http.putTextprotoReader (1 samples, 0.04%)</title><rect x="222.0" y="213" width="0.5" height="15.0" fill="rgb(221,163,0)" rx="2" ry="2" />
<text  x="225.03" y="223.5" ></text>
</g>
<g >
<title>runtime.nanotime1 (1 samples, 0.04%)</title><rect x="659.5" y="181" width="0.4" height="15.0" fill="rgb(249,53,23)" rx="2" ry="2" />
<text  x="662.50" y="191.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (1 samples, 0.04%)</title><rect x="1167.1" y="181" width="0.4" height="15.0" fill="rgb(223,0,39)" rx="2" ry="2" />
<text  x="1170.07" y="191.5" ></text>
</g>
<g >
<title>runtime.greyobject (1 samples, 0.04%)</title><rect x="649.5" y="181" width="0.5" height="15.0" fill="rgb(246,157,1)" rx="2" ry="2" />
<text  x="652.55" y="191.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).balance (7 samples, 0.26%)</title><rect x="1160.6" y="213" width="3.0" height="15.0" fill="rgb(249,218,10)" rx="2" ry="2" />
<text  x="1163.58" y="223.5" ></text>
</g>
<g >
<title>runtime.nanotime (1 samples, 0.04%)</title><rect x="622.7" y="165" width="0.4" height="15.0" fill="rgb(216,104,21)" rx="2" ry="2" />
<text  x="625.72" y="175.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.04%)</title><rect x="619.3" y="133" width="0.4" height="15.0" fill="rgb(242,199,22)" rx="2" ry="2" />
<text  x="622.26" y="143.5" ></text>
</g>
<g >
<title>net/http.(*response).finishRequest (850 samples, 31.17%)</title><rect x="235.0" y="245" width="367.8" height="15.0" fill="rgb(225,102,14)" rx="2" ry="2" />
<text  x="238.01" y="255.5" >net/http.(*response).finishRequest</text>
</g>
<g >
<title>runtime.pthread_cond_wait (1 samples, 0.04%)</title><rect x="1143.3" y="101" width="0.4" height="15.0" fill="rgb(205,173,36)" rx="2" ry="2" />
<text  x="1146.27" y="111.5" ></text>
</g>
<g >
<title>bufio.(*Writer).Flush (845 samples, 30.99%)</title><rect x="235.0" y="229" width="365.6" height="15.0" fill="rgb(233,178,31)" rx="2" ry="2" />
<text  x="238.01" y="239.5" >bufio.(*Writer).Flush</text>
</g>
<g >
<title>regexp.(*bitState).shouldVisit (1 samples, 0.04%)</title><rect x="620.6" y="85" width="0.4" height="15.0" fill="rgb(244,16,3)" rx="2" ry="2" />
<text  x="623.55" y="95.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.04%)</title><rect x="609.3" y="117" width="0.4" height="15.0" fill="rgb(233,165,40)" rx="2" ry="2" />
<text  x="612.30" y="127.5" ></text>
</g>
<g >
<title>net.(*netFD).Write (834 samples, 30.58%)</title><rect x="239.8" y="181" width="360.8" height="15.0" fill="rgb(232,63,37)" rx="2" ry="2" />
<text  x="242.77" y="191.5" >net.(*netFD).Write</text>
</g>
<g >
<title>runtime.goready.func1 (3 samples, 0.11%)</title><rect x="1170.1" y="245" width="1.3" height="15.0" fill="rgb(252,73,27)" rx="2" ry="2" />
<text  x="1173.10" y="255.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.04%)</title><rect x="642.2" y="229" width="0.4" height="15.0" fill="rgb(243,220,6)" rx="2" ry="2" />
<text  x="645.19" y="239.5" ></text>
</g>
<g >
<title>runtime.execute (2 samples, 0.07%)</title><rect x="659.1" y="213" width="0.8" height="15.0" fill="rgb(254,189,46)" rx="2" ry="2" />
<text  x="662.06" y="223.5" ></text>
</g>
<g >
<title>net/http.readRequest (6 samples, 0.22%)</title><rect x="221.2" y="229" width="2.6" height="15.0" fill="rgb(212,37,22)" rx="2" ry="2" />
<text  x="224.16" y="239.5" ></text>
</g>
<g >
<title>fmt.(*pp).doPrintln (2 samples, 0.07%)</title><rect x="605.4" y="149" width="0.9" height="15.0" fill="rgb(234,192,2)" rx="2" ry="2" />
<text  x="608.41" y="159.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker.func2 (17 samples, 0.62%)</title><rect x="644.8" y="229" width="7.3" height="15.0" fill="rgb(229,46,49)" rx="2" ry="2" />
<text  x="647.79" y="239.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).writeLock (1 samples, 0.04%)</title><rect x="240.2" y="165" width="0.4" height="15.0" fill="rgb(215,77,13)" rx="2" ry="2" />
<text  x="243.20" y="175.5" ></text>
</g>
<g >
<title>runtime.unlock2 (1 samples, 0.04%)</title><rect x="1119.9" y="181" width="0.4" height="15.0" fill="rgb(216,25,40)" rx="2" ry="2" />
<text  x="1122.90" y="191.5" ></text>
</g>
<g >
<title>net/textproto.(*Reader).readLineSlice (2 samples, 0.07%)</title><rect x="224.2" y="213" width="0.9" height="15.0" fill="rgb(250,225,15)" rx="2" ry="2" />
<text  x="227.19" y="223.5" ></text>
</g>
<g >
<title>runtime.semasleep (4 samples, 0.15%)</title><rect x="661.7" y="149" width="1.7" height="15.0" fill="rgb(244,10,49)" rx="2" ry="2" />
<text  x="664.66" y="159.5" ></text>
</g>
<g >
<title>runtime.schedule (6 samples, 0.22%)</title><rect x="655.2" y="229" width="2.6" height="15.0" fill="rgb(226,146,22)" rx="2" ry="2" />
<text  x="658.17" y="239.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).wait (1 samples, 0.04%)</title><rect x="623.6" y="197" width="0.4" height="15.0" fill="rgb(249,170,28)" rx="2" ry="2" />
<text  x="626.58" y="207.5" ></text>
</g>
<g >
<title>fmt.(*fmt).fmtS (1 samples, 0.04%)</title><rect x="605.8" y="101" width="0.5" height="15.0" fill="rgb(244,178,1)" rx="2" ry="2" />
<text  x="608.84" y="111.5" ></text>
</g>
<g >
<title>runtime.unlock2 (2 samples, 0.07%)</title><rect x="1152.8" y="197" width="0.9" height="15.0" fill="rgb(226,29,41)" rx="2" ry="2" />
<text  x="1155.79" y="207.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.07%)</title><rect x="599.8" y="85" width="0.8" height="15.0" fill="rgb(232,149,32)" rx="2" ry="2" />
<text  x="602.78" y="95.5" ></text>
</g>
<g >
<title>runtime.semasleep (181 samples, 6.64%)</title><rect x="684.2" y="165" width="78.3" height="15.0" fill="rgb(209,172,52)" rx="2" ry="2" />
<text  x="687.16" y="175.5" >runtime.s..</text>
</g>
<g >
<title>runtime.empty (1 samples, 0.04%)</title><rect x="220.7" y="165" width="0.5" height="15.0" fill="rgb(219,12,3)" rx="2" ry="2" />
<text  x="223.73" y="175.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.04%)</title><rect x="1167.5" y="213" width="0.4" height="15.0" fill="rgb(252,219,10)" rx="2" ry="2" />
<text  x="1170.50" y="223.5" ></text>
</g>
<g >
<title>net/http.(*connReader).Read (475 samples, 17.42%)</title><rect x="10.9" y="213" width="205.5" height="15.0" fill="rgb(211,114,13)" rx="2" ry="2" />
<text  x="13.87" y="223.5" >net/http.(*connReader).Read</text>
</g>
<g >
<title>net/http.(*ServeMux).Handler (4 samples, 0.15%)</title><rect x="603.7" y="213" width="1.7" height="15.0" fill="rgb(215,184,41)" rx="2" ry="2" />
<text  x="606.68" y="223.5" ></text>
</g>
<g >
<title>net.SplitHostPort (4 samples, 0.15%)</title><rect x="603.7" y="181" width="1.7" height="15.0" fill="rgb(228,63,9)" rx="2" ry="2" />
<text  x="606.68" y="191.5" ></text>
</g>
<g >
<title>runtime.notewakeup (19 samples, 0.70%)</title><rect x="1179.6" y="197" width="8.2" height="15.0" fill="rgb(209,99,13)" rx="2" ry="2" />
<text  x="1182.61" y="207.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.func4 (3 samples, 0.11%)</title><rect x="1167.9" y="245" width="1.3" height="15.0" fill="rgb(232,6,23)" rx="2" ry="2" />
<text  x="1170.93" y="255.5" ></text>
</g>
<g >
<title>runtime.sysUsedOS (7 samples, 0.26%)</title><rect x="1153.7" y="229" width="3.0" height="15.0" fill="rgb(228,179,39)" rx="2" ry="2" />
<text  x="1156.65" y="239.5" ></text>
</g>
<g >
<title>runtime.newproc.func1 (1 samples, 0.04%)</title><rect x="234.6" y="197" width="0.4" height="15.0" fill="rgb(239,126,6)" rx="2" ry="2" />
<text  x="237.58" y="207.5" ></text>
</g>
<g >
<title>time.now (2 samples, 0.07%)</title><rect x="237.6" y="165" width="0.9" height="15.0" fill="rgb(220,177,6)" rx="2" ry="2" />
<text  x="240.61" y="175.5" ></text>
</g>
<g >
<title>syscall.write (831 samples, 30.47%)</title><rect x="241.1" y="149" width="359.5" height="15.0" fill="rgb(215,5,52)" rx="2" ry="2" />
<text  x="244.07" y="159.5" >syscall.write</text>
</g>
<g >
<title>regexp.(*Regexp).ReplaceAllString (9 samples, 0.33%)</title><rect x="612.8" y="149" width="3.9" height="15.0" fill="rgb(226,161,25)" rx="2" ry="2" />
<text  x="615.76" y="159.5" ></text>
</g>
<g >
<title>runtime.findRunnable (1 samples, 0.04%)</title><rect x="653.9" y="213" width="0.4" height="15.0" fill="rgb(212,71,38)" rx="2" ry="2" />
<text  x="656.87" y="223.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write (1 samples, 0.04%)</title><rect x="239.8" y="165" width="0.4" height="15.0" fill="rgb(246,74,18)" rx="2" ry="2" />
<text  x="242.77" y="175.5" ></text>
</g>
<g >
<title>runtime.gostringnocopy (1 samples, 0.04%)</title><rect x="654.7" y="213" width="0.5" height="15.0" fill="rgb(215,79,47)" rx="2" ry="2" />
<text  x="657.74" y="223.5" ></text>
</g>
<g >
<title>runtime.semasleep (1 samples, 0.04%)</title><rect x="1143.3" y="117" width="0.4" height="15.0" fill="rgb(245,94,32)" rx="2" ry="2" />
<text  x="1146.27" y="127.5" ></text>
</g>
<g >
<title>vendor/golang.org/x/net/http/httpguts.IsTokenRune (1 samples, 0.04%)</title><rect x="223.8" y="197" width="0.4" height="15.0" fill="rgb(239,50,2)" rx="2" ry="2" />
<text  x="226.76" y="207.5" ></text>
</g>
<g >
<title>runtime.semawakeup (1 samples, 0.04%)</title><rect x="1169.7" y="197" width="0.4" height="15.0" fill="rgb(242,186,27)" rx="2" ry="2" />
<text  x="1172.66" y="207.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.func3 (1 samples, 0.04%)</title><rect x="1167.5" y="245" width="0.4" height="15.0" fill="rgb(215,98,23)" rx="2" ry="2" />
<text  x="1170.50" y="255.5" ></text>
</g>
<g >
<title>runtime.writeHeapBits.flush (1 samples, 0.04%)</title><rect x="642.2" y="181" width="0.4" height="15.0" fill="rgb(207,52,0)" rx="2" ry="2" />
<text  x="645.19" y="191.5" ></text>
</g>
<g >
<title>runtime.acquirem (1 samples, 0.04%)</title><rect x="234.6" y="181" width="0.4" height="15.0" fill="rgb(223,180,37)" rx="2" ry="2" />
<text  x="237.58" y="191.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_lock (1 samples, 0.04%)</title><rect x="762.0" y="149" width="0.5" height="15.0" fill="rgb(242,120,34)" rx="2" ry="2" />
<text  x="765.05" y="159.5" ></text>
</g>
<g >
<title>syscall.Read (475 samples, 17.42%)</title><rect x="10.9" y="165" width="205.5" height="15.0" fill="rgb(217,158,49)" rx="2" ry="2" />
<text  x="13.87" y="175.5" >syscall.Read</text>
</g>
<g >
<title>runtime.preemptone (6 samples, 0.22%)</title><rect x="1164.5" y="197" width="2.6" height="15.0" fill="rgb(224,215,19)" rx="2" ry="2" />
<text  x="1167.47" y="207.5" ></text>
</g>
<g >
<title>runtime.releaseSudog (1 samples, 0.04%)</title><rect x="602.4" y="181" width="0.4" height="15.0" fill="rgb(232,131,49)" rx="2" ry="2" />
<text  x="605.38" y="191.5" ></text>
</g>
<g >
<title>runtime.gcDrain (17 samples, 0.62%)</title><rect x="644.8" y="213" width="7.3" height="15.0" fill="rgb(234,129,38)" rx="2" ry="2" />
<text  x="647.79" y="223.5" ></text>
</g>
<g >
<title>runtime.unlock2 (1 samples, 0.04%)</title><rect x="1167.1" y="213" width="0.4" height="15.0" fill="rgb(212,21,33)" rx="2" ry="2" />
<text  x="1170.07" y="223.5" ></text>
</g>
<g >
<title>github.com/vivekprm/go-pprof-demo/handlers.WithStats.func1 (41 samples, 1.50%)</title><rect x="605.4" y="197" width="17.7" height="15.0" fill="rgb(228,27,16)" rx="2" ry="2" />
<text  x="608.41" y="207.5" ></text>
</g>
<g >
<title>strconv.AppendInt (1 samples, 0.04%)</title><rect x="237.2" y="181" width="0.4" height="15.0" fill="rgb(216,139,11)" rx="2" ry="2" />
<text  x="240.17" y="191.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.04%)</title><rect x="610.2" y="149" width="0.4" height="15.0" fill="rgb(248,100,33)" rx="2" ry="2" />
<text  x="613.17" y="159.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="1142.8" y="133" width="0.5" height="15.0" fill="rgb(232,138,48)" rx="2" ry="2" />
<text  x="1145.83" y="143.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (4 samples, 0.15%)</title><rect x="1171.4" y="197" width="1.7" height="15.0" fill="rgb(232,187,15)" rx="2" ry="2" />
<text  x="1174.39" y="207.5" ></text>
</g>
<g >
<title>runtime.gcstopm (1 samples, 0.04%)</title><rect x="1143.3" y="165" width="0.4" height="15.0" fill="rgb(251,191,17)" rx="2" ry="2" />
<text  x="1146.27" y="175.5" ></text>
</g>
<g >
<title>runtime.lock2 (2 samples, 0.07%)</title><rect x="599.8" y="53" width="0.8" height="15.0" fill="rgb(211,226,16)" rx="2" ry="2" />
<text  x="602.78" y="63.5" ></text>
</g>
<g >
<title>runtime.markroot (1 samples, 0.04%)</title><rect x="1160.1" y="197" width="0.5" height="15.0" fill="rgb(215,116,42)" rx="2" ry="2" />
<text  x="1163.14" y="207.5" ></text>
</g>
<g >
<title>runtime.preemptall (1 samples, 0.04%)</title><rect x="644.4" y="181" width="0.4" height="15.0" fill="rgb(210,61,29)" rx="2" ry="2" />
<text  x="647.35" y="191.5" ></text>
</g>
<g >
<title>runtime.pthread_kill (1 samples, 0.04%)</title><rect x="1160.1" y="133" width="0.5" height="15.0" fill="rgb(246,12,37)" rx="2" ry="2" />
<text  x="1163.14" y="143.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (1 samples, 0.04%)</title><rect x="1160.1" y="213" width="0.5" height="15.0" fill="rgb(248,18,24)" rx="2" ry="2" />
<text  x="1163.14" y="223.5" ></text>
</g>
<g >
<title>runtime.wakep (37 samples, 1.36%)</title><rect x="1127.3" y="197" width="16.0" height="15.0" fill="rgb(244,129,32)" rx="2" ry="2" />
<text  x="1130.26" y="207.5" ></text>
</g>
<g >
<title>runtime.gcstopm (1 samples, 0.04%)</title><rect x="655.2" y="197" width="0.4" height="15.0" fill="rgb(226,182,0)" rx="2" ry="2" />
<text  x="658.17" y="207.5" ></text>
</g>
<g >
<title>runtime.concatstrings (1 samples, 0.04%)</title><rect x="617.5" y="133" width="0.5" height="15.0" fill="rgb(242,115,53)" rx="2" ry="2" />
<text  x="620.52" y="143.5" ></text>
</g>
<g >
<title>runtime.gcStart.func2 (2 samples, 0.07%)</title><rect x="1169.2" y="245" width="0.9" height="15.0" fill="rgb(207,55,17)" rx="2" ry="2" />
<text  x="1172.23" y="255.5" ></text>
</g>
<g >
<title>runtime.procyield (1 samples, 0.04%)</title><rect x="1146.3" y="181" width="0.4" height="15.0" fill="rgb(229,49,2)" rx="2" ry="2" />
<text  x="1149.30" y="191.5" ></text>
</g>
<g >
<title>runtime.procyield (1 samples, 0.04%)</title><rect x="681.1" y="165" width="0.5" height="15.0" fill="rgb(236,225,8)" rx="2" ry="2" />
<text  x="684.13" y="175.5" ></text>
</g>
<g >
<title>runtime.notesleep (4 samples, 0.15%)</title><rect x="661.7" y="165" width="1.7" height="15.0" fill="rgb(225,134,21)" rx="2" ry="2" />
<text  x="664.66" y="175.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_lock (1 samples, 0.04%)</title><rect x="679.8" y="117" width="0.5" height="15.0" fill="rgb(205,229,5)" rx="2" ry="2" />
<text  x="682.83" y="127.5" ></text>
</g>
<g >
<title>runtime.startm (1 samples, 0.04%)</title><rect x="655.6" y="165" width="0.4" height="15.0" fill="rgb(206,62,22)" rx="2" ry="2" />
<text  x="658.60" y="175.5" ></text>
</g>
<g >
<title>runtime.wakep (3 samples, 0.11%)</title><rect x="1170.1" y="213" width="1.3" height="15.0" fill="rgb(249,156,32)" rx="2" ry="2" />
<text  x="1173.10" y="223.5" ></text>
</g>
<g >
<title>runtime.notesleep (181 samples, 6.64%)</title><rect x="684.2" y="181" width="78.3" height="15.0" fill="rgb(253,10,22)" rx="2" ry="2" />
<text  x="687.16" y="191.5" >runtime.n..</text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.04%)</title><rect x="611.5" y="117" width="0.4" height="15.0" fill="rgb(231,107,53)" rx="2" ry="2" />
<text  x="614.47" y="127.5" ></text>
</g>
<g >
<title>net/http.(*response).Write (1 samples, 0.04%)</title><rect x="606.3" y="149" width="0.4" height="15.0" fill="rgb(236,229,43)" rx="2" ry="2" />
<text  x="609.27" y="159.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).balance (3 samples, 0.11%)</title><rect x="645.7" y="197" width="1.2" height="15.0" fill="rgb(206,116,52)" rx="2" ry="2" />
<text  x="648.65" y="207.5" ></text>
</g>
<g >
<title>net/http.stripHostPort (4 samples, 0.15%)</title><rect x="603.7" y="197" width="1.7" height="15.0" fill="rgb(209,169,53)" rx="2" ry="2" />
<text  x="606.68" y="207.5" ></text>
</g>
<g >
<title>regexp.(*Regexp).ReplaceAllString (7 samples, 0.26%)</title><rect x="619.7" y="149" width="3.0" height="15.0" fill="rgb(208,187,54)" rx="2" ry="2" />
<text  x="622.69" y="159.5" ></text>
</g>
<g >
<title>time.Since (1 samples, 0.04%)</title><rect x="622.7" y="181" width="0.4" height="15.0" fill="rgb(227,223,53)" rx="2" ry="2" />
<text  x="625.72" y="191.5" ></text>
</g>
<g >
<title>fmt.Fprintln (3 samples, 0.11%)</title><rect x="605.4" y="165" width="1.3" height="15.0" fill="rgb(254,219,33)" rx="2" ry="2" />
<text  x="608.41" y="175.5" ></text>
</g>
<g >
<title>runtime.(*randomEnum).next (4 samples, 0.15%)</title><rect x="659.9" y="197" width="1.8" height="15.0" fill="rgb(234,44,24)" rx="2" ry="2" />
<text  x="662.93" y="207.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.04%)</title><rect x="218.1" y="197" width="0.5" height="15.0" fill="rgb(220,71,47)" rx="2" ry="2" />
<text  x="221.13" y="207.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.04%)</title><rect x="234.1" y="229" width="0.5" height="15.0" fill="rgb(228,105,5)" rx="2" ry="2" />
<text  x="237.14" y="239.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (2 samples, 0.07%)</title><rect x="599.8" y="69" width="0.8" height="15.0" fill="rgb(252,118,49)" rx="2" ry="2" />
<text  x="602.78" y="79.5" ></text>
</g>
<g >
<title>bufio.(*Reader).Peek (477 samples, 17.49%)</title><rect x="10.4" y="245" width="206.4" height="15.0" fill="rgb(225,119,40)" rx="2" ry="2" />
<text  x="13.43" y="255.5" >bufio.(*Reader).Peek</text>
</g>
<g >
<title>runtime.lock2 (5 samples, 0.18%)</title><rect x="1120.8" y="197" width="2.1" height="15.0" fill="rgb(231,4,28)" rx="2" ry="2" />
<text  x="1123.77" y="207.5" ></text>
</g>
<g >
<title>runtime.semawakeup (1 samples, 0.04%)</title><rect x="1167.1" y="197" width="0.4" height="15.0" fill="rgb(254,173,29)" rx="2" ry="2" />
<text  x="1170.07" y="207.5" ></text>
</g>
<g >
<title>runtime.nanotime1 (1 samples, 0.04%)</title><rect x="622.7" y="149" width="0.4" height="15.0" fill="rgb(250,61,27)" rx="2" ry="2" />
<text  x="625.72" y="159.5" ></text>
</g>
<g >
<title>context.newCancelCtx (1 samples, 0.04%)</title><rect x="218.1" y="213" width="0.5" height="15.0" fill="rgb(245,128,48)" rx="2" ry="2" />
<text  x="221.13" y="223.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).waitRead (1 samples, 0.04%)</title><rect x="623.6" y="213" width="0.4" height="15.0" fill="rgb(235,111,35)" rx="2" ry="2" />
<text  x="626.58" y="223.5" ></text>
</g>
<g >
<title>runtime.growslice (2 samples, 0.07%)</title><rect x="618.0" y="149" width="0.8" height="15.0" fill="rgb(219,225,14)" rx="2" ry="2" />
<text  x="620.96" y="159.5" ></text>
</g>
<g >
<title>runtime.interhash (1 samples, 0.04%)</title><rect x="220.3" y="165" width="0.4" height="15.0" fill="rgb(207,210,17)" rx="2" ry="2" />
<text  x="223.30" y="175.5" ></text>
</g>
<g >
<title>runtime.pthread_kill (6 samples, 0.22%)</title><rect x="1164.5" y="165" width="2.6" height="15.0" fill="rgb(216,133,54)" rx="2" ry="2" />
<text  x="1167.47" y="175.5" ></text>
</g>
<g >
<title>runtime.injectglist.func1 (37 samples, 1.36%)</title><rect x="664.3" y="181" width="16.0" height="15.0" fill="rgb(208,30,29)" rx="2" ry="2" />
<text  x="667.26" y="191.5" ></text>
</g>
<g >
<title>fmt.(*pp).fmtString (2 samples, 0.07%)</title><rect x="605.4" y="117" width="0.9" height="15.0" fill="rgb(237,92,33)" rx="2" ry="2" />
<text  x="608.41" y="127.5" ></text>
</g>
<g >
<title>runtime.osyield (1 samples, 0.04%)</title><rect x="1179.2" y="213" width="0.4" height="15.0" fill="rgb(234,61,33)" rx="2" ry="2" />
<text  x="1182.18" y="223.5" ></text>
</g>
<g >
<title>runtime.usleep (3 samples, 0.11%)</title><rect x="656.0" y="165" width="1.3" height="15.0" fill="rgb(244,151,35)" rx="2" ry="2" />
<text  x="659.04" y="175.5" ></text>
</g>
<g >
<title>runtime.mapdelete_faststr (2 samples, 0.07%)</title><rect x="229.8" y="229" width="0.9" height="15.0" fill="rgb(248,211,12)" rx="2" ry="2" />
<text  x="232.82" y="239.5" ></text>
</g>
<g >
<title>internal/poll.setDeadlineImpl (1 samples, 0.04%)</title><rect x="601.5" y="197" width="0.4" height="15.0" fill="rgb(214,172,19)" rx="2" ry="2" />
<text  x="604.51" y="207.5" ></text>
</g>
<g >
<title>net/http.writeStatusLine (1 samples, 0.04%)</title><rect x="236.7" y="181" width="0.5" height="15.0" fill="rgb(215,81,52)" rx="2" ry="2" />
<text  x="239.74" y="191.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (1 samples, 0.04%)</title><rect x="1189.6" y="197" width="0.4" height="15.0" fill="rgb(210,150,44)" rx="2" ry="2" />
<text  x="1192.57" y="207.5" ></text>
</g>
<g >
<title>net/http.validMethod (1 samples, 0.04%)</title><rect x="223.8" y="229" width="0.4" height="15.0" fill="rgb(206,141,9)" rx="2" ry="2" />
<text  x="226.76" y="239.5" ></text>
</g>
<g >
<title>runtime.startTheWorldWithSema (2 samples, 0.07%)</title><rect x="1169.2" y="229" width="0.9" height="15.0" fill="rgb(211,225,38)" rx="2" ry="2" />
<text  x="1172.23" y="239.5" ></text>
</g>
<g >
<title>runtime.selectnbrecv (1 samples, 0.04%)</title><rect x="220.7" y="181" width="0.5" height="15.0" fill="rgb(228,126,52)" rx="2" ry="2" />
<text  x="223.73" y="191.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (179 samples, 6.56%)</title><rect x="684.6" y="149" width="77.4" height="15.0" fill="rgb(213,34,14)" rx="2" ry="2" />
<text  x="687.59" y="159.5" >runtime...</text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.04%)</title><rect x="618.8" y="133" width="0.5" height="15.0" fill="rgb(229,211,20)" rx="2" ry="2" />
<text  x="621.82" y="143.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.04%)</title><rect x="642.2" y="197" width="0.4" height="15.0" fill="rgb(223,63,28)" rx="2" ry="2" />
<text  x="645.19" y="207.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (1 samples, 0.04%)</title><rect x="1167.5" y="181" width="0.4" height="15.0" fill="rgb(243,60,38)" rx="2" ry="2" />
<text  x="1170.50" y="191.5" ></text>
</g>
<g >
<title>net/http.(*chunkWriter).Write (9 samples, 0.33%)</title><rect x="235.9" y="213" width="3.9" height="15.0" fill="rgb(243,31,10)" rx="2" ry="2" />
<text  x="238.87" y="223.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone.func1 (1 samples, 0.04%)</title><rect x="644.4" y="213" width="0.4" height="15.0" fill="rgb(250,151,1)" rx="2" ry="2" />
<text  x="647.35" y="223.5" ></text>
</g>
<g >
<title>runtime.resetspinning (38 samples, 1.39%)</title><rect x="1126.8" y="213" width="16.5" height="15.0" fill="rgb(239,223,13)" rx="2" ry="2" />
<text  x="1129.82" y="223.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (1 samples, 0.04%)</title><rect x="1145.9" y="101" width="0.4" height="15.0" fill="rgb(242,169,48)" rx="2" ry="2" />
<text  x="1148.86" y="111.5" ></text>
</g>
<g >
<title>github.com/vivekprm/go-pprof-demo/stats.RecordTimer (14 samples, 0.51%)</title><rect x="616.7" y="181" width="6.0" height="15.0" fill="rgb(228,208,6)" rx="2" ry="2" />
<text  x="619.66" y="191.5" ></text>
</g>
<g >
<title>regexp.(*Regexp).doExecute (3 samples, 0.11%)</title><rect x="619.7" y="117" width="1.3" height="15.0" fill="rgb(253,32,51)" rx="2" ry="2" />
<text  x="622.69" y="127.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (1 samples, 0.04%)</title><rect x="1169.7" y="181" width="0.4" height="15.0" fill="rgb(249,131,12)" rx="2" ry="2" />
<text  x="1172.66" y="191.5" ></text>
</g>
<g >
<title>syscall.syscall (474 samples, 17.38%)</title><rect x="11.3" y="133" width="205.1" height="15.0" fill="rgb(221,221,6)" rx="2" ry="2" />
<text  x="14.30" y="143.5" >syscall.syscall</text>
</g>
<g >
<title>regexp.(*Regexp).replaceAll (9 samples, 0.33%)</title><rect x="612.8" y="133" width="3.9" height="15.0" fill="rgb(254,60,36)" rx="2" ry="2" />
<text  x="615.76" y="143.5" ></text>
</g>
<g >
<title>runtime.park_m (1,122 samples, 41.14%)</title><rect x="657.8" y="245" width="485.5" height="15.0" fill="rgb(223,42,0)" rx="2" ry="2" />
<text  x="660.77" y="255.5" >runtime.park_m</text>
</g>
<g >
<title>runtime.pthread_cond_timedwait_relative_np (2 samples, 0.07%)</title><rect x="1163.6" y="165" width="0.9" height="15.0" fill="rgb(252,73,34)" rx="2" ry="2" />
<text  x="1166.60" y="175.5" ></text>
</g>
<g >
<title>internal/poll.(*fdMutex).rwlock (1 samples, 0.04%)</title><rect x="240.2" y="149" width="0.4" height="15.0" fill="rgb(251,169,51)" rx="2" ry="2" />
<text  x="243.20" y="159.5" ></text>
</g>
<g >
<title>runtime.heapBits.nextFast (1 samples, 0.04%)</title><rect x="646.9" y="197" width="0.5" height="15.0" fill="rgb(214,135,35)" rx="2" ry="2" />
<text  x="649.95" y="207.5" ></text>
</g>
<g >
<title>regexp.(*inputString).step (1 samples, 0.04%)</title><rect x="619.7" y="69" width="0.4" height="15.0" fill="rgb(206,54,1)" rx="2" ry="2" />
<text  x="622.69" y="79.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (2 samples, 0.07%)</title><rect x="228.1" y="197" width="0.9" height="15.0" fill="rgb(229,171,19)" rx="2" ry="2" />
<text  x="231.09" y="207.5" ></text>
</g>
<g >
<title>runtime.rawstring (1 samples, 0.04%)</title><rect x="617.5" y="117" width="0.5" height="15.0" fill="rgb(208,86,20)" rx="2" ry="2" />
<text  x="620.52" y="127.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.04%)</title><rect x="643.1" y="181" width="0.4" height="15.0" fill="rgb(242,30,54)" rx="2" ry="2" />
<text  x="646.05" y="191.5" ></text>
</g>
<g >
<title>runtime.signalM (7 samples, 0.26%)</title><rect x="1160.6" y="165" width="3.0" height="15.0" fill="rgb(251,145,30)" rx="2" ry="2" />
<text  x="1163.58" y="175.5" ></text>
</g>
<g >
<title>net/http.(*headerSorter).Len (1 samples, 0.04%)</title><rect x="238.5" y="133" width="0.4" height="15.0" fill="rgb(243,57,16)" rx="2" ry="2" />
<text  x="241.47" y="143.5" ></text>
</g>
<g >
<title>runtime.semasleep (3 samples, 0.11%)</title><rect x="681.6" y="165" width="1.3" height="15.0" fill="rgb(249,10,52)" rx="2" ry="2" />
<text  x="684.57" y="175.5" ></text>
</g>
<g >
<title>runtime.usleep (9 samples, 0.33%)</title><rect x="1122.9" y="181" width="3.9" height="15.0" fill="rgb(236,191,2)" rx="2" ry="2" />
<text  x="1125.93" y="191.5" ></text>
</g>
<g >
<title>runtime.runqsteal (226 samples, 8.29%)</title><rect x="1021.7" y="181" width="97.8" height="15.0" fill="rgb(239,142,37)" rx="2" ry="2" />
<text  x="1024.68" y="191.5" >runtime.run..</text>
</g>
<g >
<title>net/http.(*connReader).startBackgroundRead (6 samples, 0.22%)</title><rect x="232.4" y="245" width="2.6" height="15.0" fill="rgb(226,135,29)" rx="2" ry="2" />
<text  x="235.41" y="255.5" ></text>
</g>
<g >
<title>runtime.notewakeup (37 samples, 1.36%)</title><rect x="664.3" y="149" width="16.0" height="15.0" fill="rgb(218,120,25)" rx="2" ry="2" />
<text  x="667.26" y="159.5" ></text>
</g>
<g >
<title>regexp.(*inputString).step (1 samples, 0.04%)</title><rect x="614.1" y="69" width="0.4" height="15.0" fill="rgb(221,212,28)" rx="2" ry="2" />
<text  x="617.06" y="79.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).prepareWrite (1 samples, 0.04%)</title><rect x="240.6" y="165" width="0.5" height="15.0" fill="rgb(253,63,38)" rx="2" ry="2" />
<text  x="243.63" y="175.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.04%)</title><rect x="230.7" y="197" width="0.4" height="15.0" fill="rgb(221,54,30)" rx="2" ry="2" />
<text  x="233.68" y="207.5" ></text>
</g>
<g >
<title>time.Now (2 samples, 0.07%)</title><rect x="231.1" y="229" width="0.9" height="15.0" fill="rgb(218,177,35)" rx="2" ry="2" />
<text  x="234.11" y="239.5" ></text>
</g>
<g >
<title>strings.(*Builder).WriteString (1 samples, 0.04%)</title><rect x="618.8" y="149" width="0.5" height="15.0" fill="rgb(209,111,14)" rx="2" ry="2" />
<text  x="621.82" y="159.5" ></text>
</g>
<g >
<title>runtime.wakep (1 samples, 0.04%)</title><rect x="1145.9" y="165" width="0.4" height="15.0" fill="rgb(224,18,28)" rx="2" ry="2" />
<text  x="1148.86" y="175.5" ></text>
</g>
<g >
<title>runtime.netpoll (1 samples, 0.04%)</title><rect x="1169.2" y="213" width="0.5" height="15.0" fill="rgb(219,228,33)" rx="2" ry="2" />
<text  x="1172.23" y="223.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.07%)</title><rect x="228.1" y="181" width="0.9" height="15.0" fill="rgb(206,102,4)" rx="2" ry="2" />
<text  x="231.09" y="191.5" ></text>
</g>
<g >
<title>time.now (2 samples, 0.07%)</title><rect x="231.1" y="213" width="0.9" height="15.0" fill="rgb(240,200,49)" rx="2" ry="2" />
<text  x="234.11" y="223.5" ></text>
</g>
<g >
<title>runtime.semawakeup (37 samples, 1.36%)</title><rect x="1127.3" y="149" width="16.0" height="15.0" fill="rgb(216,74,37)" rx="2" ry="2" />
<text  x="1130.26" y="159.5" ></text>
</g>
<g >
<title>net.(*conn).Write (834 samples, 30.58%)</title><rect x="239.8" y="197" width="360.8" height="15.0" fill="rgb(244,226,32)" rx="2" ry="2" />
<text  x="242.77" y="207.5" >net.(*conn).Write</text>
</g>
<g >
<title>runtime.kevent (1 samples, 0.04%)</title><rect x="657.3" y="181" width="0.5" height="15.0" fill="rgb(252,117,37)" rx="2" ry="2" />
<text  x="660.33" y="191.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.04%)</title><rect x="218.1" y="165" width="0.5" height="15.0" fill="rgb(231,58,48)" rx="2" ry="2" />
<text  x="221.13" y="175.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (1 samples, 0.04%)</title><rect x="655.6" y="117" width="0.4" height="15.0" fill="rgb(221,158,53)" rx="2" ry="2" />
<text  x="658.60" y="127.5" ></text>
</g>
<g >
<title>runtime.findRunnable (6 samples, 0.22%)</title><rect x="655.2" y="213" width="2.6" height="15.0" fill="rgb(252,13,8)" rx="2" ry="2" />
<text  x="658.17" y="223.5" ></text>
</g>
<g >
<title>runtime.netpollcheckerr (1 samples, 0.04%)</title><rect x="240.6" y="133" width="0.5" height="15.0" fill="rgb(235,136,20)" rx="2" ry="2" />
<text  x="243.63" y="143.5" ></text>
</g>
<g >
<title>runtime.growslice (4 samples, 0.15%)</title><rect x="621.0" y="117" width="1.7" height="15.0" fill="rgb(242,223,13)" rx="2" ry="2" />
<text  x="623.99" y="127.5" ></text>
</g>
<g >
<title>sync.(*Cond).Wait (2 samples, 0.07%)</title><rect x="601.9" y="213" width="0.9" height="15.0" fill="rgb(235,97,50)" rx="2" ry="2" />
<text  x="604.95" y="223.5" ></text>
</g>
<g >
<title>runtime.signalM (6 samples, 0.22%)</title><rect x="1164.5" y="181" width="2.6" height="15.0" fill="rgb(226,162,6)" rx="2" ry="2" />
<text  x="1167.47" y="191.5" ></text>
</g>
<g >
<title>runtime.startm (19 samples, 0.70%)</title><rect x="1179.6" y="213" width="8.2" height="15.0" fill="rgb(231,174,6)" rx="2" ry="2" />
<text  x="1182.61" y="223.5" ></text>
</g>
<g >
<title>runtime.mcall (1,135 samples, 41.62%)</title><rect x="652.1" y="261" width="491.2" height="15.0" fill="rgb(226,213,48)" rx="2" ry="2" />
<text  x="655.14" y="271.5" >runtime.mcall</text>
</g>
<g >
<title>runtime.notesleep (1 samples, 0.04%)</title><rect x="1143.3" y="133" width="0.4" height="15.0" fill="rgb(217,200,5)" rx="2" ry="2" />
<text  x="1146.27" y="143.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.04%)</title><rect x="1179.2" y="229" width="0.4" height="15.0" fill="rgb(216,204,3)" rx="2" ry="2" />
<text  x="1182.18" y="239.5" ></text>
</g>
<g >
<title>net/url.(*URL).setPath (2 samples, 0.07%)</title><rect x="222.9" y="181" width="0.9" height="15.0" fill="rgb(235,223,27)" rx="2" ry="2" />
<text  x="225.89" y="191.5" ></text>
</g>
<g >
<title>runtime.startm (3 samples, 0.11%)</title><rect x="1170.1" y="197" width="1.3" height="15.0" fill="rgb(224,69,10)" rx="2" ry="2" />
<text  x="1173.10" y="207.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (3 samples, 0.11%)</title><rect x="1170.1" y="149" width="1.3" height="15.0" fill="rgb(228,204,14)" rx="2" ry="2" />
<text  x="1173.10" y="159.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (1 samples, 0.04%)</title><rect x="1160.1" y="181" width="0.5" height="15.0" fill="rgb(210,71,8)" rx="2" ry="2" />
<text  x="1163.14" y="191.5" ></text>
</g>
<g >
<title>runtime.kevent (1 samples, 0.04%)</title><rect x="1169.2" y="197" width="0.5" height="15.0" fill="rgb(220,131,13)" rx="2" ry="2" />
<text  x="1172.23" y="207.5" ></text>
</g>
<g >
<title>runtime.resetspinning (1 samples, 0.04%)</title><rect x="1145.9" y="181" width="0.4" height="15.0" fill="rgb(226,148,38)" rx="2" ry="2" />
<text  x="1148.86" y="191.5" ></text>
</g>
<g >
<title>runtime.netpollgoready (1 samples, 0.04%)</title><rect x="601.5" y="181" width="0.4" height="15.0" fill="rgb(241,134,0)" rx="2" ry="2" />
<text  x="604.51" y="191.5" ></text>
</g>
<g >
<title>runtime.lock2 (6 samples, 0.22%)</title><rect x="1146.3" y="197" width="2.6" height="15.0" fill="rgb(212,195,11)" rx="2" ry="2" />
<text  x="1149.30" y="207.5" ></text>
</g>
<g >
<title>runtime.(*atomicOffAddr).Load (1 samples, 0.04%)</title><rect x="643.5" y="149" width="0.4" height="15.0" fill="rgb(218,55,4)" rx="2" ry="2" />
<text  x="646.49" y="159.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (2 samples, 0.07%)</title><rect x="651.3" y="197" width="0.8" height="15.0" fill="rgb(217,90,44)" rx="2" ry="2" />
<text  x="654.28" y="207.5" ></text>
</g>
<g >
<title>runtime.isSystemGoroutine (2 samples, 0.07%)</title><rect x="654.3" y="229" width="0.9" height="15.0" fill="rgb(225,105,44)" rx="2" ry="2" />
<text  x="657.31" y="239.5" ></text>
</g>
<g >
<title>runtime.osyield (9 samples, 0.33%)</title><rect x="1122.9" y="197" width="3.9" height="15.0" fill="rgb(248,158,39)" rx="2" ry="2" />
<text  x="1125.93" y="207.5" ></text>
</g>
<g >
<title>runtime.mallocgc (3 samples, 0.11%)</title><rect x="615.4" y="101" width="1.3" height="15.0" fill="rgb(217,132,54)" rx="2" ry="2" />
<text  x="618.36" y="111.5" ></text>
</g>
<g >
<title>runtime.osyield (9 samples, 0.33%)</title><rect x="1148.9" y="197" width="3.9" height="15.0" fill="rgb(215,218,36)" rx="2" ry="2" />
<text  x="1151.89" y="207.5" ></text>
</g>
<g >
<title>runtime.handoff (3 samples, 0.11%)</title><rect x="645.7" y="181" width="1.2" height="15.0" fill="rgb(209,0,30)" rx="2" ry="2" />
<text  x="648.65" y="191.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker.func2 (7 samples, 0.26%)</title><rect x="1160.6" y="245" width="3.0" height="15.0" fill="rgb(243,101,26)" rx="2" ry="2" />
<text  x="1163.58" y="255.5" ></text>
</g>
<g >
<title>runtime.netpollcheckerr (1 samples, 0.04%)</title><rect x="623.6" y="181" width="0.4" height="15.0" fill="rgb(233,12,19)" rx="2" ry="2" />
<text  x="626.58" y="191.5" ></text>
</g>
<g >
<title>runtime.suspendG (1 samples, 0.04%)</title><rect x="1160.1" y="165" width="0.5" height="15.0" fill="rgb(209,146,29)" rx="2" ry="2" />
<text  x="1163.14" y="175.5" ></text>
</g>
<g >
<title>net/http.Header.get (1 samples, 0.04%)</title><rect x="238.9" y="197" width="0.4" height="15.0" fill="rgb(207,81,44)" rx="2" ry="2" />
<text  x="241.90" y="207.5" ></text>
</g>
<g >
<title>github.com/vivekprm/go-pprof-demo/handlers.parseUserAgent (6 samples, 0.22%)</title><rect x="606.7" y="165" width="2.6" height="15.0" fill="rgb(213,79,52)" rx="2" ry="2" />
<text  x="609.71" y="175.5" ></text>
</g>
<g >
<title>runtime.signalM (3 samples, 0.11%)</title><rect x="1188.3" y="197" width="1.3" height="15.0" fill="rgb(212,17,48)" rx="2" ry="2" />
<text  x="1191.27" y="207.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (15 samples, 0.55%)</title><rect x="1146.3" y="213" width="6.5" height="15.0" fill="rgb(226,32,28)" rx="2" ry="2" />
<text  x="1149.30" y="223.5" ></text>
</g>
<g >
<title>runtime.arenaIndex (1 samples, 0.04%)</title><rect x="611.5" y="101" width="0.4" height="15.0" fill="rgb(254,86,32)" rx="2" ry="2" />
<text  x="614.47" y="111.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).pop (1 samples, 0.04%)</title><rect x="645.7" y="165" width="0.4" height="15.0" fill="rgb(237,84,4)" rx="2" ry="2" />
<text  x="648.65" y="175.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Unlock (1 samples, 0.04%)</title><rect x="216.4" y="213" width="0.4" height="15.0" fill="rgb(251,111,29)" rx="2" ry="2" />
<text  x="219.40" y="223.5" ></text>
</g>
<g >
<title>net/http.HandlerFunc.ServeHTTP (41 samples, 1.50%)</title><rect x="605.4" y="213" width="17.7" height="15.0" fill="rgb(221,153,6)" rx="2" ry="2" />
<text  x="608.41" y="223.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (1 samples, 0.04%)</title><rect x="653.9" y="149" width="0.4" height="15.0" fill="rgb(240,24,15)" rx="2" ry="2" />
<text  x="656.87" y="159.5" ></text>
</g>
<g >
<title>bufio.(*Reader).ReadLine (3 samples, 0.11%)</title><rect x="225.5" y="165" width="1.3" height="15.0" fill="rgb(236,40,12)" rx="2" ry="2" />
<text  x="228.49" y="175.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (4 samples, 0.15%)</title><rect x="652.1" y="181" width="1.8" height="15.0" fill="rgb(227,7,15)" rx="2" ry="2" />
<text  x="655.14" y="191.5" ></text>
</g>
<g >
<title>runtime.injectglist (1 samples, 0.04%)</title><rect x="655.6" y="197" width="0.4" height="15.0" fill="rgb(215,18,40)" rx="2" ry="2" />
<text  x="658.60" y="207.5" ></text>
</g>
<g >
<title>bufio.(*Reader).ReadSlice (1 samples, 0.04%)</title><rect x="225.5" y="149" width="0.4" height="15.0" fill="rgb(227,119,43)" rx="2" ry="2" />
<text  x="228.49" y="159.5" ></text>
</g>
<g >
<title>runtime.goschedImpl (7 samples, 0.26%)</title><rect x="1143.3" y="213" width="3.0" height="15.0" fill="rgb(238,204,41)" rx="2" ry="2" />
<text  x="1146.27" y="223.5" ></text>
</g>
<g >
<title>runtime.kevent (586 samples, 21.49%)</title><rect x="762.9" y="181" width="253.6" height="15.0" fill="rgb(236,9,52)" rx="2" ry="2" />
<text  x="765.92" y="191.5" >runtime.kevent</text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint64).Load (1 samples, 0.04%)</title><rect x="1120.3" y="197" width="0.5" height="15.0" fill="rgb(245,133,19)" rx="2" ry="2" />
<text  x="1123.33" y="207.5" ></text>
</g>
<g >
<title>net/http.readTransfer (1 samples, 0.04%)</title><rect x="222.5" y="213" width="0.4" height="15.0" fill="rgb(210,138,3)" rx="2" ry="2" />
<text  x="225.46" y="223.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.04%)</title><rect x="232.8" y="181" width="0.5" height="15.0" fill="rgb(208,81,38)" rx="2" ry="2" />
<text  x="235.85" y="191.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.04%)</title><rect x="232.8" y="197" width="0.5" height="15.0" fill="rgb(236,11,53)" rx="2" ry="2" />
<text  x="235.85" y="207.5" ></text>
</g>
<g >
<title>runtime.mPark (1 samples, 0.04%)</title><rect x="1143.3" y="149" width="0.4" height="15.0" fill="rgb(231,189,39)" rx="2" ry="2" />
<text  x="1146.27" y="159.5" ></text>
</g>
<g >
<title>runtime.deductAssistCredit (1 samples, 0.04%)</title><rect x="608.4" y="101" width="0.5" height="15.0" fill="rgb(248,146,49)" rx="2" ry="2" />
<text  x="611.44" y="111.5" ></text>
</g>
<g >
<title>sync.runtime_notifyListWait (1 samples, 0.04%)</title><rect x="602.4" y="197" width="0.4" height="15.0" fill="rgb(219,191,48)" rx="2" ry="2" />
<text  x="605.38" y="207.5" ></text>
</g>
<g >
<title>runtime.semawakeup (19 samples, 0.70%)</title><rect x="1179.6" y="181" width="8.2" height="15.0" fill="rgb(247,53,6)" rx="2" ry="2" />
<text  x="1182.61" y="191.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (18 samples, 0.66%)</title><rect x="1171.4" y="245" width="7.8" height="15.0" fill="rgb(249,64,20)" rx="2" ry="2" />
<text  x="1174.39" y="255.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (9 samples, 0.33%)</title><rect x="680.3" y="197" width="3.9" height="15.0" fill="rgb(237,215,28)" rx="2" ry="2" />
<text  x="683.27" y="207.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (1 samples, 0.04%)</title><rect x="1119.9" y="197" width="0.4" height="15.0" fill="rgb(216,124,25)" rx="2" ry="2" />
<text  x="1122.90" y="207.5" ></text>
</g>
<g >
<title>context.removeChild (3 samples, 0.11%)</title><rect x="216.8" y="213" width="1.3" height="15.0" fill="rgb(254,83,40)" rx="2" ry="2" />
<text  x="219.84" y="223.5" ></text>
</g>
<g >
<title>runtime.injectglist (39 samples, 1.43%)</title><rect x="663.4" y="197" width="16.9" height="15.0" fill="rgb(221,147,54)" rx="2" ry="2" />
<text  x="666.39" y="207.5" ></text>
</g>
<g >
<title>strings.Index (2 samples, 0.07%)</title><rect x="607.6" y="101" width="0.8" height="15.0" fill="rgb(218,79,6)" rx="2" ry="2" />
<text  x="610.57" y="111.5" ></text>
</g>
<g >
<title>indexbytebody (1 samples, 0.04%)</title><rect x="605.0" y="165" width="0.4" height="15.0" fill="rgb(212,17,21)" rx="2" ry="2" />
<text  x="607.98" y="175.5" ></text>
</g>
<g >
<title>runtime.schedule (1,121 samples, 41.11%)</title><rect x="658.2" y="229" width="485.1" height="15.0" fill="rgb(236,187,31)" rx="2" ry="2" />
<text  x="661.20" y="239.5" >runtime.schedule</text>
</g>
<g >
<title>runtime.lockWithRank (3 samples, 0.11%)</title><rect x="656.0" y="197" width="1.3" height="15.0" fill="rgb(249,144,34)" rx="2" ry="2" />
<text  x="659.04" y="207.5" ></text>
</g>
<g >
<title>runtime.stopm (1 samples, 0.04%)</title><rect x="1119.5" y="197" width="0.4" height="15.0" fill="rgb(216,135,18)" rx="2" ry="2" />
<text  x="1122.47" y="207.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (2 samples, 0.07%)</title><rect x="651.3" y="181" width="0.8" height="15.0" fill="rgb(212,199,44)" rx="2" ry="2" />
<text  x="654.28" y="191.5" ></text>
</g>
<g >
<title>runtime.reentersyscall (2 samples, 0.07%)</title><rect x="599.8" y="101" width="0.8" height="15.0" fill="rgb(219,143,12)" rx="2" ry="2" />
<text  x="602.78" y="111.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpanLocked (1 samples, 0.04%)</title><rect x="643.5" y="181" width="0.4" height="15.0" fill="rgb(211,103,3)" rx="2" ry="2" />
<text  x="646.49" y="191.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.04%)</title><rect x="617.5" y="101" width="0.5" height="15.0" fill="rgb(235,19,14)" rx="2" ry="2" />
<text  x="620.52" y="111.5" ></text>
</g>
<g >
<title>runtime.exitsyscall0 (5 samples, 0.18%)</title><rect x="652.1" y="245" width="2.2" height="15.0" fill="rgb(222,139,21)" rx="2" ry="2" />
<text  x="655.14" y="255.5" ></text>
</g>
<g >
<title>runtime.lock2 (6 samples, 0.22%)</title><rect x="680.3" y="181" width="2.6" height="15.0" fill="rgb(230,12,52)" rx="2" ry="2" />
<text  x="683.27" y="191.5" ></text>
</g>
<g >
<title>runtime.osyield (3 samples, 0.11%)</title><rect x="682.9" y="181" width="1.3" height="15.0" fill="rgb(229,212,43)" rx="2" ry="2" />
<text  x="685.86" y="191.5" ></text>
</g>
<g >
<title>net/http.Header.writeSubset (1 samples, 0.04%)</title><rect x="238.5" y="181" width="0.4" height="15.0" fill="rgb(212,213,5)" rx="2" ry="2" />
<text  x="241.47" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan (1 samples, 0.04%)</title><rect x="643.9" y="213" width="0.5" height="15.0" fill="rgb(212,76,35)" rx="2" ry="2" />
<text  x="646.92" y="223.5" ></text>
</g>
<g >
<title>runtime.osyield (4 samples, 0.15%)</title><rect x="1143.7" y="149" width="1.7" height="15.0" fill="rgb(240,219,43)" rx="2" ry="2" />
<text  x="1146.70" y="159.5" ></text>
</g>
<g >
<title>runtime.startm (37 samples, 1.36%)</title><rect x="664.3" y="165" width="16.0" height="15.0" fill="rgb(239,117,25)" rx="2" ry="2" />
<text  x="667.26" y="175.5" ></text>
</g>
<g >
<title>runtime.startTheWorldWithSema (1 samples, 0.04%)</title><rect x="1167.5" y="229" width="0.4" height="15.0" fill="rgb(232,106,2)" rx="2" ry="2" />
<text  x="1170.50" y="239.5" ></text>
</g>
<g >
<title>runtime.signalM (1 samples, 0.04%)</title><rect x="1160.1" y="149" width="0.5" height="15.0" fill="rgb(237,114,12)" rx="2" ry="2" />
<text  x="1163.14" y="159.5" ></text>
</g>
<g >
<title>runtime.semawakeup (37 samples, 1.36%)</title><rect x="664.3" y="133" width="16.0" height="15.0" fill="rgb(245,55,7)" rx="2" ry="2" />
<text  x="667.26" y="143.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.04%)</title><rect x="619.3" y="117" width="0.4" height="15.0" fill="rgb(228,227,40)" rx="2" ry="2" />
<text  x="622.26" y="127.5" ></text>
</g>
<g >
<title>net/textproto.(*Reader).ReadMIMEHeader (9 samples, 0.33%)</title><rect x="225.1" y="229" width="3.9" height="15.0" fill="rgb(214,32,7)" rx="2" ry="2" />
<text  x="228.06" y="239.5" ></text>
</g>
<g >
<title>runtime.semawakeup (1 samples, 0.04%)</title><rect x="1153.2" y="181" width="0.5" height="15.0" fill="rgb(214,91,28)" rx="2" ry="2" />
<text  x="1156.22" y="191.5" ></text>
</g>
<g >
<title>net/textproto.(*Reader).readLineSlice (3 samples, 0.11%)</title><rect x="225.5" y="181" width="1.3" height="15.0" fill="rgb(232,74,13)" rx="2" ry="2" />
<text  x="228.49" y="191.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (1 samples, 0.04%)</title><rect x="1153.2" y="165" width="0.5" height="15.0" fill="rgb(228,3,8)" rx="2" ry="2" />
<text  x="1156.22" y="175.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.04%)</title><rect x="610.2" y="133" width="0.4" height="15.0" fill="rgb(209,156,17)" rx="2" ry="2" />
<text  x="613.17" y="143.5" ></text>
</g>
<g >
<title>runtime.pthread_kill (7 samples, 0.26%)</title><rect x="1160.6" y="149" width="3.0" height="15.0" fill="rgb(214,132,28)" rx="2" ry="2" />
<text  x="1163.58" y="159.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker.func1 (1 samples, 0.04%)</title><rect x="657.8" y="229" width="0.4" height="15.0" fill="rgb(209,109,30)" rx="2" ry="2" />
<text  x="660.77" y="239.5" ></text>
</g>
<g >
<title>runtime.stopTheWorldWithSema (3 samples, 0.11%)</title><rect x="1188.3" y="245" width="1.3" height="15.0" fill="rgb(237,140,52)" rx="2" ry="2" />
<text  x="1191.27" y="255.5" ></text>
</g>
<g >
<title>runtime.growslice (3 samples, 0.11%)</title><rect x="615.4" y="117" width="1.3" height="15.0" fill="rgb(217,49,16)" rx="2" ry="2" />
<text  x="618.36" y="127.5" ></text>
</g>
<g >
<title>runtime.write1 (4 samples, 0.15%)</title><rect x="1017.3" y="165" width="1.8" height="15.0" fill="rgb(227,153,48)" rx="2" ry="2" />
<text  x="1020.35" y="175.5" ></text>
</g>
<g >
<title>runtime.unlock2 (1 samples, 0.04%)</title><rect x="233.3" y="181" width="0.4" height="15.0" fill="rgb(234,108,4)" rx="2" ry="2" />
<text  x="236.28" y="191.5" ></text>
</g>
<g >
<title>runtime.walltime (2 samples, 0.07%)</title><rect x="237.6" y="149" width="0.9" height="15.0" fill="rgb(235,102,25)" rx="2" ry="2" />
<text  x="240.61" y="159.5" ></text>
</g>
<g >
<title>syscall.Read (42 samples, 1.54%)</title><rect x="624.0" y="213" width="18.2" height="15.0" fill="rgb(207,137,34)" rx="2" ry="2" />
<text  x="627.02" y="223.5" ></text>
</g>
<g >
<title>runtime.usleep (3 samples, 0.11%)</title><rect x="682.9" y="165" width="1.3" height="15.0" fill="rgb(248,124,31)" rx="2" ry="2" />
<text  x="685.86" y="175.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).push (1 samples, 0.04%)</title><rect x="657.8" y="213" width="0.4" height="15.0" fill="rgb(216,114,41)" rx="2" ry="2" />
<text  x="660.77" y="223.5" ></text>
</g>
<g >
<title>runtime.mallocgc (4 samples, 0.15%)</title><rect x="610.6" y="133" width="1.7" height="15.0" fill="rgb(211,4,18)" rx="2" ry="2" />
<text  x="613.60" y="143.5" ></text>
</g>
<g >
<title>strings.Contains (2 samples, 0.07%)</title><rect x="607.6" y="117" width="0.8" height="15.0" fill="rgb(225,21,48)" rx="2" ry="2" />
<text  x="610.57" y="127.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.04%)</title><rect x="230.7" y="229" width="0.4" height="15.0" fill="rgb(253,156,37)" rx="2" ry="2" />
<text  x="233.68" y="239.5" ></text>
</g>
<g >
<title>runtime.notesleep (1 samples, 0.04%)</title><rect x="655.2" y="165" width="0.4" height="15.0" fill="rgb(216,225,25)" rx="2" ry="2" />
<text  x="658.17" y="175.5" ></text>
</g>
<g >
<title>runtime.preemptall (6 samples, 0.22%)</title><rect x="1164.5" y="213" width="2.6" height="15.0" fill="rgb(250,209,17)" rx="2" ry="2" />
<text  x="1167.47" y="223.5" ></text>
</g>
<g >
<title>fmt.(*fmt).padString (1 samples, 0.04%)</title><rect x="605.8" y="85" width="0.5" height="15.0" fill="rgb(241,205,52)" rx="2" ry="2" />
<text  x="608.84" y="95.5" ></text>
</g>
<g >
<title>aeshashbody (1 samples, 0.04%)</title><rect x="609.7" y="149" width="0.5" height="15.0" fill="rgb(230,171,48)" rx="2" ry="2" />
<text  x="612.74" y="159.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint32).CompareAndSwap (1 samples, 0.04%)</title><rect x="233.7" y="197" width="0.4" height="15.0" fill="rgb(241,141,2)" rx="2" ry="2" />
<text  x="236.71" y="207.5" ></text>
</g>
<g >
<title>runtime.makechan (2 samples, 0.07%)</title><rect x="229.0" y="229" width="0.8" height="15.0" fill="rgb(220,52,42)" rx="2" ry="2" />
<text  x="231.95" y="239.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).free (1 samples, 0.04%)</title><rect x="643.5" y="165" width="0.4" height="15.0" fill="rgb(216,173,36)" rx="2" ry="2" />
<text  x="646.49" y="175.5" ></text>
</g>
<g >
<title>net/http.(*ServeMux).ServeHTTP (46 samples, 1.69%)</title><rect x="603.2" y="229" width="19.9" height="15.0" fill="rgb(219,191,11)" rx="2" ry="2" />
<text  x="606.25" y="239.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.04%)</title><rect x="618.4" y="117" width="0.4" height="15.0" fill="rgb(232,219,24)" rx="2" ry="2" />
<text  x="621.39" y="127.5" ></text>
</g>
<g >
<title>runtime.mallocgc (4 samples, 0.15%)</title><rect x="621.0" y="101" width="1.7" height="15.0" fill="rgb(207,60,15)" rx="2" ry="2" />
<text  x="623.99" y="111.5" ></text>
</g>
<g >
<title>all (2,727 samples, 100%)</title><rect x="10.0" y="277" width="1180.0" height="15.0" fill="rgb(236,72,27)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>runtime.procyield (3 samples, 0.11%)</title><rect x="1121.6" y="181" width="1.3" height="15.0" fill="rgb(223,187,25)" rx="2" ry="2" />
<text  x="1124.63" y="191.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (1 samples, 0.04%)</title><rect x="233.3" y="197" width="0.4" height="15.0" fill="rgb(218,77,52)" rx="2" ry="2" />
<text  x="236.28" y="207.5" ></text>
</g>
<g >
<title>runtime.scanobject (8 samples, 0.29%)</title><rect x="647.4" y="197" width="3.4" height="15.0" fill="rgb(235,70,21)" rx="2" ry="2" />
<text  x="650.38" y="207.5" ></text>
</g>
<g >
<title>net/url.unescape (1 samples, 0.04%)</title><rect x="223.3" y="165" width="0.5" height="15.0" fill="rgb(217,125,37)" rx="2" ry="2" />
<text  x="226.33" y="175.5" ></text>
</g>
<g >
<title>runtime.injectglist.func1 (1 samples, 0.04%)</title><rect x="655.6" y="181" width="0.4" height="15.0" fill="rgb(210,129,35)" rx="2" ry="2" />
<text  x="658.60" y="191.5" ></text>
</g>
<g >
<title>net/url.parse (2 samples, 0.07%)</title><rect x="222.9" y="197" width="0.9" height="15.0" fill="rgb(236,195,32)" rx="2" ry="2" />
<text  x="225.89" y="207.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.07%)</title><rect x="618.0" y="133" width="0.8" height="15.0" fill="rgb(246,127,0)" rx="2" ry="2" />
<text  x="620.96" y="143.5" ></text>
</g>
<g >
<title>regexp.(*Regexp).backtrack (3 samples, 0.11%)</title><rect x="619.7" y="101" width="1.3" height="15.0" fill="rgb(207,28,23)" rx="2" ry="2" />
<text  x="622.69" y="111.5" ></text>
</g>
<g >
<title>runtime.semawakeup (1 samples, 0.04%)</title><rect x="1145.9" y="117" width="0.4" height="15.0" fill="rgb(231,129,51)" rx="2" ry="2" />
<text  x="1148.86" y="127.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (5 samples, 0.18%)</title><rect x="1146.7" y="165" width="2.2" height="15.0" fill="rgb(252,82,20)" rx="2" ry="2" />
<text  x="1149.73" y="175.5" ></text>
</g>
<g >
<title>runtime.memmove (2 samples, 0.07%)</title><rect x="646.1" y="165" width="0.8" height="15.0" fill="rgb(252,52,14)" rx="2" ry="2" />
<text  x="649.08" y="175.5" ></text>
</g>
<g >
<title>syscall.syscall (42 samples, 1.54%)</title><rect x="624.0" y="181" width="18.2" height="15.0" fill="rgb(241,14,51)" rx="2" ry="2" />
<text  x="627.02" y="191.5" ></text>
</g>
<g >
<title>runtime.startm (1 samples, 0.04%)</title><rect x="1145.9" y="149" width="0.4" height="15.0" fill="rgb(228,189,8)" rx="2" ry="2" />
<text  x="1148.86" y="159.5" ></text>
</g>
<g >
<title>runtime.madvise (8 samples, 0.29%)</title><rect x="1156.7" y="213" width="3.4" height="15.0" fill="rgb(205,98,41)" rx="2" ry="2" />
<text  x="1159.68" y="223.5" ></text>
</g>
<g >
<title>net.(*netFD).Read (43 samples, 1.58%)</title><rect x="623.6" y="229" width="18.6" height="15.0" fill="rgb(206,110,17)" rx="2" ry="2" />
<text  x="626.58" y="239.5" ></text>
</g>
<g >
<title>net/textproto.readMIMEHeader (9 samples, 0.33%)</title><rect x="225.1" y="213" width="3.9" height="15.0" fill="rgb(229,132,12)" rx="2" ry="2" />
<text  x="228.06" y="223.5" ></text>
</g>
<g >
<title>runtime.libcCall (1 samples, 0.04%)</title><rect x="1016.1" y="165" width="0.4" height="15.0" fill="rgb(223,148,43)" rx="2" ry="2" />
<text  x="1019.05" y="175.5" ></text>
</g>
<g >
<title>github.com/varstr/uaparser.Parse (6 samples, 0.22%)</title><rect x="606.7" y="149" width="2.6" height="15.0" fill="rgb(251,120,17)" rx="2" ry="2" />
<text  x="609.71" y="159.5" ></text>
</g>
<g >
<title>regexp.(*Regexp).backtrack (6 samples, 0.22%)</title><rect x="612.8" y="101" width="2.6" height="15.0" fill="rgb(226,170,49)" rx="2" ry="2" />
<text  x="615.76" y="111.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.04%)</title><rect x="653.9" y="197" width="0.4" height="15.0" fill="rgb(246,134,36)" rx="2" ry="2" />
<text  x="656.87" y="207.5" ></text>
</g>
<g >
<title>github.com/vivekprm/go-pprof-demo/stats.clean (7 samples, 0.26%)</title><rect x="619.7" y="165" width="3.0" height="15.0" fill="rgb(233,220,8)" rx="2" ry="2" />
<text  x="622.69" y="175.5" ></text>
</g>
<g >
<title>bytes.IndexByte (2 samples, 0.07%)</title><rect x="224.2" y="181" width="0.9" height="15.0" fill="rgb(225,174,40)" rx="2" ry="2" />
<text  x="227.19" y="191.5" ></text>
</g>
<g >
<title>github.com/vivekprm/go-pprof-demo/stats.IncCounter (14 samples, 0.51%)</title><rect x="610.6" y="181" width="6.1" height="15.0" fill="rgb(246,155,39)" rx="2" ry="2" />
<text  x="613.60" y="191.5" ></text>
</g>
<g >
<title>net/url.ParseRequestURI (2 samples, 0.07%)</title><rect x="222.9" y="213" width="0.9" height="15.0" fill="rgb(230,118,5)" rx="2" ry="2" />
<text  x="225.89" y="223.5" ></text>
</g>
<g >
<title>runtime.mapassign_faststr (1 samples, 0.04%)</title><rect x="609.7" y="165" width="0.5" height="15.0" fill="rgb(238,148,42)" rx="2" ry="2" />
<text  x="612.74" y="175.5" ></text>
</g>
<g >
<title>runtime.mPark (1 samples, 0.04%)</title><rect x="655.2" y="181" width="0.4" height="15.0" fill="rgb(208,103,3)" rx="2" ry="2" />
<text  x="658.17" y="191.5" ></text>
</g>
<g >
<title>runtime.notewakeup (37 samples, 1.36%)</title><rect x="1127.3" y="165" width="16.0" height="15.0" fill="rgb(243,117,46)" rx="2" ry="2" />
<text  x="1130.26" y="175.5" ></text>
</g>
<g >
<title>runtime.forEachP (8 samples, 0.29%)</title><rect x="1163.6" y="229" width="3.5" height="15.0" fill="rgb(248,45,43)" rx="2" ry="2" />
<text  x="1166.60" y="239.5" ></text>
</g>
<g >
<title>runtime.madvise (7 samples, 0.26%)</title><rect x="1153.7" y="213" width="3.0" height="15.0" fill="rgb(224,204,16)" rx="2" ry="2" />
<text  x="1156.65" y="223.5" ></text>
</g>
<g >
<title>runtime.freeSomeWbufs.func1 (1 samples, 0.04%)</title><rect x="643.5" y="213" width="0.4" height="15.0" fill="rgb(217,24,32)" rx="2" ry="2" />
<text  x="646.49" y="223.5" ></text>
</g>
<g >
<title>runtime.pthread_kill (3 samples, 0.11%)</title><rect x="1188.3" y="181" width="1.3" height="15.0" fill="rgb(253,30,39)" rx="2" ry="2" />
<text  x="1191.27" y="191.5" ></text>
</g>
<g >
<title>runtime.mapdelete (3 samples, 0.11%)</title><rect x="216.8" y="197" width="1.3" height="15.0" fill="rgb(238,40,33)" rx="2" ry="2" />
<text  x="219.84" y="207.5" ></text>
</g>
<g >
<title>net/http.Header.WriteSubset (1 samples, 0.04%)</title><rect x="238.5" y="197" width="0.4" height="15.0" fill="rgb(209,10,16)" rx="2" ry="2" />
<text  x="241.47" y="207.5" ></text>
</g>
<g >
<title>syscall.read (475 samples, 17.42%)</title><rect x="10.9" y="149" width="205.5" height="15.0" fill="rgb(235,218,14)" rx="2" ry="2" />
<text  x="13.87" y="159.5" >syscall.read</text>
</g>
<g >
<title>runtime.usleep (1 samples, 0.04%)</title><rect x="1179.2" y="197" width="0.4" height="15.0" fill="rgb(232,59,52)" rx="2" ry="2" />
<text  x="1182.18" y="207.5" ></text>
</g>
<g >
<title>runtime.unlock2 (1 samples, 0.04%)</title><rect x="1189.6" y="229" width="0.4" height="15.0" fill="rgb(219,162,10)" rx="2" ry="2" />
<text  x="1192.57" y="239.5" ></text>
</g>
<g >
<title>runtime.makemap_small (1 samples, 0.04%)</title><rect x="609.3" y="165" width="0.4" height="15.0" fill="rgb(210,125,25)" rx="2" ry="2" />
<text  x="612.30" y="175.5" ></text>
</g>
<g >
<title>net/textproto.(*Reader).readContinuedLineSlice (4 samples, 0.15%)</title><rect x="225.1" y="197" width="1.7" height="15.0" fill="rgb(224,86,47)" rx="2" ry="2" />
<text  x="228.06" y="207.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (2 samples, 0.07%)</title><rect x="1152.8" y="213" width="0.9" height="15.0" fill="rgb(219,173,22)" rx="2" ry="2" />
<text  x="1155.79" y="223.5" ></text>
</g>
<g >
<title>strings.Index (1 samples, 0.04%)</title><rect x="221.6" y="181" width="0.4" height="15.0" fill="rgb(224,148,42)" rx="2" ry="2" />
<text  x="224.60" y="191.5" ></text>
</g>
<g >
<title>runtime.write (4 samples, 0.15%)</title><rect x="1017.3" y="181" width="1.8" height="15.0" fill="rgb(225,214,35)" rx="2" ry="2" />
<text  x="1020.35" y="191.5" ></text>
</g>
<g >
<title>runtime.findObject (2 samples, 0.07%)</title><rect x="651.3" y="149" width="0.8" height="15.0" fill="rgb(206,25,36)" rx="2" ry="2" />
<text  x="654.28" y="159.5" ></text>
</g>
<g >
<title>runtime.gcmarknewobject (1 samples, 0.04%)</title><rect x="611.0" y="117" width="0.5" height="15.0" fill="rgb(247,161,53)" rx="2" ry="2" />
<text  x="614.03" y="127.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (1 samples, 0.04%)</title><rect x="1187.8" y="197" width="0.5" height="15.0" fill="rgb(230,139,6)" rx="2" ry="2" />
<text  x="1190.84" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeManual (1 samples, 0.04%)</title><rect x="643.5" y="197" width="0.4" height="15.0" fill="rgb(209,72,35)" rx="2" ry="2" />
<text  x="646.49" y="207.5" ></text>
</g>
<g >
<title>runtime.preemptone (3 samples, 0.11%)</title><rect x="1188.3" y="213" width="1.3" height="15.0" fill="rgb(251,66,11)" rx="2" ry="2" />
<text  x="1191.27" y="223.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.04%)</title><rect x="608.4" y="117" width="0.5" height="15.0" fill="rgb(210,214,48)" rx="2" ry="2" />
<text  x="611.44" y="127.5" ></text>
</g>
<g >
<title>github.com/vivekprm/go-pprof-demo/handlers.getStatsTags (9 samples, 0.33%)</title><rect x="606.7" y="181" width="3.9" height="15.0" fill="rgb(208,144,53)" rx="2" ry="2" />
<text  x="609.71" y="191.5" ></text>
</g>
<g >
<title>internal/poll.setDeadlineImpl (3 samples, 0.11%)</title><rect x="232.8" y="213" width="1.3" height="15.0" fill="rgb(246,187,39)" rx="2" ry="2" />
<text  x="235.85" y="223.5" ></text>
</g>
<g >
<title>runtime.pidleget (1 samples, 0.04%)</title><rect x="1019.1" y="197" width="0.4" height="15.0" fill="rgb(221,55,7)" rx="2" ry="2" />
<text  x="1022.08" y="207.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.04%)</title><rect x="1169.7" y="213" width="0.4" height="15.0" fill="rgb(249,10,7)" rx="2" ry="2" />
<text  x="1172.66" y="223.5" ></text>
</g>
<g >
<title>runtime.runSafePointFn (1 samples, 0.04%)</title><rect x="1187.8" y="245" width="0.5" height="15.0" fill="rgb(230,174,50)" rx="2" ry="2" />
<text  x="1190.84" y="255.5" ></text>
</g>
<g >
<title>runtime.forEachP (1 samples, 0.04%)</title><rect x="644.4" y="197" width="0.4" height="15.0" fill="rgb(243,8,46)" rx="2" ry="2" />
<text  x="647.35" y="207.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (36 samples, 1.32%)</title><rect x="1127.3" y="133" width="15.5" height="15.0" fill="rgb(251,207,35)" rx="2" ry="2" />
<text  x="1130.26" y="143.5" ></text>
</g>
<g >
<title>context.withCancel (6 samples, 0.22%)</title><rect x="218.6" y="213" width="2.6" height="15.0" fill="rgb(223,39,15)" rx="2" ry="2" />
<text  x="221.57" y="223.5" ></text>
</g>
<g >
<title>runtime.goexit0 (8 samples, 0.29%)</title><rect x="654.3" y="245" width="3.5" height="15.0" fill="rgb(209,185,42)" rx="2" ry="2" />
<text  x="657.31" y="255.5" ></text>
</g>
<g >
<title>syscall.Write (831 samples, 30.47%)</title><rect x="241.1" y="165" width="359.5" height="15.0" fill="rgb(230,90,41)" rx="2" ry="2" />
<text  x="244.07" y="175.5" >syscall.Write</text>
</g>
<g >
<title>runtime.semasleep (4 samples, 0.15%)</title><rect x="1171.4" y="213" width="1.7" height="15.0" fill="rgb(216,16,31)" rx="2" ry="2" />
<text  x="1174.39" y="223.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.04%)</title><rect x="642.2" y="213" width="0.4" height="15.0" fill="rgb(226,78,1)" rx="2" ry="2" />
<text  x="645.19" y="223.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep (1 samples, 0.04%)</title><rect x="643.9" y="229" width="0.5" height="15.0" fill="rgb(223,135,34)" rx="2" ry="2" />
<text  x="646.92" y="239.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.04%)</title><rect x="608.9" y="117" width="0.4" height="15.0" fill="rgb(214,6,42)" rx="2" ry="2" />
<text  x="611.87" y="127.5" ></text>
</g>
<g >
<title>regexp.(*Regexp).tryBacktrack (3 samples, 0.11%)</title><rect x="613.2" y="85" width="1.3" height="15.0" fill="rgb(234,114,53)" rx="2" ry="2" />
<text  x="616.20" y="95.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.04%)</title><rect x="612.3" y="117" width="0.5" height="15.0" fill="rgb(223,229,33)" rx="2" ry="2" />
<text  x="615.33" y="127.5" ></text>
</g>
<g >
<title>regexp.(*Regexp).tryBacktrack (1 samples, 0.04%)</title><rect x="619.7" y="85" width="0.4" height="15.0" fill="rgb(219,74,39)" rx="2" ry="2" />
<text  x="622.69" y="95.5" ></text>
</g>
<g >
<title>runtime.mPark (181 samples, 6.64%)</title><rect x="684.2" y="197" width="78.3" height="15.0" fill="rgb(245,116,41)" rx="2" ry="2" />
<text  x="687.16" y="207.5" >runtime.m..</text>
</g>
<g >
<title>runtime.spanOfUnchecked (1 samples, 0.04%)</title><rect x="650.8" y="197" width="0.5" height="15.0" fill="rgb(229,177,32)" rx="2" ry="2" />
<text  x="653.84" y="207.5" ></text>
</g>
<g >
<title>github.com/varstr/uaparser.searchIn (4 samples, 0.15%)</title><rect x="606.7" y="133" width="1.7" height="15.0" fill="rgb(246,84,23)" rx="2" ry="2" />
<text  x="609.71" y="143.5" ></text>
</g>
<g >
<title>memeqbody (1 samples, 0.04%)</title><rect x="226.8" y="165" width="0.4" height="15.0" fill="rgb(245,53,48)" rx="2" ry="2" />
<text  x="229.79" y="175.5" ></text>
</g>
<g >
<title>runtime.findnull (1 samples, 0.04%)</title><rect x="654.7" y="197" width="0.5" height="15.0" fill="rgb(249,62,14)" rx="2" ry="2" />
<text  x="657.74" y="207.5" ></text>
</g>
<g >
<title>time.Now (2 samples, 0.07%)</title><rect x="237.6" y="181" width="0.9" height="15.0" fill="rgb(231,177,19)" rx="2" ry="2" />
<text  x="240.61" y="191.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (36 samples, 1.32%)</title><rect x="664.3" y="117" width="15.5" height="15.0" fill="rgb(229,38,29)" rx="2" ry="2" />
<text  x="667.26" y="127.5" ></text>
</g>
<g >
<title>runtime.ready (1 samples, 0.04%)</title><rect x="643.1" y="149" width="0.4" height="15.0" fill="rgb(224,198,5)" rx="2" ry="2" />
<text  x="646.05" y="159.5" ></text>
</g>
<g >
<title>runtime.findRunnable (1,065 samples, 39.05%)</title><rect x="659.9" y="213" width="460.9" height="15.0" fill="rgb(253,193,38)" rx="2" ry="2" />
<text  x="662.93" y="223.5" >runtime.findRunnable</text>
</g>
<g >
<title>aeshashbody (1 samples, 0.04%)</title><rect x="230.2" y="213" width="0.5" height="15.0" fill="rgb(225,42,13)" rx="2" ry="2" />
<text  x="233.25" y="223.5" ></text>
</g>
<g >
<title>runtime.interhash (2 samples, 0.07%)</title><rect x="217.3" y="181" width="0.8" height="15.0" fill="rgb(228,161,2)" rx="2" ry="2" />
<text  x="220.27" y="191.5" ></text>
</g>
<g >
<title>runtime.bucketShift (1 samples, 0.04%)</title><rect x="219.4" y="181" width="0.5" height="15.0" fill="rgb(213,108,14)" rx="2" ry="2" />
<text  x="222.43" y="191.5" ></text>
</g>
<g >
<title>runtime.wakep (19 samples, 0.70%)</title><rect x="1179.6" y="229" width="8.2" height="15.0" fill="rgb(249,168,50)" rx="2" ry="2" />
<text  x="1182.61" y="239.5" ></text>
</g>
<g >
<title>syscall.syscall (831 samples, 30.47%)</title><rect x="241.1" y="133" width="359.5" height="15.0" fill="rgb(249,106,2)" rx="2" ry="2" />
<text  x="244.07" y="143.5" >syscall.syscall</text>
</g>
<g >
<title>context.propagateCancel (6 samples, 0.22%)</title><rect x="218.6" y="197" width="2.6" height="15.0" fill="rgb(221,169,35)" rx="2" ry="2" />
<text  x="221.57" y="207.5" ></text>
</g>
<g >
<title>sync.runtime_notifyListNotifyAll (2 samples, 0.07%)</title><rect x="642.6" y="229" width="0.9" height="15.0" fill="rgb(250,35,33)" rx="2" ry="2" />
<text  x="645.62" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (7 samples, 0.26%)</title><rect x="1153.7" y="245" width="3.0" height="15.0" fill="rgb(223,112,25)" rx="2" ry="2" />
<text  x="1156.65" y="255.5" ></text>
</g>
<g >
<title>runtime.notewakeup (3 samples, 0.11%)</title><rect x="1170.1" y="181" width="1.3" height="15.0" fill="rgb(205,106,6)" rx="2" ry="2" />
<text  x="1173.10" y="191.5" ></text>
</g>
<g >
<title>runtime.goready.func1 (1 samples, 0.04%)</title><rect x="643.1" y="165" width="0.4" height="15.0" fill="rgb(224,95,53)" rx="2" ry="2" />
<text  x="646.05" y="175.5" ></text>
</g>
<g >
<title>runtime.walltime (2 samples, 0.07%)</title><rect x="231.1" y="197" width="0.9" height="15.0" fill="rgb(220,17,24)" rx="2" ry="2" />
<text  x="234.11" y="207.5" ></text>
</g>
<g >
<title>runtime.bgsweep (2 samples, 0.07%)</title><rect x="643.5" y="261" width="0.9" height="15.0" fill="rgb(228,100,52)" rx="2" ry="2" />
<text  x="646.49" y="271.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.04%)</title><rect x="234.6" y="213" width="0.4" height="15.0" fill="rgb(205,40,31)" rx="2" ry="2" />
<text  x="237.58" y="223.5" ></text>
</g>
<g >
<title>strings.(*Builder).grow (1 samples, 0.04%)</title><rect x="612.3" y="149" width="0.5" height="15.0" fill="rgb(222,149,52)" rx="2" ry="2" />
<text  x="615.33" y="159.5" ></text>
</g>
<g >
<title>runtime.osyield (14 samples, 0.51%)</title><rect x="1173.1" y="229" width="6.1" height="15.0" fill="rgb(252,215,15)" rx="2" ry="2" />
<text  x="1176.12" y="239.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).SetReadDeadline (3 samples, 0.11%)</title><rect x="232.8" y="229" width="1.3" height="15.0" fill="rgb(208,118,49)" rx="2" ry="2" />
<text  x="235.85" y="239.5" ></text>
</g>
<g >
<title>runtime.netpollBreak (4 samples, 0.15%)</title><rect x="1017.3" y="197" width="1.8" height="15.0" fill="rgb(210,228,49)" rx="2" ry="2" />
<text  x="1020.35" y="207.5" ></text>
</g>
<g >
<title>net/http.(*conn).hijacked (1 samples, 0.04%)</title><rect x="606.3" y="117" width="0.4" height="15.0" fill="rgb(223,69,34)" rx="2" ry="2" />
<text  x="609.27" y="127.5" ></text>
</g>
<g >
<title>net/http.appendTime (1 samples, 0.04%)</title><rect x="236.3" y="181" width="0.4" height="15.0" fill="rgb(207,162,23)" rx="2" ry="2" />
<text  x="239.31" y="191.5" ></text>
</g>
<g >
<title>net/http.(*response).write (1 samples, 0.04%)</title><rect x="606.3" y="133" width="0.4" height="15.0" fill="rgb(218,150,35)" rx="2" ry="2" />
<text  x="609.27" y="143.5" ></text>
</g>
<g >
<title>runtime.mapassign_faststr (2 samples, 0.07%)</title><rect x="227.2" y="197" width="0.9" height="15.0" fill="rgb(252,218,33)" rx="2" ry="2" />
<text  x="230.22" y="207.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (3 samples, 0.11%)</title><rect x="1167.9" y="181" width="1.3" height="15.0" fill="rgb(220,169,43)" rx="2" ry="2" />
<text  x="1170.93" y="191.5" ></text>
</g>
<g >
<title>syscall.read (42 samples, 1.54%)</title><rect x="624.0" y="197" width="18.2" height="15.0" fill="rgb(246,200,27)" rx="2" ry="2" />
<text  x="627.02" y="207.5" ></text>
</g>
<g >
<title>runtime.walltime (1 samples, 0.04%)</title><rect x="232.0" y="197" width="0.4" height="15.0" fill="rgb(206,69,19)" rx="2" ry="2" />
<text  x="234.98" y="207.5" ></text>
</g>
<g >
<title>runtime.semawakeup (1 samples, 0.04%)</title><rect x="1187.8" y="213" width="0.5" height="15.0" fill="rgb(215,177,11)" rx="2" ry="2" />
<text  x="1190.84" y="223.5" ></text>
</g>
<g >
<title>runtime.growslice (4 samples, 0.15%)</title><rect x="610.6" y="149" width="1.7" height="15.0" fill="rgb(236,172,35)" rx="2" ry="2" />
<text  x="613.60" y="159.5" ></text>
</g>
<g >
<title>runtime.deductAssistCredit (1 samples, 0.04%)</title><rect x="617.5" y="85" width="0.5" height="15.0" fill="rgb(236,120,16)" rx="2" ry="2" />
<text  x="620.52" y="95.5" ></text>
</g>
<g >
<title>runtime.casgstatus (1 samples, 0.04%)</title><rect x="659.1" y="197" width="0.4" height="15.0" fill="rgb(252,34,3)" rx="2" ry="2" />
<text  x="662.06" y="207.5" ></text>
</g>
<g >
<title>runtime.semasleep (5 samples, 0.18%)</title><rect x="1146.7" y="181" width="2.2" height="15.0" fill="rgb(211,117,3)" rx="2" ry="2" />
<text  x="1149.73" y="191.5" ></text>
</g>
<g >
<title>runtime.ready (3 samples, 0.11%)</title><rect x="1170.1" y="229" width="1.3" height="15.0" fill="rgb(214,80,49)" rx="2" ry="2" />
<text  x="1173.10" y="239.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.04%)</title><rect x="229.4" y="213" width="0.4" height="15.0" fill="rgb(231,82,40)" rx="2" ry="2" />
<text  x="232.38" y="223.5" ></text>
</g>
<g >
<title>aeshashbody (1 samples, 0.04%)</title><rect x="227.7" y="181" width="0.4" height="15.0" fill="rgb(222,88,46)" rx="2" ry="2" />
<text  x="230.65" y="191.5" ></text>
</g>
<g >
<title>runtime.sweepone (1 samples, 0.04%)</title><rect x="643.9" y="245" width="0.5" height="15.0" fill="rgb(207,201,0)" rx="2" ry="2" />
<text  x="646.92" y="255.5" ></text>
</g>
<g >
<title>runtime.checkTimers (1 samples, 0.04%)</title><rect x="1021.2" y="181" width="0.5" height="15.0" fill="rgb(228,59,52)" rx="2" ry="2" />
<text  x="1024.24" y="191.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (3 samples, 0.11%)</title><rect x="1167.9" y="229" width="1.3" height="15.0" fill="rgb(240,118,6)" rx="2" ry="2" />
<text  x="1170.93" y="239.5" ></text>
</g>
<g >
<title>github.com/vivekprm/go-pprof-demo/handlers.Hello (3 samples, 0.11%)</title><rect x="605.4" y="181" width="1.3" height="15.0" fill="rgb(247,38,29)" rx="2" ry="2" />
<text  x="608.41" y="191.5" ></text>
</g>
<g >
<title>github.com/vivekprm/go-pprof-demo/stats.clean (9 samples, 0.33%)</title><rect x="612.8" y="165" width="3.9" height="15.0" fill="rgb(205,145,8)" rx="2" ry="2" />
<text  x="615.76" y="175.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (1 samples, 0.04%)</title><rect x="1160.1" y="229" width="0.5" height="15.0" fill="rgb(230,141,54)" rx="2" ry="2" />
<text  x="1163.14" y="239.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (1 samples, 0.04%)</title><rect x="1167.1" y="229" width="0.4" height="15.0" fill="rgb(211,190,32)" rx="2" ry="2" />
<text  x="1170.07" y="239.5" ></text>
</g>
<g >
<title>net/http.(*conn).readRequest (32 samples, 1.17%)</title><rect x="218.1" y="245" width="13.9" height="15.0" fill="rgb(225,227,7)" rx="2" ry="2" />
<text  x="221.13" y="255.5" ></text>
</g>
<g >
<title>bufio.(*Writer).WriteString (1 samples, 0.04%)</title><rect x="236.7" y="165" width="0.5" height="15.0" fill="rgb(228,162,21)" rx="2" ry="2" />
<text  x="239.74" y="175.5" ></text>
</g>
<g >
<title>regexp/syntax.(*Inst).MatchRune (2 samples, 0.07%)</title><rect x="614.5" y="85" width="0.9" height="15.0" fill="rgb(210,52,4)" rx="2" ry="2" />
<text  x="617.50" y="95.5" ></text>
</g>
<g >
<title>net/http.(*connReader).backgroundRead (47 samples, 1.72%)</title><rect x="623.1" y="261" width="20.4" height="15.0" fill="rgb(216,110,43)" rx="2" ry="2" />
<text  x="626.15" y="271.5" ></text>
</g>
<g >
<title>runtime.systemstack (84 samples, 3.08%)</title><rect x="1153.7" y="261" width="36.3" height="15.0" fill="rgb(219,60,40)" rx="2" ry="2" />
<text  x="1156.65" y="271.5" >run..</text>
</g>
<g >
<title>net/http.(*chunkWriter).writeHeader (6 samples, 0.22%)</title><rect x="235.9" y="197" width="2.6" height="15.0" fill="rgb(233,5,36)" rx="2" ry="2" />
<text  x="238.87" y="207.5" ></text>
</g>
<g >
<title>net/http.checkConnErrorWriter.Write (834 samples, 30.58%)</title><rect x="239.8" y="213" width="360.8" height="15.0" fill="rgb(209,4,52)" rx="2" ry="2" />
<text  x="242.77" y="223.5" >net/http.checkConnErrorWriter.Write</text>
</g>
<g >
<title>fmt.(*pp).printArg (2 samples, 0.07%)</title><rect x="605.4" y="133" width="0.9" height="15.0" fill="rgb(241,155,52)" rx="2" ry="2" />
<text  x="608.41" y="143.5" ></text>
</g>
<g >
<title>runtime.goready (2 samples, 0.07%)</title><rect x="642.6" y="197" width="0.9" height="15.0" fill="rgb(251,108,36)" rx="2" ry="2" />
<text  x="645.62" y="207.5" ></text>
</g>
<g >
<title>net/textproto.(*Reader).ReadLine (2 samples, 0.07%)</title><rect x="224.2" y="229" width="0.9" height="15.0" fill="rgb(247,153,24)" rx="2" ry="2" />
<text  x="227.19" y="239.5" ></text>
</g>
<g >
<title>context.(*cancelCtx).Value (1 samples, 0.04%)</title><rect x="219.0" y="165" width="0.4" height="15.0" fill="rgb(221,13,0)" rx="2" ry="2" />
<text  x="222.00" y="175.5" ></text>
</g>
<g >
<title>bufio.(*Reader).ReadLine (2 samples, 0.07%)</title><rect x="224.2" y="197" width="0.9" height="15.0" fill="rgb(208,192,38)" rx="2" ry="2" />
<text  x="227.19" y="207.5" ></text>
</g>
<g >
<title>bytes.IndexByte (2 samples, 0.07%)</title><rect x="225.9" y="149" width="0.9" height="15.0" fill="rgb(238,188,15)" rx="2" ry="2" />
<text  x="228.92" y="159.5" ></text>
</g>
<g >
<title>runtime.lock2 (4 samples, 0.15%)</title><rect x="1171.4" y="229" width="1.7" height="15.0" fill="rgb(212,102,13)" rx="2" ry="2" />
<text  x="1174.39" y="239.5" ></text>
</g>
<g >
<title>runtime.(*guintptr).cas (1 samples, 0.04%)</title><rect x="1022.5" y="165" width="0.5" height="15.0" fill="rgb(249,63,6)" rx="2" ry="2" />
<text  x="1025.54" y="175.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.04%)</title><rect x="236.7" y="149" width="0.5" height="15.0" fill="rgb(221,221,19)" rx="2" ry="2" />
<text  x="239.74" y="159.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.04%)</title><rect x="1145.9" y="133" width="0.4" height="15.0" fill="rgb(222,52,5)" rx="2" ry="2" />
<text  x="1148.86" y="143.5" ></text>
</g>
<g >
<title>runtime.newobject (2 samples, 0.07%)</title><rect x="608.4" y="133" width="0.9" height="15.0" fill="rgb(215,196,21)" rx="2" ry="2" />
<text  x="611.44" y="143.5" ></text>
</g>
<g >
<title>runtime.semasleep (4 samples, 0.15%)</title><rect x="652.1" y="197" width="1.8" height="15.0" fill="rgb(211,125,34)" rx="2" ry="2" />
<text  x="655.14" y="207.5" ></text>
</g>
<g >
<title>runtime.newproc.func1 (20 samples, 0.73%)</title><rect x="1179.2" y="245" width="8.6" height="15.0" fill="rgb(239,120,52)" rx="2" ry="2" />
<text  x="1182.18" y="255.5" ></text>
</g>
<g >
<title>context.parentCancelCtx (2 samples, 0.07%)</title><rect x="218.6" y="181" width="0.8" height="15.0" fill="rgb(222,118,10)" rx="2" ry="2" />
<text  x="221.57" y="191.5" ></text>
</g>
<g >
<title>runtime.findRunnable (6 samples, 0.22%)</title><rect x="1143.3" y="181" width="2.6" height="15.0" fill="rgb(248,71,20)" rx="2" ry="2" />
<text  x="1146.27" y="191.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (3 samples, 0.11%)</title><rect x="681.6" y="149" width="1.3" height="15.0" fill="rgb(212,133,7)" rx="2" ry="2" />
<text  x="684.57" y="159.5" ></text>
</g>
<g >
<title>runtime.schedule (1 samples, 0.04%)</title><rect x="653.9" y="229" width="0.4" height="15.0" fill="rgb(206,141,30)" rx="2" ry="2" />
<text  x="656.87" y="239.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).SetReadDeadline (1 samples, 0.04%)</title><rect x="601.5" y="213" width="0.4" height="15.0" fill="rgb(249,127,44)" rx="2" ry="2" />
<text  x="604.51" y="223.5" ></text>
</g>
<g >
<title>sort.Sort (1 samples, 0.04%)</title><rect x="238.5" y="149" width="0.4" height="15.0" fill="rgb(209,204,49)" rx="2" ry="2" />
<text  x="241.47" y="159.5" ></text>
</g>
<g >
<title>runtime.semawakeup (3 samples, 0.11%)</title><rect x="1170.1" y="165" width="1.3" height="15.0" fill="rgb(231,108,16)" rx="2" ry="2" />
<text  x="1173.10" y="175.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.04%)</title><rect x="611.9" y="117" width="0.4" height="15.0" fill="rgb(219,139,26)" rx="2" ry="2" />
<text  x="614.90" y="127.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone.func1 (9 samples, 0.33%)</title><rect x="1163.6" y="245" width="3.9" height="15.0" fill="rgb(248,113,51)" rx="2" ry="2" />
<text  x="1166.60" y="255.5" ></text>
</g>
<g >
<title>runtime.gcstopm (4 samples, 0.15%)</title><rect x="661.7" y="197" width="1.7" height="15.0" fill="rgb(208,30,20)" rx="2" ry="2" />
<text  x="664.66" y="207.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (1 samples, 0.04%)</title><rect x="650.4" y="181" width="0.4" height="15.0" fill="rgb(207,229,1)" rx="2" ry="2" />
<text  x="653.41" y="191.5" ></text>
</g>
<g >
<title>runtime.stealWork (230 samples, 8.43%)</title><rect x="1019.9" y="197" width="99.6" height="15.0" fill="rgb(253,22,40)" rx="2" ry="2" />
<text  x="1022.94" y="207.5" >runtime.stea..</text>
</g>
<g >
<title>strings.(*Builder).grow (1 samples, 0.04%)</title><rect x="619.3" y="149" width="0.4" height="15.0" fill="rgb(221,72,30)" rx="2" ry="2" />
<text  x="622.26" y="159.5" ></text>
</g>
<g >
<title>runtime.gcDrain (7 samples, 0.26%)</title><rect x="1160.6" y="229" width="3.0" height="15.0" fill="rgb(215,152,40)" rx="2" ry="2" />
<text  x="1163.58" y="239.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.04%)</title><rect x="612.3" y="133" width="0.5" height="15.0" fill="rgb(227,170,22)" rx="2" ry="2" />
<text  x="615.33" y="143.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (1 samples, 0.04%)</title><rect x="1160.1" y="245" width="0.5" height="15.0" fill="rgb(240,129,27)" rx="2" ry="2" />
<text  x="1163.14" y="255.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).scavenge.func1 (8 samples, 0.29%)</title><rect x="1156.7" y="245" width="3.4" height="15.0" fill="rgb(252,120,31)" rx="2" ry="2" />
<text  x="1159.68" y="255.5" ></text>
</g>
<g >
<title>runtime.nanotime (1 samples, 0.04%)</title><rect x="659.5" y="197" width="0.4" height="15.0" fill="rgb(224,85,0)" rx="2" ry="2" />
<text  x="662.50" y="207.5" ></text>
</g>
<g >
<title>runtime.unlock2 (3 samples, 0.11%)</title><rect x="1167.9" y="213" width="1.3" height="15.0" fill="rgb(206,88,32)" rx="2" ry="2" />
<text  x="1170.93" y="223.5" ></text>
</g>
<g >
<title>runtime.newproc (1 samples, 0.04%)</title><rect x="234.6" y="229" width="0.4" height="15.0" fill="rgb(219,73,18)" rx="2" ry="2" />
<text  x="237.58" y="239.5" ></text>
</g>
<g >
<title>runtime.signalM (1 samples, 0.04%)</title><rect x="644.4" y="149" width="0.4" height="15.0" fill="rgb(244,6,33)" rx="2" ry="2" />
<text  x="647.35" y="159.5" ></text>
</g>
<g >
<title>net.(*conn).Read (475 samples, 17.42%)</title><rect x="10.9" y="197" width="205.5" height="15.0" fill="rgb(246,226,1)" rx="2" ry="2" />
<text  x="13.87" y="207.5" >net.(*conn).Read</text>
</g>
<g >
<title>runtime.freeSomeWbufs (1 samples, 0.04%)</title><rect x="643.5" y="245" width="0.4" height="15.0" fill="rgb(208,132,30)" rx="2" ry="2" />
<text  x="646.49" y="255.5" ></text>
</g>
<g >
<title>regexp.(*bitState).reset (1 samples, 0.04%)</title><rect x="620.1" y="85" width="0.5" height="15.0" fill="rgb(252,158,32)" rx="2" ry="2" />
<text  x="623.12" y="95.5" ></text>
</g>
<g >
<title>runtime.usleep (14 samples, 0.51%)</title><rect x="1173.1" y="213" width="6.1" height="15.0" fill="rgb(214,190,19)" rx="2" ry="2" />
<text  x="1176.12" y="223.5" ></text>
</g>
<g >
<title>runtime.runqgrab (223 samples, 8.18%)</title><rect x="1023.0" y="165" width="96.5" height="15.0" fill="rgb(254,207,53)" rx="2" ry="2" />
<text  x="1025.97" y="175.5" >runtime.run..</text>
</g>
<g >
<title>runtime.semasleep (2 samples, 0.07%)</title><rect x="1163.6" y="181" width="0.9" height="15.0" fill="rgb(230,57,27)" rx="2" ry="2" />
<text  x="1166.60" y="191.5" ></text>
</g>
<g >
<title>net/http.parseRequestLine (1 samples, 0.04%)</title><rect x="221.6" y="213" width="0.4" height="15.0" fill="rgb(208,218,14)" rx="2" ry="2" />
<text  x="224.60" y="223.5" ></text>
</g>
<g >
<title>regexp/syntax.(*Inst).MatchRunePos (2 samples, 0.07%)</title><rect x="614.5" y="69" width="0.9" height="15.0" fill="rgb(216,88,27)" rx="2" ry="2" />
<text  x="617.50" y="79.5" ></text>
</g>
<g >
<title>net/http.(*connReader).abortPendingRead (5 samples, 0.18%)</title><rect x="600.6" y="229" width="2.2" height="15.0" fill="rgb(225,118,50)" rx="2" ry="2" />
<text  x="603.65" y="239.5" ></text>
</g>
<g >
<title>sync.(*Cond).Broadcast (2 samples, 0.07%)</title><rect x="642.6" y="245" width="0.9" height="15.0" fill="rgb(209,77,28)" rx="2" ry="2" />
<text  x="645.62" y="255.5" ></text>
</g>
<g >
<title>strings.indexFunc (1 samples, 0.04%)</title><rect x="223.8" y="213" width="0.4" height="15.0" fill="rgb(234,154,4)" rx="2" ry="2" />
<text  x="226.76" y="223.5" ></text>
</g>
<g >
<title>runtime.semawakeup (3 samples, 0.11%)</title><rect x="1167.9" y="197" width="1.3" height="15.0" fill="rgb(245,152,3)" rx="2" ry="2" />
<text  x="1170.93" y="207.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (2 samples, 0.07%)</title><rect x="1163.6" y="197" width="0.9" height="15.0" fill="rgb(234,101,36)" rx="2" ry="2" />
<text  x="1166.60" y="207.5" ></text>
</g>
<g >
<title>runtime.gopreempt_m (24 samples, 0.88%)</title><rect x="1143.3" y="229" width="10.4" height="15.0" fill="rgb(218,23,7)" rx="2" ry="2" />
<text  x="1146.27" y="239.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.04%)</title><rect x="609.3" y="149" width="0.4" height="15.0" fill="rgb(231,64,21)" rx="2" ry="2" />
<text  x="612.30" y="159.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (4 samples, 0.15%)</title><rect x="661.7" y="133" width="1.7" height="15.0" fill="rgb(245,199,48)" rx="2" ry="2" />
<text  x="664.66" y="143.5" ></text>
</g>
<g >
<title>net.(*netFD).Read (475 samples, 17.42%)</title><rect x="10.9" y="181" width="205.5" height="15.0" fill="rgb(242,41,27)" rx="2" ry="2" />
<text  x="13.87" y="191.5" >net.(*netFD).Read</text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.04%)</title><rect x="655.6" y="149" width="0.4" height="15.0" fill="rgb(240,36,25)" rx="2" ry="2" />
<text  x="658.60" y="159.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (14 samples, 0.51%)</title><rect x="1120.8" y="213" width="6.0" height="15.0" fill="rgb(206,228,45)" rx="2" ry="2" />
<text  x="1123.77" y="223.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.04%)</title><rect x="1187.8" y="229" width="0.5" height="15.0" fill="rgb(249,22,51)" rx="2" ry="2" />
<text  x="1190.84" y="239.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (1 samples, 0.04%)</title><rect x="1189.6" y="245" width="0.4" height="15.0" fill="rgb(211,101,47)" rx="2" ry="2" />
<text  x="1192.57" y="255.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.04%)</title><rect x="643.5" y="229" width="0.4" height="15.0" fill="rgb(209,65,52)" rx="2" ry="2" />
<text  x="646.49" y="239.5" ></text>
</g>
<g >
<title>time.now (1 samples, 0.04%)</title><rect x="232.0" y="213" width="0.4" height="15.0" fill="rgb(248,98,6)" rx="2" ry="2" />
<text  x="234.98" y="223.5" ></text>
</g>
<g >
<title>runtime.semasleep (1 samples, 0.04%)</title><rect x="653.9" y="165" width="0.4" height="15.0" fill="rgb(214,99,50)" rx="2" ry="2" />
<text  x="656.87" y="175.5" ></text>
</g>
<g >
<title>runtime.notesleep (4 samples, 0.15%)</title><rect x="652.1" y="213" width="1.8" height="15.0" fill="rgb(249,86,47)" rx="2" ry="2" />
<text  x="655.14" y="223.5" ></text>
</g>
<g >
<title>runtime.heapBits.next (1 samples, 0.04%)</title><rect x="650.0" y="181" width="0.4" height="15.0" fill="rgb(215,203,50)" rx="2" ry="2" />
<text  x="652.98" y="191.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.04%)</title><rect x="644.4" y="229" width="0.4" height="15.0" fill="rgb(212,155,4)" rx="2" ry="2" />
<text  x="647.35" y="239.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (2 samples, 0.07%)</title><rect x="651.3" y="165" width="0.8" height="15.0" fill="rgb(222,188,51)" rx="2" ry="2" />
<text  x="654.28" y="175.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (1 samples, 0.04%)</title><rect x="655.2" y="133" width="0.4" height="15.0" fill="rgb(220,184,30)" rx="2" ry="2" />
<text  x="658.17" y="143.5" ></text>
</g>
<g >
<title>runtime.concatstring2 (1 samples, 0.04%)</title><rect x="617.5" y="149" width="0.5" height="15.0" fill="rgb(216,189,3)" rx="2" ry="2" />
<text  x="620.52" y="159.5" ></text>
</g>
<g >
<title>context.WithCancel (7 samples, 0.26%)</title><rect x="218.1" y="229" width="3.1" height="15.0" fill="rgb(209,165,29)" rx="2" ry="2" />
<text  x="221.13" y="239.5" ></text>
</g>
<g >
<title>time.Now (1 samples, 0.04%)</title><rect x="232.0" y="229" width="0.4" height="15.0" fill="rgb(245,212,14)" rx="2" ry="2" />
<text  x="234.98" y="239.5" ></text>
</g>
<g >
<title>sync.runtime_notifyListAdd (1 samples, 0.04%)</title><rect x="601.9" y="197" width="0.5" height="15.0" fill="rgb(247,200,42)" rx="2" ry="2" />
<text  x="604.95" y="207.5" ></text>
</g>
<g >
<title>runtime.usleep (4 samples, 0.15%)</title><rect x="1143.7" y="133" width="1.7" height="15.0" fill="rgb(247,6,11)" rx="2" ry="2" />
<text  x="1146.70" y="143.5" ></text>
</g>
<g >
<title>net.(*conn).Read (44 samples, 1.61%)</title><rect x="623.6" y="245" width="19.0" height="15.0" fill="rgb(224,130,24)" rx="2" ry="2" />
<text  x="626.58" y="255.5" ></text>
</g>
<g >
<title>runtime.preemptall (3 samples, 0.11%)</title><rect x="1188.3" y="229" width="1.3" height="15.0" fill="rgb(215,17,14)" rx="2" ry="2" />
<text  x="1191.27" y="239.5" ></text>
</g>
<g >
<title>runtime.morestack (24 samples, 0.88%)</title><rect x="1143.3" y="261" width="10.4" height="15.0" fill="rgb(226,160,16)" rx="2" ry="2" />
<text  x="1146.27" y="271.5" ></text>
</g>
<g >
<title>runtime.semasleep (1 samples, 0.04%)</title><rect x="655.2" y="149" width="0.4" height="15.0" fill="rgb(208,173,2)" rx="2" ry="2" />
<text  x="658.17" y="159.5" ></text>
</g>
</g>
</svg>
