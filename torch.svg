<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="310" onload="init(evt)" viewBox="0 0 1200 310" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="310.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="293" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="293" > </text>
<g id="frames">
<g >
<title>runtime.growslice (3 samples, 0.10%)</title><rect x="446.7" y="133" width="1.3" height="15.0" fill="rgb(219,198,26)" rx="2" ry="2" />
<text  x="449.73" y="143.5" ></text>
</g>
<g >
<title>runtime.isSystemGoroutine (2 samples, 0.07%)</title><rect x="725.1" y="213" width="0.8" height="15.0" fill="rgb(223,41,33)" rx="2" ry="2" />
<text  x="728.10" y="223.5" ></text>
</g>
<g >
<title>runtime.(*stackScanState).getPtr (1 samples, 0.03%)</title><rect x="718.6" y="133" width="0.4" height="15.0" fill="rgb(206,115,2)" rx="2" ry="2" />
<text  x="721.57" y="143.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (1 samples, 0.03%)</title><rect x="1125.5" y="149" width="0.4" height="15.0" fill="rgb(250,57,45)" rx="2" ry="2" />
<text  x="1128.51" y="159.5" ></text>
</g>
<g >
<title>runtime.scanobject (1 samples, 0.03%)</title><rect x="1154.5" y="181" width="0.4" height="15.0" fill="rgb(242,50,50)" rx="2" ry="2" />
<text  x="1157.49" y="191.5" ></text>
</g>
<g >
<title>runtime.greyobject (1 samples, 0.03%)</title><rect x="720.6" y="165" width="0.4" height="15.0" fill="rgb(242,8,27)" rx="2" ry="2" />
<text  x="723.61" y="175.5" ></text>
</g>
<g >
<title>runtime.preemptone (5 samples, 0.17%)</title><rect x="1154.9" y="165" width="2.0" height="15.0" fill="rgb(210,99,49)" rx="2" ry="2" />
<text  x="1157.90" y="175.5" ></text>
</g>
<g >
<title>runtime.goready.func1 (1 samples, 0.03%)</title><rect x="717.3" y="149" width="0.5" height="15.0" fill="rgb(240,199,8)" rx="2" ry="2" />
<text  x="720.35" y="159.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.03%)</title><rect x="212.4" y="213" width="0.5" height="15.0" fill="rgb(220,149,8)" rx="2" ry="2" />
<text  x="215.45" y="223.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (3 samples, 0.10%)</title><rect x="723.9" y="181" width="1.2" height="15.0" fill="rgb(211,32,42)" rx="2" ry="2" />
<text  x="726.88" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.03%)</title><rect x="449.2" y="69" width="0.4" height="15.0" fill="rgb(251,70,53)" rx="2" ry="2" />
<text  x="452.18" y="79.5" ></text>
</g>
<g >
<title>runtime.signalM (5 samples, 0.17%)</title><rect x="1154.9" y="149" width="2.0" height="15.0" fill="rgb(235,129,35)" rx="2" ry="2" />
<text  x="1157.90" y="159.5" ></text>
</g>
<g >
<title>runtime.semawakeup (1 samples, 0.03%)</title><rect x="1161.4" y="181" width="0.4" height="15.0" fill="rgb(223,44,2)" rx="2" ry="2" />
<text  x="1164.43" y="191.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.03%)</title><rect x="727.1" y="117" width="0.5" height="15.0" fill="rgb(241,21,46)" rx="2" ry="2" />
<text  x="730.14" y="127.5" ></text>
</g>
<g >
<title>runtime.semasleep (6 samples, 0.21%)</title><rect x="730.4" y="133" width="2.5" height="15.0" fill="rgb(239,195,16)" rx="2" ry="2" />
<text  x="733.41" y="143.5" ></text>
</g>
<g >
<title>runtime.pollInfo.closing (1 samples, 0.03%)</title><rect x="690.8" y="165" width="0.4" height="15.0" fill="rgb(237,90,13)" rx="2" ry="2" />
<text  x="693.82" y="175.5" ></text>
</g>
<g >
<title>time.now (2 samples, 0.07%)</title><rect x="212.9" y="197" width="0.8" height="15.0" fill="rgb(239,30,49)" rx="2" ry="2" />
<text  x="215.86" y="207.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (1 samples, 0.03%)</title><rect x="1140.6" y="101" width="0.4" height="15.0" fill="rgb(210,118,38)" rx="2" ry="2" />
<text  x="1143.61" y="111.5" ></text>
</g>
<g >
<title>runtime.semawakeup (17 samples, 0.59%)</title><rect x="1180.2" y="165" width="6.9" height="15.0" fill="rgb(207,189,22)" rx="2" ry="2" />
<text  x="1183.20" y="175.5" ></text>
</g>
<g >
<title>net.(*conn).Write (528 samples, 18.26%)</title><rect x="219.0" y="181" width="215.5" height="15.0" fill="rgb(213,178,40)" rx="2" ry="2" />
<text  x="221.98" y="191.5" >net.(*conn).Write</text>
</g>
<g >
<title>runtime.usleep (168 samples, 5.81%)</title><rect x="1054.9" y="133" width="68.6" height="15.0" fill="rgb(247,31,33)" rx="2" ry="2" />
<text  x="1057.90" y="143.5" >runtime..</text>
</g>
<g >
<title>runtime.pthread_kill (7 samples, 0.24%)</title><rect x="1158.2" y="149" width="2.8" height="15.0" fill="rgb(213,182,54)" rx="2" ry="2" />
<text  x="1161.16" y="159.5" ></text>
</g>
<g >
<title>runtime.unlock2 (1 samples, 0.03%)</title><rect x="1142.7" y="149" width="0.4" height="15.0" fill="rgb(222,177,1)" rx="2" ry="2" />
<text  x="1145.65" y="159.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (5 samples, 0.17%)</title><rect x="721.8" y="165" width="2.1" height="15.0" fill="rgb(212,126,34)" rx="2" ry="2" />
<text  x="724.84" y="175.5" ></text>
</g>
<g >
<title>runtime.semawakeup (1 samples, 0.03%)</title><rect x="1140.6" y="117" width="0.4" height="15.0" fill="rgb(254,228,16)" rx="2" ry="2" />
<text  x="1143.61" y="127.5" ></text>
</g>
<g >
<title>net/http.(*conn).readRequest (26 samples, 0.90%)</title><rect x="202.2" y="229" width="10.7" height="15.0" fill="rgb(213,86,13)" rx="2" ry="2" />
<text  x="205.24" y="239.5" ></text>
</g>
<g >
<title>runtime.notetsleep (3 samples, 0.10%)</title><rect x="1156.9" y="197" width="1.3" height="15.0" fill="rgb(219,229,26)" rx="2" ry="2" />
<text  x="1159.94" y="207.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_timedwait_relative_np (2 samples, 0.07%)</title><rect x="1187.1" y="165" width="0.9" height="15.0" fill="rgb(220,80,21)" rx="2" ry="2" />
<text  x="1190.14" y="175.5" ></text>
</g>
<g >
<title>runtime.growslice (3 samples, 0.10%)</title><rect x="443.5" y="133" width="1.2" height="15.0" fill="rgb(207,149,1)" rx="2" ry="2" />
<text  x="446.47" y="143.5" ></text>
</g>
<g >
<title>regexp.(*Regexp).ReplaceAllString (3 samples, 0.10%)</title><rect x="445.1" y="133" width="1.2" height="15.0" fill="rgb(226,42,42)" rx="2" ry="2" />
<text  x="448.10" y="143.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (2 samples, 0.07%)</title><rect x="1188.8" y="229" width="0.8" height="15.0" fill="rgb(206,224,4)" rx="2" ry="2" />
<text  x="1191.78" y="239.5" ></text>
</g>
<g >
<title>runtime.asyncPreempt (1 samples, 0.03%)</title><rect x="691.6" y="197" width="0.4" height="15.0" fill="rgb(246,104,18)" rx="2" ry="2" />
<text  x="694.63" y="207.5" ></text>
</g>
<g >
<title>runtime.stopm (2 samples, 0.07%)</title><rect x="1123.5" y="181" width="0.8" height="15.0" fill="rgb(217,124,48)" rx="2" ry="2" />
<text  x="1126.47" y="191.5" ></text>
</g>
<g >
<title>runtime.gostringnocopy (1 samples, 0.03%)</title><rect x="214.5" y="133" width="0.4" height="15.0" fill="rgb(237,182,24)" rx="2" ry="2" />
<text  x="217.49" y="143.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (7 samples, 0.24%)</title><rect x="751.6" y="181" width="2.9" height="15.0" fill="rgb(238,212,8)" rx="2" ry="2" />
<text  x="754.63" y="191.5" ></text>
</g>
<g >
<title>runtime.mput (1 samples, 0.03%)</title><rect x="1123.9" y="165" width="0.4" height="15.0" fill="rgb(216,189,32)" rx="2" ry="2" />
<text  x="1126.88" y="175.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone.func1 (10 samples, 0.35%)</title><rect x="1156.9" y="229" width="4.1" height="15.0" fill="rgb(221,12,18)" rx="2" ry="2" />
<text  x="1159.94" y="239.5" ></text>
</g>
<g >
<title>runtime.acquirep (1 samples, 0.03%)</title><rect x="726.7" y="165" width="0.4" height="15.0" fill="rgb(247,50,8)" rx="2" ry="2" />
<text  x="729.73" y="175.5" ></text>
</g>
<g >
<title>runtime.divRoundUp (1 samples, 0.03%)</title><rect x="450.0" y="85" width="0.4" height="15.0" fill="rgb(210,113,14)" rx="2" ry="2" />
<text  x="453.00" y="95.5" ></text>
</g>
<g >
<title>bufio.(*Reader).Peek (1 samples, 0.03%)</title><rect x="207.6" y="181" width="0.4" height="15.0" fill="rgb(218,201,52)" rx="2" ry="2" />
<text  x="210.55" y="191.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.07%)</title><rect x="210.8" y="197" width="0.8" height="15.0" fill="rgb(223,160,36)" rx="2" ry="2" />
<text  x="213.82" y="207.5" ></text>
</g>
<g >
<title>net.(*conn).Read (467 samples, 16.15%)</title><rect x="10.8" y="181" width="190.6" height="15.0" fill="rgb(228,14,51)" rx="2" ry="2" />
<text  x="13.82" y="191.5" >net.(*conn).Read</text>
</g>
<g >
<title>runtime.makeslicecopy (3 samples, 0.10%)</title><rect x="450.8" y="85" width="1.2" height="15.0" fill="rgb(251,151,0)" rx="2" ry="2" />
<text  x="453.82" y="95.5" ></text>
</g>
<g >
<title>runtime.semawakeup (1 samples, 0.03%)</title><rect x="1124.3" y="149" width="0.4" height="15.0" fill="rgb(243,72,46)" rx="2" ry="2" />
<text  x="1127.29" y="159.5" ></text>
</g>
<g >
<title>runtime.putempty (1 samples, 0.03%)</title><rect x="718.6" y="117" width="0.4" height="15.0" fill="rgb(231,135,29)" rx="2" ry="2" />
<text  x="721.57" y="127.5" ></text>
</g>
<g >
<title>indexbody (1 samples, 0.03%)</title><rect x="440.2" y="69" width="0.4" height="15.0" fill="rgb(206,69,53)" rx="2" ry="2" />
<text  x="443.20" y="79.5" ></text>
</g>
<g >
<title>regexp.(*Regexp).replaceAll (3 samples, 0.10%)</title><rect x="445.1" y="117" width="1.2" height="15.0" fill="rgb(210,153,27)" rx="2" ry="2" />
<text  x="448.10" y="127.5" ></text>
</g>
<g >
<title>runtime.goschedImpl (1 samples, 0.03%)</title><rect x="727.1" y="213" width="0.5" height="15.0" fill="rgb(207,147,31)" rx="2" ry="2" />
<text  x="730.14" y="223.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (1 samples, 0.03%)</title><rect x="1124.3" y="133" width="0.4" height="15.0" fill="rgb(206,203,4)" rx="2" ry="2" />
<text  x="1127.29" y="143.5" ></text>
</g>
<g >
<title>runtime.startm (1 samples, 0.03%)</title><rect x="727.1" y="133" width="0.5" height="15.0" fill="rgb(238,157,40)" rx="2" ry="2" />
<text  x="730.14" y="143.5" ></text>
</g>
<g >
<title>syscall.nametomib (419 samples, 14.49%)</title><rect x="450.8" y="117" width="171.0" height="15.0" fill="rgb(253,2,29)" rx="2" ry="2" />
<text  x="453.82" y="127.5" >syscall.nametomib</text>
</g>
<g >
<title>runtime.gcDrainN (1 samples, 0.03%)</title><rect x="205.5" y="85" width="0.4" height="15.0" fill="rgb(226,67,30)" rx="2" ry="2" />
<text  x="208.51" y="95.5" ></text>
</g>
<g >
<title>runtime.schedule (1,009 samples, 34.90%)</title><rect x="728.4" y="213" width="411.8" height="15.0" fill="rgb(213,26,10)" rx="2" ry="2" />
<text  x="731.37" y="223.5" >runtime.schedule</text>
</g>
<g >
<title>runtime.nanotime (1 samples, 0.03%)</title><rect x="1128.0" y="149" width="0.4" height="15.0" fill="rgb(218,129,16)" rx="2" ry="2" />
<text  x="1130.96" y="159.5" ></text>
</g>
<g >
<title>runtime.signalM (7 samples, 0.24%)</title><rect x="1158.2" y="165" width="2.8" height="15.0" fill="rgb(244,22,14)" rx="2" ry="2" />
<text  x="1161.16" y="175.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.03%)</title><rect x="444.7" y="101" width="0.4" height="15.0" fill="rgb(250,40,46)" rx="2" ry="2" />
<text  x="447.69" y="111.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (1 samples, 0.03%)</title><rect x="1161.8" y="213" width="0.4" height="15.0" fill="rgb(216,114,32)" rx="2" ry="2" />
<text  x="1164.84" y="223.5" ></text>
</g>
<g >
<title>runtime.rawstringtmp (1 samples, 0.03%)</title><rect x="443.1" y="101" width="0.4" height="15.0" fill="rgb(229,199,2)" rx="2" ry="2" />
<text  x="446.06" y="111.5" ></text>
</g>
<g >
<title>runtime.semawakeup (1 samples, 0.03%)</title><rect x="1142.2" y="117" width="0.5" height="15.0" fill="rgb(254,130,54)" rx="2" ry="2" />
<text  x="1145.24" y="127.5" ></text>
</g>
<g >
<title>bufio.(*Reader).Peek (469 samples, 16.22%)</title><rect x="10.0" y="229" width="191.4" height="15.0" fill="rgb(246,47,39)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >bufio.(*Reader).Peek</text>
</g>
<g >
<title>runtime.semawakeup (27 samples, 0.93%)</title><rect x="1128.4" y="133" width="11.0" height="15.0" fill="rgb(242,217,25)" rx="2" ry="2" />
<text  x="1131.37" y="143.5" ></text>
</g>
<g >
<title>runtime.semasleep (1 samples, 0.03%)</title><rect x="1125.5" y="165" width="0.4" height="15.0" fill="rgb(237,148,52)" rx="2" ry="2" />
<text  x="1128.51" y="175.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_timedwait_relative_np (3 samples, 0.10%)</title><rect x="1156.9" y="149" width="1.3" height="15.0" fill="rgb(217,35,45)" rx="2" ry="2" />
<text  x="1159.94" y="159.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (1 samples, 0.03%)</title><rect x="207.1" y="197" width="0.5" height="15.0" fill="rgb(250,32,30)" rx="2" ry="2" />
<text  x="210.14" y="207.5" ></text>
</g>
<g >
<title>runtime.casgstatus (1 samples, 0.03%)</title><rect x="733.3" y="165" width="0.4" height="15.0" fill="rgb(239,82,45)" rx="2" ry="2" />
<text  x="736.27" y="175.5" ></text>
</g>
<g >
<title>runtime.findRunnable (5 samples, 0.17%)</title><rect x="1140.6" y="165" width="2.1" height="15.0" fill="rgb(234,79,6)" rx="2" ry="2" />
<text  x="1143.61" y="175.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).balance (5 samples, 0.17%)</title><rect x="1154.9" y="197" width="2.0" height="15.0" fill="rgb(211,123,2)" rx="2" ry="2" />
<text  x="1157.90" y="207.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.03%)</title><rect x="214.9" y="149" width="0.4" height="15.0" fill="rgb(206,112,54)" rx="2" ry="2" />
<text  x="217.90" y="159.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="1139.0" y="117" width="0.4" height="15.0" fill="rgb(219,139,46)" rx="2" ry="2" />
<text  x="1141.98" y="127.5" ></text>
</g>
<g >
<title>indexbytebody (1 samples, 0.03%)</title><rect x="208.0" y="149" width="0.4" height="15.0" fill="rgb(228,78,51)" rx="2" ry="2" />
<text  x="210.96" y="159.5" ></text>
</g>
<g >
<title>runtime.findRunnable (3 samples, 0.10%)</title><rect x="725.9" y="197" width="1.2" height="15.0" fill="rgb(237,175,53)" rx="2" ry="2" />
<text  x="728.92" y="207.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="1161.4" y="165" width="0.4" height="15.0" fill="rgb(217,162,3)" rx="2" ry="2" />
<text  x="1164.43" y="175.5" ></text>
</g>
<g >
<title>runtime.newproc.func1 (4 samples, 0.14%)</title><rect x="214.1" y="181" width="1.6" height="15.0" fill="rgb(216,156,49)" rx="2" ry="2" />
<text  x="217.08" y="191.5" ></text>
</g>
<g >
<title>runtime.publicationBarrier (1 samples, 0.03%)</title><rect x="451.6" y="53" width="0.4" height="15.0" fill="rgb(235,18,16)" rx="2" ry="2" />
<text  x="454.63" y="63.5" ></text>
</g>
<g >
<title>syscall.write (526 samples, 18.19%)</title><rect x="219.8" y="133" width="214.7" height="15.0" fill="rgb(216,218,39)" rx="2" ry="2" />
<text  x="222.80" y="143.5" >syscall.write</text>
</g>
<g >
<title>runtime.write1 (1 samples, 0.03%)</title><rect x="1048.8" y="149" width="0.4" height="15.0" fill="rgb(251,157,9)" rx="2" ry="2" />
<text  x="1051.78" y="159.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.func3 (2 samples, 0.07%)</title><rect x="1161.0" y="229" width="0.8" height="15.0" fill="rgb(246,108,28)" rx="2" ry="2" />
<text  x="1164.02" y="239.5" ></text>
</g>
<g >
<title>sync.(*Pool).Get (1 samples, 0.03%)</title><rect x="437.3" y="117" width="0.5" height="15.0" fill="rgb(232,88,50)" rx="2" ry="2" />
<text  x="440.35" y="127.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uintptr).CompareAndSwap (1 samples, 0.03%)</title><rect x="1048.4" y="165" width="0.4" height="15.0" fill="rgb(222,9,30)" rx="2" ry="2" />
<text  x="1051.37" y="175.5" ></text>
</g>
<g >
<title>runtime.nanotime1 (6 samples, 0.21%)</title><rect x="1050.4" y="149" width="2.5" height="15.0" fill="rgb(234,160,20)" rx="2" ry="2" />
<text  x="1053.41" y="159.5" ></text>
</g>
<g >
<title>net/http.Header.sortedKeyValues (1 samples, 0.03%)</title><rect x="218.2" y="149" width="0.4" height="15.0" fill="rgb(205,30,28)" rx="2" ry="2" />
<text  x="221.16" y="159.5" ></text>
</g>
<g >
<title>runtime.injectglist (46 samples, 1.59%)</title><rect x="732.9" y="181" width="18.7" height="15.0" fill="rgb(225,152,41)" rx="2" ry="2" />
<text  x="735.86" y="191.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (1 samples, 0.03%)</title><rect x="210.0" y="117" width="0.4" height="15.0" fill="rgb(237,215,46)" rx="2" ry="2" />
<text  x="213.00" y="127.5" ></text>
</g>
<g >
<title>net.(*netFD).Read (65 samples, 2.25%)</title><rect x="690.8" y="213" width="26.5" height="15.0" fill="rgb(214,40,39)" rx="2" ry="2" />
<text  x="693.82" y="223.5" >n..</text>
</g>
<g >
<title>net/http.isNotToken (1 samples, 0.03%)</title><rect x="206.7" y="181" width="0.4" height="15.0" fill="rgb(221,172,4)" rx="2" ry="2" />
<text  x="209.73" y="191.5" ></text>
</g>
<g >
<title>net.(*netFD).Write (528 samples, 18.26%)</title><rect x="219.0" y="165" width="215.5" height="15.0" fill="rgb(227,169,15)" rx="2" ry="2" />
<text  x="221.98" y="175.5" >net.(*netFD).Write</text>
</g>
<g >
<title>github.com/varstr/uaparser.Parse (6 samples, 0.21%)</title><rect x="439.0" y="133" width="2.4" height="15.0" fill="rgb(227,98,11)" rx="2" ry="2" />
<text  x="441.98" y="143.5" ></text>
</g>
<g >
<title>net/http.(*ServeMux).match (1 samples, 0.03%)</title><rect x="435.3" y="181" width="0.4" height="15.0" fill="rgb(213,29,21)" rx="2" ry="2" />
<text  x="438.31" y="191.5" ></text>
</g>
<g >
<title>runtime.usleep (3 samples, 0.10%)</title><rect x="723.9" y="149" width="1.2" height="15.0" fill="rgb(247,62,14)" rx="2" ry="2" />
<text  x="726.88" y="159.5" ></text>
</g>
<g >
<title>runtime.systemstack (4 samples, 0.14%)</title><rect x="214.1" y="197" width="1.6" height="15.0" fill="rgb(242,38,52)" rx="2" ry="2" />
<text  x="217.08" y="207.5" ></text>
</g>
<g >
<title>all (2,891 samples, 100%)</title><rect x="10.0" y="261" width="1180.0" height="15.0" fill="rgb(207,173,13)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>runtime.semawakeup (1 samples, 0.03%)</title><rect x="1163.1" y="181" width="0.4" height="15.0" fill="rgb(221,180,20)" rx="2" ry="2" />
<text  x="1166.06" y="191.5" ></text>
</g>
<g >
<title>syscall.Read (467 samples, 16.15%)</title><rect x="10.8" y="149" width="190.6" height="15.0" fill="rgb(213,216,23)" rx="2" ry="2" />
<text  x="13.82" y="159.5" >syscall.Read</text>
</g>
<g >
<title>sync.(*Mutex).Unlock (2 samples, 0.07%)</title><rect x="437.8" y="85" width="0.8" height="15.0" fill="rgb(206,152,6)" rx="2" ry="2" />
<text  x="440.76" y="95.5" ></text>
</g>
<g >
<title>net.(*OpError).Timeout (1 samples, 0.03%)</title><rect x="690.4" y="229" width="0.4" height="15.0" fill="rgb(241,174,0)" rx="2" ry="2" />
<text  x="693.41" y="239.5" ></text>
</g>
<g >
<title>runtime.gopreempt_m (2 samples, 0.07%)</title><rect x="727.1" y="229" width="0.9" height="15.0" fill="rgb(244,8,8)" rx="2" ry="2" />
<text  x="730.14" y="239.5" ></text>
</g>
<g >
<title>net.(*netFD).Read (467 samples, 16.15%)</title><rect x="10.8" y="165" width="190.6" height="15.0" fill="rgb(225,24,18)" rx="2" ry="2" />
<text  x="13.82" y="175.5" >net.(*netFD).Read</text>
</g>
<g >
<title>github.com/vivekprm/go-pprof-demo/stats.IncCounter (9 samples, 0.31%)</title><rect x="443.1" y="165" width="3.6" height="15.0" fill="rgb(205,163,43)" rx="2" ry="2" />
<text  x="446.06" y="175.5" ></text>
</g>
<g >
<title>runtime.injectglist (1 samples, 0.03%)</title><rect x="727.1" y="165" width="0.5" height="15.0" fill="rgb(206,79,17)" rx="2" ry="2" />
<text  x="730.14" y="175.5" ></text>
</g>
<g >
<title>net/http.(*ServeMux).Handler (5 samples, 0.17%)</title><rect x="435.3" y="197" width="2.0" height="15.0" fill="rgb(249,215,18)" rx="2" ry="2" />
<text  x="438.31" y="207.5" ></text>
</g>
<g >
<title>runtime.newobject (2 samples, 0.07%)</title><rect x="440.6" y="117" width="0.8" height="15.0" fill="rgb(207,218,28)" rx="2" ry="2" />
<text  x="443.61" y="127.5" ></text>
</g>
<g >
<title>runtime.notesleep (214 samples, 7.40%)</title><rect x="754.5" y="165" width="87.3" height="15.0" fill="rgb(233,32,41)" rx="2" ry="2" />
<text  x="757.49" y="175.5" >runtime.no..</text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.03%)</title><rect x="202.2" y="181" width="0.5" height="15.0" fill="rgb(223,145,6)" rx="2" ry="2" />
<text  x="205.24" y="191.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.07%)</title><rect x="445.5" y="85" width="0.8" height="15.0" fill="rgb(217,108,16)" rx="2" ry="2" />
<text  x="448.51" y="95.5" ></text>
</g>
<g >
<title>net/url.parse (2 samples, 0.07%)</title><rect x="204.3" y="181" width="0.8" height="15.0" fill="rgb(254,124,31)" rx="2" ry="2" />
<text  x="207.29" y="191.5" ></text>
</g>
<g >
<title>bufio.(*Writer).Reset (1 samples, 0.03%)</title><rect x="434.5" y="213" width="0.4" height="15.0" fill="rgb(235,5,39)" rx="2" ry="2" />
<text  x="437.49" y="223.5" ></text>
</g>
<g >
<title>net/http.HandlerFunc.ServeHTTP (620 samples, 21.45%)</title><rect x="437.3" y="197" width="253.1" height="15.0" fill="rgb(220,19,32)" rx="2" ry="2" />
<text  x="440.35" y="207.5" >net/http.HandlerFunc.ServeHTTP</text>
</g>
<g >
<title>net/http.cleanPath (3 samples, 0.10%)</title><rect x="435.7" y="181" width="1.2" height="15.0" fill="rgb(245,154,43)" rx="2" ry="2" />
<text  x="438.71" y="191.5" ></text>
</g>
<g >
<title>net/http.(*connReader).Read (467 samples, 16.15%)</title><rect x="10.8" y="197" width="190.6" height="15.0" fill="rgb(245,196,17)" rx="2" ry="2" />
<text  x="13.82" y="207.5" >net/http.(*connReader).R..</text>
</g>
<g >
<title>runtime.libcCall (1 samples, 0.03%)</title><rect x="689.6" y="117" width="0.4" height="15.0" fill="rgb(253,90,53)" rx="2" ry="2" />
<text  x="692.59" y="127.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (2 samples, 0.07%)</title><rect x="1139.4" y="149" width="0.8" height="15.0" fill="rgb(250,60,36)" rx="2" ry="2" />
<text  x="1142.39" y="159.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.03%)</title><rect x="449.2" y="85" width="0.4" height="15.0" fill="rgb(246,127,13)" rx="2" ry="2" />
<text  x="452.18" y="95.5" ></text>
</g>
<g >
<title>runtime.casgstatus (1 samples, 0.03%)</title><rect x="717.3" y="117" width="0.5" height="15.0" fill="rgb(223,122,8)" rx="2" ry="2" />
<text  x="720.35" y="127.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (17 samples, 0.59%)</title><rect x="1180.2" y="149" width="6.9" height="15.0" fill="rgb(218,13,38)" rx="2" ry="2" />
<text  x="1183.20" y="159.5" ></text>
</g>
<g >
<title>runtime.netpoll (2 samples, 0.07%)</title><rect x="1141.4" y="149" width="0.8" height="15.0" fill="rgb(241,104,3)" rx="2" ry="2" />
<text  x="1144.43" y="159.5" ></text>
</g>
<g >
<title>time.Time.date (1 samples, 0.03%)</title><rect x="217.8" y="149" width="0.4" height="15.0" fill="rgb(248,181,37)" rx="2" ry="2" />
<text  x="220.76" y="159.5" ></text>
</g>
<g >
<title>runtime.scanblock (1 samples, 0.03%)</title><rect x="719.0" y="133" width="0.4" height="15.0" fill="rgb(217,15,28)" rx="2" ry="2" />
<text  x="721.98" y="143.5" ></text>
</g>
<g >
<title>runtime.kevent (503 samples, 17.40%)</title><rect x="843.1" y="165" width="205.3" height="15.0" fill="rgb(248,147,30)" rx="2" ry="2" />
<text  x="846.06" y="175.5" >runtime.kevent</text>
</g>
<g >
<title>runtime.gcDrainN (1 samples, 0.03%)</title><rect x="1154.5" y="197" width="0.4" height="15.0" fill="rgb(244,185,50)" rx="2" ry="2" />
<text  x="1157.49" y="207.5" ></text>
</g>
<g >
<title>runtime.osyield (3 samples, 0.10%)</title><rect x="723.9" y="165" width="1.2" height="15.0" fill="rgb(206,43,38)" rx="2" ry="2" />
<text  x="726.88" y="175.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.func4 (1 samples, 0.03%)</title><rect x="1161.8" y="229" width="0.4" height="15.0" fill="rgb(233,40,27)" rx="2" ry="2" />
<text  x="1164.84" y="239.5" ></text>
</g>
<g >
<title>runtime.usleep (2 samples, 0.07%)</title><rect x="725.9" y="149" width="0.8" height="15.0" fill="rgb(215,204,2)" rx="2" ry="2" />
<text  x="728.92" y="159.5" ></text>
</g>
<g >
<title>runtime.schedule (1 samples, 0.03%)</title><rect x="727.1" y="197" width="0.5" height="15.0" fill="rgb(206,26,12)" rx="2" ry="2" />
<text  x="730.14" y="207.5" ></text>
</g>
<g >
<title>runtime.newstack (12 samples, 0.42%)</title><rect x="1140.6" y="229" width="4.9" height="15.0" fill="rgb(227,154,25)" rx="2" ry="2" />
<text  x="1143.61" y="239.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.03%)</title><rect x="1143.1" y="181" width="0.4" height="15.0" fill="rgb(234,201,28)" rx="2" ry="2" />
<text  x="1146.06" y="191.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.03%)</title><rect x="727.6" y="213" width="0.4" height="15.0" fill="rgb(247,162,6)" rx="2" ry="2" />
<text  x="730.55" y="223.5" ></text>
</g>
<g >
<title>syscall.read (467 samples, 16.15%)</title><rect x="10.8" y="133" width="190.6" height="15.0" fill="rgb(210,2,0)" rx="2" ry="2" />
<text  x="13.82" y="143.5" >syscall.read</text>
</g>
<g >
<title>net/http.parseRequestLine (1 samples, 0.03%)</title><rect x="203.9" y="197" width="0.4" height="15.0" fill="rgb(206,188,22)" rx="2" ry="2" />
<text  x="206.88" y="207.5" ></text>
</g>
<g >
<title>runtime.systemstack (108 samples, 3.74%)</title><rect x="1145.5" y="245" width="44.1" height="15.0" fill="rgb(251,86,8)" rx="2" ry="2" />
<text  x="1148.51" y="255.5" >runt..</text>
</g>
<g >
<title>runtime.signalM (2 samples, 0.07%)</title><rect x="1188.0" y="181" width="0.8" height="15.0" fill="rgb(211,11,38)" rx="2" ry="2" />
<text  x="1190.96" y="191.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker (9 samples, 0.31%)</title><rect x="718.2" y="245" width="3.6" height="15.0" fill="rgb(244,0,4)" rx="2" ry="2" />
<text  x="721.16" y="255.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.03%)</title><rect x="1163.1" y="197" width="0.4" height="15.0" fill="rgb(217,42,11)" rx="2" ry="2" />
<text  x="1166.06" y="207.5" ></text>
</g>
<g >
<title>runtime.gcWriteBarrier (1 samples, 0.03%)</title><rect x="210.0" y="165" width="0.4" height="15.0" fill="rgb(242,76,30)" rx="2" ry="2" />
<text  x="213.00" y="175.5" ></text>
</g>
<g >
<title>runtime.usleep (7 samples, 0.24%)</title><rect x="751.6" y="149" width="2.9" height="15.0" fill="rgb(252,115,18)" rx="2" ry="2" />
<text  x="754.63" y="159.5" ></text>
</g>
<g >
<title>runtime.notewakeup (27 samples, 0.93%)</title><rect x="1128.4" y="149" width="11.0" height="15.0" fill="rgb(220,137,38)" rx="2" ry="2" />
<text  x="1131.37" y="159.5" ></text>
</g>
<g >
<title>runtime.semasleep (5 samples, 0.17%)</title><rect x="721.8" y="181" width="2.1" height="15.0" fill="rgb(215,189,32)" rx="2" ry="2" />
<text  x="724.84" y="191.5" ></text>
</g>
<g >
<title>runtime.startm (27 samples, 0.93%)</title><rect x="1128.4" y="165" width="11.0" height="15.0" fill="rgb(250,157,21)" rx="2" ry="2" />
<text  x="1131.37" y="175.5" ></text>
</g>
<g >
<title>runtime.usleep (5 samples, 0.17%)</title><rect x="1143.5" y="165" width="2.0" height="15.0" fill="rgb(253,224,9)" rx="2" ry="2" />
<text  x="1146.47" y="175.5" ></text>
</g>
<g >
<title>runtime.unlock2 (2 samples, 0.07%)</title><rect x="1139.4" y="181" width="0.8" height="15.0" fill="rgb(217,134,13)" rx="2" ry="2" />
<text  x="1142.39" y="191.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).enlistWorker (1 samples, 0.03%)</title><rect x="1154.5" y="133" width="0.4" height="15.0" fill="rgb(208,184,48)" rx="2" ry="2" />
<text  x="1157.49" y="143.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (1 samples, 0.03%)</title><rect x="719.0" y="117" width="0.4" height="15.0" fill="rgb(218,72,50)" rx="2" ry="2" />
<text  x="721.98" y="127.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (1 samples, 0.03%)</title><rect x="210.0" y="101" width="0.4" height="15.0" fill="rgb(225,61,41)" rx="2" ry="2" />
<text  x="213.00" y="111.5" ></text>
</g>
<g >
<title>syscall.read (62 samples, 2.14%)</title><rect x="692.0" y="181" width="25.3" height="15.0" fill="rgb(207,165,32)" rx="2" ry="2" />
<text  x="695.04" y="191.5" >s..</text>
</g>
<g >
<title>time.Time.Date (1 samples, 0.03%)</title><rect x="217.8" y="165" width="0.4" height="15.0" fill="rgb(214,168,3)" rx="2" ry="2" />
<text  x="220.76" y="175.5" ></text>
</g>
<g >
<title>runtime.pthread_kill (1 samples, 0.03%)</title><rect x="1154.5" y="85" width="0.4" height="15.0" fill="rgb(220,160,8)" rx="2" ry="2" />
<text  x="1157.49" y="95.5" ></text>
</g>
<g >
<title>runtime.runqsteal (173 samples, 5.98%)</title><rect x="1052.9" y="165" width="70.6" height="15.0" fill="rgb(236,28,48)" rx="2" ry="2" />
<text  x="1055.86" y="175.5" >runtime..</text>
</g>
<g >
<title>runtime.unlockWithRank (1 samples, 0.03%)</title><rect x="1124.3" y="181" width="0.4" height="15.0" fill="rgb(252,145,54)" rx="2" ry="2" />
<text  x="1127.29" y="191.5" ></text>
</g>
<g >
<title>runtime.osyield (2 samples, 0.07%)</title><rect x="725.9" y="165" width="0.8" height="15.0" fill="rgb(247,172,12)" rx="2" ry="2" />
<text  x="728.92" y="175.5" ></text>
</g>
<g >
<title>runtime.greyobject (1 samples, 0.03%)</title><rect x="1154.5" y="165" width="0.4" height="15.0" fill="rgb(247,4,40)" rx="2" ry="2" />
<text  x="1157.49" y="175.5" ></text>
</g>
<g >
<title>bytes.Cut (1 samples, 0.03%)</title><rect x="208.0" y="181" width="0.4" height="15.0" fill="rgb(214,210,27)" rx="2" ry="2" />
<text  x="210.96" y="191.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (2 samples, 0.07%)</title><rect x="210.8" y="181" width="0.8" height="15.0" fill="rgb(205,91,15)" rx="2" ry="2" />
<text  x="213.82" y="191.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.03%)</title><rect x="210.0" y="133" width="0.4" height="15.0" fill="rgb(228,90,34)" rx="2" ry="2" />
<text  x="213.00" y="143.5" ></text>
</g>
<g >
<title>strings.indexFunc (1 samples, 0.03%)</title><rect x="206.7" y="197" width="0.4" height="15.0" fill="rgb(230,187,26)" rx="2" ry="2" />
<text  x="209.73" y="207.5" ></text>
</g>
<g >
<title>runtime.forEachP (10 samples, 0.35%)</title><rect x="1156.9" y="213" width="4.1" height="15.0" fill="rgb(229,40,46)" rx="2" ry="2" />
<text  x="1159.94" y="223.5" ></text>
</g>
<g >
<title>net/http.(*connReader).backgroundRead (67 samples, 2.32%)</title><rect x="690.4" y="245" width="27.4" height="15.0" fill="rgb(214,56,22)" rx="2" ry="2" />
<text  x="693.41" y="255.5" >n..</text>
</g>
<g >
<title>runtime.memequal (1 samples, 0.03%)</title><rect x="205.1" y="165" width="0.4" height="15.0" fill="rgb(228,93,7)" rx="2" ry="2" />
<text  x="208.10" y="175.5" ></text>
</g>
<g >
<title>runtime.preemptone (7 samples, 0.24%)</title><rect x="1158.2" y="181" width="2.8" height="15.0" fill="rgb(233,61,3)" rx="2" ry="2" />
<text  x="1161.16" y="191.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (1 samples, 0.03%)</title><rect x="1154.5" y="229" width="0.4" height="15.0" fill="rgb(224,201,42)" rx="2" ry="2" />
<text  x="1157.49" y="239.5" ></text>
</g>
<g >
<title>github.com/vivekprm/go-pprof-demo/handlers.WithStats.func1 (620 samples, 21.45%)</title><rect x="437.3" y="181" width="253.1" height="15.0" fill="rgb(218,108,23)" rx="2" ry="2" />
<text  x="440.35" y="191.5" >github.com/vivekprm/go-pprof-demo..</text>
</g>
<g >
<title>runtime.wakep (17 samples, 0.59%)</title><rect x="1180.2" y="213" width="6.9" height="15.0" fill="rgb(235,86,22)" rx="2" ry="2" />
<text  x="1183.20" y="223.5" ></text>
</g>
<g >
<title>runtime.findRunnable (969 samples, 33.52%)</title><rect x="729.2" y="197" width="395.5" height="15.0" fill="rgb(222,90,10)" rx="2" ry="2" />
<text  x="732.18" y="207.5" >runtime.findRunnable</text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.03%)</title><rect x="1140.6" y="133" width="0.4" height="15.0" fill="rgb(239,185,3)" rx="2" ry="2" />
<text  x="1143.61" y="143.5" ></text>
</g>
<g >
<title>runtime.entersyscall (1 samples, 0.03%)</title><rect x="621.4" y="69" width="0.4" height="15.0" fill="rgb(229,9,31)" rx="2" ry="2" />
<text  x="624.43" y="79.5" ></text>
</g>
<g >
<title>runtime.findRunnable (1 samples, 0.03%)</title><rect x="727.1" y="181" width="0.5" height="15.0" fill="rgb(242,106,44)" rx="2" ry="2" />
<text  x="730.14" y="191.5" ></text>
</g>
<g >
<title>context.(*cancelCtx).Done (1 samples, 0.03%)</title><rect x="202.7" y="149" width="0.4" height="15.0" fill="rgb(216,14,9)" rx="2" ry="2" />
<text  x="205.65" y="159.5" ></text>
</g>
<g >
<title>time.Now (2 samples, 0.07%)</title><rect x="689.2" y="165" width="0.8" height="15.0" fill="rgb(210,138,47)" rx="2" ry="2" />
<text  x="692.18" y="175.5" ></text>
</g>
<g >
<title>runtime.semasleep (6 samples, 0.21%)</title><rect x="1167.6" y="197" width="2.4" height="15.0" fill="rgb(208,74,17)" rx="2" ry="2" />
<text  x="1170.55" y="207.5" ></text>
</g>
<g >
<title>os.hostname (584 samples, 20.20%)</title><rect x="450.8" y="149" width="238.4" height="15.0" fill="rgb(238,132,31)" rx="2" ry="2" />
<text  x="453.82" y="159.5" >os.hostname</text>
</g>
<g >
<title>aeshashbody (1 samples, 0.03%)</title><rect x="442.2" y="133" width="0.5" height="15.0" fill="rgb(244,20,0)" rx="2" ry="2" />
<text  x="445.24" y="143.5" ></text>
</g>
<g >
<title>net/textproto.canonicalMIMEHeaderKey (1 samples, 0.03%)</title><rect x="209.6" y="181" width="0.4" height="15.0" fill="rgb(240,107,16)" rx="2" ry="2" />
<text  x="212.59" y="191.5" ></text>
</g>
<g >
<title>runtime.unlock2 (1 samples, 0.03%)</title><rect x="1161.8" y="197" width="0.4" height="15.0" fill="rgb(205,176,26)" rx="2" ry="2" />
<text  x="1164.84" y="207.5" ></text>
</g>
<g >
<title>runtime.madvise (11 samples, 0.38%)</title><rect x="1150.0" y="197" width="4.5" height="15.0" fill="rgb(217,130,31)" rx="2" ry="2" />
<text  x="1153.00" y="207.5" ></text>
</g>
<g >
<title>net/http.(*chunkWriter).writeHeader (6 samples, 0.21%)</title><rect x="215.7" y="181" width="2.5" height="15.0" fill="rgb(253,72,22)" rx="2" ry="2" />
<text  x="218.71" y="191.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker.func2 (8 samples, 0.28%)</title><rect x="718.6" y="213" width="3.2" height="15.0" fill="rgb(244,228,23)" rx="2" ry="2" />
<text  x="721.57" y="223.5" ></text>
</g>
<g >
<title>runtime.mapassign_faststr (2 samples, 0.07%)</title><rect x="441.8" y="149" width="0.9" height="15.0" fill="rgb(247,34,10)" rx="2" ry="2" />
<text  x="444.84" y="159.5" ></text>
</g>
<g >
<title>runtime.walltime (1 samples, 0.03%)</title><rect x="689.6" y="133" width="0.4" height="15.0" fill="rgb(208,210,13)" rx="2" ry="2" />
<text  x="692.59" y="143.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).decref (1 samples, 0.03%)</title><rect x="201.8" y="197" width="0.4" height="15.0" fill="rgb(228,14,23)" rx="2" ry="2" />
<text  x="204.84" y="207.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="1189.2" y="181" width="0.4" height="15.0" fill="rgb(248,228,18)" rx="2" ry="2" />
<text  x="1192.18" y="191.5" ></text>
</g>
<g >
<title>runtime.preemptall (2 samples, 0.07%)</title><rect x="1188.0" y="213" width="0.8" height="15.0" fill="rgb(229,147,49)" rx="2" ry="2" />
<text  x="1190.96" y="223.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.03%)</title><rect x="206.3" y="165" width="0.4" height="15.0" fill="rgb(236,14,31)" rx="2" ry="2" />
<text  x="209.33" y="175.5" ></text>
</g>
<g >
<title>runtime.stopTheWorldWithSema (4 samples, 0.14%)</title><rect x="1187.1" y="229" width="1.7" height="15.0" fill="rgb(222,25,22)" rx="2" ry="2" />
<text  x="1190.14" y="239.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (1 samples, 0.03%)</title><rect x="718.2" y="149" width="0.4" height="15.0" fill="rgb(233,4,26)" rx="2" ry="2" />
<text  x="721.16" y="159.5" ></text>
</g>
<g >
<title>net/textproto.(*Reader).ReadMIMEHeader (7 samples, 0.24%)</title><rect x="207.6" y="213" width="2.8" height="15.0" fill="rgb(212,25,7)" rx="2" ry="2" />
<text  x="210.55" y="223.5" ></text>
</g>
<g >
<title>syscall.sysctl (165 samples, 5.71%)</title><rect x="621.8" y="117" width="67.4" height="15.0" fill="rgb(238,50,21)" rx="2" ry="2" />
<text  x="624.84" y="127.5" >syscall..</text>
</g>
<g >
<title>net/url.ParseRequestURI (3 samples, 0.10%)</title><rect x="204.3" y="197" width="1.2" height="15.0" fill="rgb(245,159,33)" rx="2" ry="2" />
<text  x="207.29" y="207.5" ></text>
</g>
<g >
<title>runtime.gcWriteBarrierR8 (1 samples, 0.03%)</title><rect x="210.0" y="181" width="0.4" height="15.0" fill="rgb(219,196,21)" rx="2" ry="2" />
<text  x="213.00" y="191.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.03%)</title><rect x="202.2" y="165" width="0.5" height="15.0" fill="rgb(208,11,6)" rx="2" ry="2" />
<text  x="205.24" y="175.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.03%)</title><rect x="717.8" y="181" width="0.4" height="15.0" fill="rgb(241,79,47)" rx="2" ry="2" />
<text  x="720.76" y="191.5" ></text>
</g>
<g >
<title>runtime.netpoll (507 samples, 17.54%)</title><rect x="841.8" y="181" width="207.0" height="15.0" fill="rgb(231,207,18)" rx="2" ry="2" />
<text  x="844.84" y="191.5" >runtime.netpoll</text>
</g>
<g >
<title>net/http.validMethod (1 samples, 0.03%)</title><rect x="206.7" y="213" width="0.4" height="15.0" fill="rgb(248,29,43)" rx="2" ry="2" />
<text  x="209.73" y="223.5" ></text>
</g>
<g >
<title>runtime.unlock2 (1 samples, 0.03%)</title><rect x="1142.2" y="133" width="0.5" height="15.0" fill="rgb(232,66,35)" rx="2" ry="2" />
<text  x="1145.24" y="143.5" ></text>
</g>
<g >
<title>path/filepath.Base (1 samples, 0.03%)</title><rect x="441.4" y="149" width="0.4" height="15.0" fill="rgb(237,33,9)" rx="2" ry="2" />
<text  x="444.43" y="159.5" ></text>
</g>
<g >
<title>runtime.(*scavengerState).init.func2 (1 samples, 0.03%)</title><rect x="717.8" y="213" width="0.4" height="15.0" fill="rgb(213,197,33)" rx="2" ry="2" />
<text  x="720.76" y="223.5" ></text>
</g>
<g >
<title>sync/atomic.(*Pointer[...]).Store (1 samples, 0.03%)</title><rect x="1189.6" y="245" width="0.4" height="15.0" fill="rgb(229,132,40)" rx="2" ry="2" />
<text  x="1192.59" y="255.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).enlistWorker (5 samples, 0.17%)</title><rect x="1154.9" y="181" width="2.0" height="15.0" fill="rgb(222,56,47)" rx="2" ry="2" />
<text  x="1157.90" y="191.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_unlock (2 samples, 0.07%)</title><rect x="841.0" y="133" width="0.8" height="15.0" fill="rgb(233,219,35)" rx="2" ry="2" />
<text  x="844.02" y="143.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.03%)</title><rect x="443.9" y="117" width="0.4" height="15.0" fill="rgb(236,186,2)" rx="2" ry="2" />
<text  x="446.88" y="127.5" ></text>
</g>
<g >
<title>runtime.stealWork (182 samples, 6.30%)</title><rect x="1049.2" y="181" width="74.3" height="15.0" fill="rgb(246,46,48)" rx="2" ry="2" />
<text  x="1052.18" y="191.5" >runtime...</text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (11 samples, 0.38%)</title><rect x="1145.5" y="229" width="4.5" height="15.0" fill="rgb(253,178,3)" rx="2" ry="2" />
<text  x="1148.51" y="239.5" ></text>
</g>
<g >
<title>runtime.walltime (2 samples, 0.07%)</title><rect x="212.9" y="181" width="0.8" height="15.0" fill="rgb(220,193,27)" rx="2" ry="2" />
<text  x="215.86" y="191.5" ></text>
</g>
<g >
<title>runtime.osyield (7 samples, 0.24%)</title><rect x="751.6" y="165" width="2.9" height="15.0" fill="rgb(250,79,3)" rx="2" ry="2" />
<text  x="754.63" y="175.5" ></text>
</g>
<g >
<title>context.propagateCancel (1 samples, 0.03%)</title><rect x="202.7" y="181" width="0.4" height="15.0" fill="rgb(212,220,35)" rx="2" ry="2" />
<text  x="205.65" y="191.5" ></text>
</g>
<g >
<title>bytes.IndexByte (1 samples, 0.03%)</title><rect x="208.0" y="165" width="0.4" height="15.0" fill="rgb(221,212,23)" rx="2" ry="2" />
<text  x="210.96" y="175.5" ></text>
</g>
<g >
<title>runtime.wirep (1 samples, 0.03%)</title><rect x="726.7" y="149" width="0.4" height="15.0" fill="rgb(248,29,22)" rx="2" ry="2" />
<text  x="729.73" y="159.5" ></text>
</g>
<g >
<title>runtime.casgstatus (2 samples, 0.07%)</title><rect x="728.4" y="181" width="0.8" height="15.0" fill="rgb(209,171,13)" rx="2" ry="2" />
<text  x="731.37" y="191.5" ></text>
</g>
<g >
<title>runtime.checkdead (1 samples, 0.03%)</title><rect x="1123.9" y="149" width="0.4" height="15.0" fill="rgb(233,60,3)" rx="2" ry="2" />
<text  x="1126.88" y="159.5" ></text>
</g>
<g >
<title>runtime.convI2I (1 samples, 0.03%)</title><rect x="438.6" y="149" width="0.4" height="15.0" fill="rgb(226,180,19)" rx="2" ry="2" />
<text  x="441.57" y="159.5" ></text>
</g>
<g >
<title>runtime.mapaccess1_faststr (1 samples, 0.03%)</title><rect x="203.1" y="197" width="0.4" height="15.0" fill="rgb(225,98,20)" rx="2" ry="2" />
<text  x="206.06" y="207.5" ></text>
</g>
<g >
<title>runtime.nanotime (1 samples, 0.03%)</title><rect x="215.3" y="149" width="0.4" height="15.0" fill="rgb(224,129,37)" rx="2" ry="2" />
<text  x="218.31" y="159.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).putBatch (1 samples, 0.03%)</title><rect x="721.4" y="133" width="0.4" height="15.0" fill="rgb(208,136,37)" rx="2" ry="2" />
<text  x="724.43" y="143.5" ></text>
</g>
<g >
<title>strings.Contains (3 samples, 0.10%)</title><rect x="439.4" y="101" width="1.2" height="15.0" fill="rgb(228,98,46)" rx="2" ry="2" />
<text  x="442.39" y="111.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.03%)</title><rect x="1141.0" y="133" width="0.4" height="15.0" fill="rgb(244,193,33)" rx="2" ry="2" />
<text  x="1144.02" y="143.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (1 samples, 0.03%)</title><rect x="1142.7" y="165" width="0.4" height="15.0" fill="rgb(208,55,19)" rx="2" ry="2" />
<text  x="1145.65" y="175.5" ></text>
</g>
<g >
<title>fmt.Fprintln (3 samples, 0.10%)</title><rect x="437.3" y="149" width="1.3" height="15.0" fill="rgb(229,141,13)" rx="2" ry="2" />
<text  x="440.35" y="159.5" ></text>
</g>
<g >
<title>context.withCancel (1 samples, 0.03%)</title><rect x="202.7" y="197" width="0.4" height="15.0" fill="rgb(216,9,13)" rx="2" ry="2" />
<text  x="205.65" y="207.5" ></text>
</g>
<g >
<title>runtime.pthread_kill (2 samples, 0.07%)</title><rect x="1188.0" y="165" width="0.8" height="15.0" fill="rgb(254,13,17)" rx="2" ry="2" />
<text  x="1190.96" y="175.5" ></text>
</g>
<g >
<title>runtime.semasleep (214 samples, 7.40%)</title><rect x="754.5" y="149" width="87.3" height="15.0" fill="rgb(248,215,33)" rx="2" ry="2" />
<text  x="757.49" y="159.5" >runtime.se..</text>
</g>
<g >
<title>runtime.preemptone (1 samples, 0.03%)</title><rect x="1154.5" y="117" width="0.4" height="15.0" fill="rgb(235,138,34)" rx="2" ry="2" />
<text  x="1157.49" y="127.5" ></text>
</g>
<g >
<title>runtime.pidlegetSpinning (1 samples, 0.03%)</title><rect x="1128.0" y="165" width="0.4" height="15.0" fill="rgb(226,155,54)" rx="2" ry="2" />
<text  x="1130.96" y="175.5" ></text>
</g>
<g >
<title>net/textproto.(*Reader).upcomingHeaderKeys (2 samples, 0.07%)</title><rect x="208.8" y="181" width="0.8" height="15.0" fill="rgb(251,123,35)" rx="2" ry="2" />
<text  x="211.78" y="191.5" ></text>
</g>
<g >
<title>runtime.sysUnusedOS (1 samples, 0.03%)</title><rect x="717.8" y="149" width="0.4" height="15.0" fill="rgb(244,203,11)" rx="2" ry="2" />
<text  x="720.76" y="159.5" ></text>
</g>
<g >
<title>syscall.Write (526 samples, 18.19%)</title><rect x="219.8" y="149" width="214.7" height="15.0" fill="rgb(220,159,27)" rx="2" ry="2" />
<text  x="222.80" y="159.5" >syscall.Write</text>
</g>
<g >
<title>runtime.findnull (2 samples, 0.07%)</title><rect x="725.1" y="181" width="0.8" height="15.0" fill="rgb(241,26,34)" rx="2" ry="2" />
<text  x="728.10" y="191.5" ></text>
</g>
<g >
<title>runtime.gostringnocopy (2 samples, 0.07%)</title><rect x="725.1" y="197" width="0.8" height="15.0" fill="rgb(217,40,26)" rx="2" ry="2" />
<text  x="728.10" y="207.5" ></text>
</g>
<g >
<title>runtime.procyield (1 samples, 0.03%)</title><rect x="1143.1" y="165" width="0.4" height="15.0" fill="rgb(217,64,7)" rx="2" ry="2" />
<text  x="1146.06" y="175.5" ></text>
</g>
<g >
<title>net/http.Header.WriteSubset (1 samples, 0.03%)</title><rect x="218.2" y="181" width="0.4" height="15.0" fill="rgb(233,92,2)" rx="2" ry="2" />
<text  x="221.16" y="191.5" ></text>
</g>
<g >
<title>aeshashbody (1 samples, 0.03%)</title><rect x="209.6" y="149" width="0.4" height="15.0" fill="rgb(228,130,52)" rx="2" ry="2" />
<text  x="212.59" y="159.5" ></text>
</g>
<g >
<title>strings.HasSuffix (1 samples, 0.03%)</title><rect x="205.1" y="181" width="0.4" height="15.0" fill="rgb(215,203,6)" rx="2" ry="2" />
<text  x="208.10" y="191.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (1 samples, 0.03%)</title><rect x="210.0" y="149" width="0.4" height="15.0" fill="rgb(215,190,31)" rx="2" ry="2" />
<text  x="213.00" y="159.5" ></text>
</g>
<g >
<title>runtime.kevent (2 samples, 0.07%)</title><rect x="1162.2" y="181" width="0.9" height="15.0" fill="rgb(225,103,50)" rx="2" ry="2" />
<text  x="1165.24" y="191.5" ></text>
</g>
<g >
<title>runtime.resetspinning (28 samples, 0.97%)</title><rect x="1128.0" y="197" width="11.4" height="15.0" fill="rgb(244,184,0)" rx="2" ry="2" />
<text  x="1130.96" y="207.5" ></text>
</g>
<g >
<title>runtime.semawakeup (1 samples, 0.03%)</title><rect x="1161.8" y="181" width="0.4" height="15.0" fill="rgb(254,44,1)" rx="2" ry="2" />
<text  x="1164.84" y="191.5" ></text>
</g>
<g >
<title>net/http.(*response).finishRequest (538 samples, 18.61%)</title><rect x="215.7" y="229" width="219.6" height="15.0" fill="rgb(212,225,42)" rx="2" ry="2" />
<text  x="218.71" y="239.5" >net/http.(*response).finishRe..</text>
</g>
<g >
<title>runtime.readyWithTime (1 samples, 0.03%)</title><rect x="717.3" y="197" width="0.5" height="15.0" fill="rgb(243,7,6)" rx="2" ry="2" />
<text  x="720.35" y="207.5" ></text>
</g>
<g >
<title>runtime.fastrand (1 samples, 0.03%)</title><rect x="730.0" y="181" width="0.4" height="15.0" fill="rgb(230,212,38)" rx="2" ry="2" />
<text  x="733.00" y="191.5" ></text>
</g>
<g >
<title>runtime.morestack (13 samples, 0.45%)</title><rect x="1140.2" y="245" width="5.3" height="15.0" fill="rgb(228,167,17)" rx="2" ry="2" />
<text  x="1143.20" y="255.5" ></text>
</g>
<g >
<title>runtime.mapiternext (1 samples, 0.03%)</title><rect x="212.0" y="213" width="0.4" height="15.0" fill="rgb(234,71,37)" rx="2" ry="2" />
<text  x="215.04" y="223.5" ></text>
</g>
<g >
<title>github.com/vivekprm/go-pprof-demo/stats.addTagsToName (5 samples, 0.17%)</title><rect x="443.1" y="149" width="2.0" height="15.0" fill="rgb(215,7,36)" rx="2" ry="2" />
<text  x="446.06" y="159.5" ></text>
</g>
<g >
<title>strings.Index (3 samples, 0.10%)</title><rect x="439.4" y="85" width="1.2" height="15.0" fill="rgb(226,209,4)" rx="2" ry="2" />
<text  x="442.39" y="95.5" ></text>
</g>
<g >
<title>syscall.syscall (526 samples, 18.19%)</title><rect x="219.8" y="117" width="214.7" height="15.0" fill="rgb(224,39,21)" rx="2" ry="2" />
<text  x="222.80" y="127.5" >syscall.syscall</text>
</g>
<g >
<title>runtime.newproc (4 samples, 0.14%)</title><rect x="214.1" y="213" width="1.6" height="15.0" fill="rgb(250,109,21)" rx="2" ry="2" />
<text  x="217.08" y="223.5" ></text>
</g>
<g >
<title>runtime.semawakeup (1 samples, 0.03%)</title><rect x="1142.7" y="133" width="0.4" height="15.0" fill="rgb(214,146,54)" rx="2" ry="2" />
<text  x="1145.65" y="143.5" ></text>
</g>
<g >
<title>runtime.reentersyscall (1 samples, 0.03%)</title><rect x="621.4" y="53" width="0.4" height="15.0" fill="rgb(233,174,52)" rx="2" ry="2" />
<text  x="624.43" y="63.5" ></text>
</g>
<g >
<title>runtime.schedule (3 samples, 0.10%)</title><rect x="725.9" y="213" width="1.2" height="15.0" fill="rgb(254,30,36)" rx="2" ry="2" />
<text  x="728.92" y="223.5" ></text>
</g>
<g >
<title>sync/atomic.(*Bool).Load (1 samples, 0.03%)</title><rect x="218.6" y="181" width="0.4" height="15.0" fill="rgb(217,40,47)" rx="2" ry="2" />
<text  x="221.57" y="191.5" ></text>
</g>
<g >
<title>runtime.(*wbBuf).putFast (1 samples, 0.03%)</title><rect x="443.5" y="117" width="0.4" height="15.0" fill="rgb(235,53,37)" rx="2" ry="2" />
<text  x="446.47" y="127.5" ></text>
</g>
<g >
<title>runtime.mPark (5 samples, 0.17%)</title><rect x="721.8" y="213" width="2.1" height="15.0" fill="rgb(230,36,33)" rx="2" ry="2" />
<text  x="724.84" y="223.5" ></text>
</g>
<g >
<title>runtime.findRunnable (3 samples, 0.10%)</title><rect x="723.9" y="197" width="1.2" height="15.0" fill="rgb(233,103,24)" rx="2" ry="2" />
<text  x="726.88" y="207.5" ></text>
</g>
<g >
<title>runtime.runqgrab (170 samples, 5.88%)</title><rect x="1054.1" y="149" width="69.4" height="15.0" fill="rgb(215,42,4)" rx="2" ry="2" />
<text  x="1057.08" y="159.5" >runtime..</text>
</g>
<g >
<title>github.com/vivekprm/go-pprof-demo/stats.RecordTimer (9 samples, 0.31%)</title><rect x="446.7" y="165" width="3.7" height="15.0" fill="rgb(240,132,39)" rx="2" ry="2" />
<text  x="449.73" y="175.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (1 samples, 0.03%)</title><rect x="1141.0" y="101" width="0.4" height="15.0" fill="rgb(245,157,4)" rx="2" ry="2" />
<text  x="1144.02" y="111.5" ></text>
</g>
<g >
<title>runtime.semawakeup (2 samples, 0.07%)</title><rect x="1139.4" y="165" width="0.8" height="15.0" fill="rgb(223,10,50)" rx="2" ry="2" />
<text  x="1142.39" y="175.5" ></text>
</g>
<g >
<title>net/textproto.readMIMEHeader (7 samples, 0.24%)</title><rect x="207.6" y="197" width="2.8" height="15.0" fill="rgb(221,46,43)" rx="2" ry="2" />
<text  x="210.55" y="207.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.07%)</title><rect x="451.2" y="69" width="0.8" height="15.0" fill="rgb(210,41,54)" rx="2" ry="2" />
<text  x="454.22" y="79.5" ></text>
</g>
<g >
<title>github.com/vivekprm/go-pprof-demo/handlers.Hello (4 samples, 0.14%)</title><rect x="437.3" y="165" width="1.7" height="15.0" fill="rgb(250,37,28)" rx="2" ry="2" />
<text  x="440.35" y="175.5" ></text>
</g>
<g >
<title>indexbytebody (1 samples, 0.03%)</title><rect x="446.3" y="101" width="0.4" height="15.0" fill="rgb(225,64,20)" rx="2" ry="2" />
<text  x="449.33" y="111.5" ></text>
</g>
<g >
<title>runtime.signalM (1 samples, 0.03%)</title><rect x="1154.5" y="101" width="0.4" height="15.0" fill="rgb(236,60,6)" rx="2" ry="2" />
<text  x="1157.49" y="111.5" ></text>
</g>
<g >
<title>sync/atomic.StorePointer (1 samples, 0.03%)</title><rect x="1189.6" y="229" width="0.4" height="15.0" fill="rgb(238,202,38)" rx="2" ry="2" />
<text  x="1192.59" y="239.5" ></text>
</g>
<g >
<title>runtime.procyield (1 samples, 0.03%)</title><rect x="1125.1" y="165" width="0.4" height="15.0" fill="rgb(250,25,43)" rx="2" ry="2" />
<text  x="1128.10" y="175.5" ></text>
</g>
<g >
<title>runtime.nanotime (1 samples, 0.03%)</title><rect x="690.0" y="149" width="0.4" height="15.0" fill="rgb(219,105,23)" rx="2" ry="2" />
<text  x="693.00" y="159.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.03%)</title><rect x="1141.0" y="149" width="0.4" height="15.0" fill="rgb(206,135,30)" rx="2" ry="2" />
<text  x="1144.02" y="159.5" ></text>
</g>
<g >
<title>net/http.(*connReader).abortPendingRead (1 samples, 0.03%)</title><rect x="434.9" y="213" width="0.4" height="15.0" fill="rgb(248,179,19)" rx="2" ry="2" />
<text  x="437.90" y="223.5" ></text>
</g>
<g >
<title>runtime.park_m (1,010 samples, 34.94%)</title><rect x="728.0" y="229" width="412.2" height="15.0" fill="rgb(230,182,37)" rx="2" ry="2" />
<text  x="730.96" y="239.5" >runtime.park_m</text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.03%)</title><rect x="444.7" y="117" width="0.4" height="15.0" fill="rgb(214,89,13)" rx="2" ry="2" />
<text  x="447.69" y="127.5" ></text>
</g>
<g >
<title>runtime.startm (44 samples, 1.52%)</title><rect x="733.7" y="149" width="17.9" height="15.0" fill="rgb(244,168,37)" rx="2" ry="2" />
<text  x="736.67" y="159.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.03%)</title><rect x="718.2" y="213" width="0.4" height="15.0" fill="rgb(247,204,6)" rx="2" ry="2" />
<text  x="721.16" y="223.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (2 samples, 0.07%)</title><rect x="725.9" y="181" width="0.8" height="15.0" fill="rgb(241,182,37)" rx="2" ry="2" />
<text  x="728.92" y="191.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (1 samples, 0.03%)</title><rect x="205.5" y="149" width="0.4" height="15.0" fill="rgb(209,71,3)" rx="2" ry="2" />
<text  x="208.51" y="159.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).push (1 samples, 0.03%)</title><rect x="718.6" y="101" width="0.4" height="15.0" fill="rgb(220,49,7)" rx="2" ry="2" />
<text  x="721.57" y="111.5" ></text>
</g>
<g >
<title>runtime.wakep (28 samples, 0.97%)</title><rect x="1128.0" y="181" width="11.4" height="15.0" fill="rgb(210,126,14)" rx="2" ry="2" />
<text  x="1130.96" y="191.5" ></text>
</g>
<g >
<title>strings.IndexByte (1 samples, 0.03%)</title><rect x="204.7" y="149" width="0.4" height="15.0" fill="rgb(227,66,48)" rx="2" ry="2" />
<text  x="207.69" y="159.5" ></text>
</g>
<g >
<title>internal/poll.setDeadlineImpl (1 samples, 0.03%)</title><rect x="213.7" y="197" width="0.4" height="15.0" fill="rgb(240,99,7)" rx="2" ry="2" />
<text  x="216.67" y="207.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.03%)</title><rect x="212.4" y="181" width="0.5" height="15.0" fill="rgb(215,18,18)" rx="2" ry="2" />
<text  x="215.45" y="191.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).scavenge (1 samples, 0.03%)</title><rect x="717.8" y="197" width="0.4" height="15.0" fill="rgb(216,67,13)" rx="2" ry="2" />
<text  x="720.76" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mspan).nextFreeIndex (1 samples, 0.03%)</title><rect x="449.2" y="53" width="0.4" height="15.0" fill="rgb(243,13,28)" rx="2" ry="2" />
<text  x="452.18" y="63.5" ></text>
</g>
<g >
<title>net/http.DetectContentType (3 samples, 0.10%)</title><rect x="216.1" y="165" width="1.2" height="15.0" fill="rgb(254,78,26)" rx="2" ry="2" />
<text  x="219.12" y="175.5" ></text>
</g>
<g >
<title>runtime.notesleep (6 samples, 0.21%)</title><rect x="730.4" y="149" width="2.5" height="15.0" fill="rgb(216,58,0)" rx="2" ry="2" />
<text  x="733.41" y="159.5" ></text>
</g>
<g >
<title>runtime.findnull (1 samples, 0.03%)</title><rect x="214.5" y="117" width="0.4" height="15.0" fill="rgb(236,170,39)" rx="2" ry="2" />
<text  x="217.49" y="127.5" ></text>
</g>
<g >
<title>runtime.preemptone (2 samples, 0.07%)</title><rect x="1188.0" y="197" width="0.8" height="15.0" fill="rgb(231,173,39)" rx="2" ry="2" />
<text  x="1190.96" y="207.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (2 samples, 0.07%)</title><rect x="718.6" y="165" width="0.8" height="15.0" fill="rgb(246,150,54)" rx="2" ry="2" />
<text  x="721.57" y="175.5" ></text>
</g>
<g >
<title>regexp/syntax.(*Inst).MatchRunePos (1 samples, 0.03%)</title><rect x="448.4" y="53" width="0.4" height="15.0" fill="rgb(205,10,44)" rx="2" ry="2" />
<text  x="451.37" y="63.5" ></text>
</g>
<g >
<title>runtime.usleep (24 samples, 0.83%)</title><rect x="1170.0" y="197" width="9.8" height="15.0" fill="rgb(235,24,48)" rx="2" ry="2" />
<text  x="1173.00" y="207.5" ></text>
</g>
<g >
<title>memeqbody (1 samples, 0.03%)</title><rect x="203.1" y="181" width="0.4" height="15.0" fill="rgb(229,206,47)" rx="2" ry="2" />
<text  x="206.06" y="191.5" ></text>
</g>
<g >
<title>regexp.(*Regexp).tryBacktrack (1 samples, 0.03%)</title><rect x="448.0" y="69" width="0.4" height="15.0" fill="rgb(253,59,15)" rx="2" ry="2" />
<text  x="450.96" y="79.5" ></text>
</g>
<g >
<title>regexp.(*Regexp).ReplaceAllString (6 samples, 0.21%)</title><rect x="448.0" y="133" width="2.4" height="15.0" fill="rgb(250,91,37)" rx="2" ry="2" />
<text  x="450.96" y="143.5" ></text>
</g>
<g >
<title>runtime.nanotime1 (1 samples, 0.03%)</title><rect x="690.0" y="133" width="0.4" height="15.0" fill="rgb(232,200,3)" rx="2" ry="2" />
<text  x="693.00" y="143.5" ></text>
</g>
<g >
<title>time.absDate (1 samples, 0.03%)</title><rect x="217.8" y="133" width="0.4" height="15.0" fill="rgb(227,205,21)" rx="2" ry="2" />
<text  x="220.76" y="143.5" ></text>
</g>
<g >
<title>runtime.notewakeup (17 samples, 0.59%)</title><rect x="1180.2" y="181" width="6.9" height="15.0" fill="rgb(253,204,28)" rx="2" ry="2" />
<text  x="1183.20" y="191.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).prepare (1 samples, 0.03%)</title><rect x="690.8" y="181" width="0.4" height="15.0" fill="rgb(231,76,46)" rx="2" ry="2" />
<text  x="693.82" y="191.5" ></text>
</g>
<g >
<title>runtime.scanobject (4 samples, 0.14%)</title><rect x="719.4" y="181" width="1.6" height="15.0" fill="rgb(237,164,36)" rx="2" ry="2" />
<text  x="722.39" y="191.5" ></text>
</g>
<g >
<title>runtime.mapaccess1_faststr (1 samples, 0.03%)</title><rect x="209.6" y="165" width="0.4" height="15.0" fill="rgb(212,171,41)" rx="2" ry="2" />
<text  x="212.59" y="175.5" ></text>
</g>
<g >
<title>runtime.netpoll (1 samples, 0.03%)</title><rect x="1161.0" y="197" width="0.4" height="15.0" fill="rgb(205,31,28)" rx="2" ry="2" />
<text  x="1164.02" y="207.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (26 samples, 0.90%)</title><rect x="1128.4" y="117" width="10.6" height="15.0" fill="rgb(235,88,45)" rx="2" ry="2" />
<text  x="1131.37" y="127.5" ></text>
</g>
<g >
<title>strings.IndexByte (1 samples, 0.03%)</title><rect x="436.9" y="165" width="0.4" height="15.0" fill="rgb(229,83,1)" rx="2" ry="2" />
<text  x="439.94" y="175.5" ></text>
</g>
<g >
<title>runtime.unlock2 (1 samples, 0.03%)</title><rect x="1124.3" y="165" width="0.4" height="15.0" fill="rgb(237,190,27)" rx="2" ry="2" />
<text  x="1127.29" y="175.5" ></text>
</g>
<g >
<title>internal/poll.setDeadlineImpl (2 samples, 0.07%)</title><rect x="201.4" y="213" width="0.8" height="15.0" fill="rgb(252,26,34)" rx="2" ry="2" />
<text  x="204.43" y="223.5" ></text>
</g>
<g >
<title>regexp.(*bitState).reset (1 samples, 0.03%)</title><rect x="445.1" y="69" width="0.4" height="15.0" fill="rgb(226,25,50)" rx="2" ry="2" />
<text  x="448.10" y="79.5" ></text>
</g>
<g >
<title>runtime.mallocgc (3 samples, 0.10%)</title><rect x="205.5" y="181" width="1.2" height="15.0" fill="rgb(210,128,44)" rx="2" ry="2" />
<text  x="208.51" y="191.5" ></text>
</g>
<g >
<title>runtime.osyield (1 samples, 0.03%)</title><rect x="1179.8" y="197" width="0.4" height="15.0" fill="rgb(221,169,44)" rx="2" ry="2" />
<text  x="1182.80" y="207.5" ></text>
</g>
<g >
<title>net/http.readRequest (8 samples, 0.28%)</title><rect x="203.5" y="213" width="3.2" height="15.0" fill="rgb(233,201,21)" rx="2" ry="2" />
<text  x="206.47" y="223.5" ></text>
</g>
<g >
<title>runtime.goschedImpl (6 samples, 0.21%)</title><rect x="1140.6" y="197" width="2.5" height="15.0" fill="rgb(208,147,33)" rx="2" ry="2" />
<text  x="1143.61" y="207.5" ></text>
</g>
<g >
<title>runtime.(*gcBits).bitp (1 samples, 0.03%)</title><rect x="721.0" y="149" width="0.4" height="15.0" fill="rgb(220,69,34)" rx="2" ry="2" />
<text  x="724.02" y="159.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (2 samples, 0.07%)</title><rect x="1139.4" y="197" width="0.8" height="15.0" fill="rgb(205,227,17)" rx="2" ry="2" />
<text  x="1142.39" y="207.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (10 samples, 0.35%)</title><rect x="1163.5" y="133" width="4.1" height="15.0" fill="rgb(244,34,22)" rx="2" ry="2" />
<text  x="1166.47" y="143.5" ></text>
</g>
<g >
<title>runtime.bgscavenge (1 samples, 0.03%)</title><rect x="717.8" y="245" width="0.4" height="15.0" fill="rgb(242,110,2)" rx="2" ry="2" />
<text  x="720.76" y="255.5" ></text>
</g>
<g >
<title>indexbytebody (1 samples, 0.03%)</title><rect x="436.9" y="149" width="0.4" height="15.0" fill="rgb(211,213,52)" rx="2" ry="2" />
<text  x="439.94" y="159.5" ></text>
</g>
<g >
<title>runtime.goready.func1 (10 samples, 0.35%)</title><rect x="1163.5" y="229" width="4.1" height="15.0" fill="rgb(212,142,14)" rx="2" ry="2" />
<text  x="1166.47" y="239.5" ></text>
</g>
<g >
<title>runtime.procPin (1 samples, 0.03%)</title><rect x="437.3" y="85" width="0.5" height="15.0" fill="rgb(240,171,53)" rx="2" ry="2" />
<text  x="440.35" y="95.5" ></text>
</g>
<g >
<title>runtime.unlock2 (2 samples, 0.07%)</title><rect x="1188.8" y="213" width="0.8" height="15.0" fill="rgb(235,167,50)" rx="2" ry="2" />
<text  x="1191.78" y="223.5" ></text>
</g>
<g >
<title>runtime.gcStart.func2 (3 samples, 0.10%)</title><rect x="1162.2" y="229" width="1.3" height="15.0" fill="rgb(211,36,25)" rx="2" ry="2" />
<text  x="1165.24" y="239.5" ></text>
</g>
<g >
<title>runtime.nanotime (1 samples, 0.03%)</title><rect x="689.2" y="149" width="0.4" height="15.0" fill="rgb(237,41,11)" rx="2" ry="2" />
<text  x="692.18" y="159.5" ></text>
</g>
<g >
<title>runtime.semasleep (2 samples, 0.07%)</title><rect x="1187.1" y="181" width="0.9" height="15.0" fill="rgb(226,218,29)" rx="2" ry="2" />
<text  x="1190.14" y="191.5" ></text>
</g>
<g >
<title>sync.runtime_notifyListNotifyAll (1 samples, 0.03%)</title><rect x="717.3" y="213" width="0.5" height="15.0" fill="rgb(223,156,23)" rx="2" ry="2" />
<text  x="720.35" y="223.5" ></text>
</g>
<g >
<title>strings.Cut (1 samples, 0.03%)</title><rect x="203.9" y="181" width="0.4" height="15.0" fill="rgb(230,193,54)" rx="2" ry="2" />
<text  x="206.88" y="191.5" ></text>
</g>
<g >
<title>strings.Contains (1 samples, 0.03%)</title><rect x="446.3" y="133" width="0.4" height="15.0" fill="rgb(205,108,52)" rx="2" ry="2" />
<text  x="449.33" y="143.5" ></text>
</g>
<g >
<title>runtime.semawakeup (2 samples, 0.07%)</title><rect x="1188.8" y="197" width="0.8" height="15.0" fill="rgb(214,152,47)" rx="2" ry="2" />
<text  x="1191.78" y="207.5" ></text>
</g>
<g >
<title>bytes.IndexByte (2 samples, 0.07%)</title><rect x="208.8" y="149" width="0.8" height="15.0" fill="rgb(210,171,16)" rx="2" ry="2" />
<text  x="211.78" y="159.5" ></text>
</g>
<g >
<title>runtime.getMCache (1 samples, 0.03%)</title><rect x="442.7" y="133" width="0.4" height="15.0" fill="rgb(213,166,30)" rx="2" ry="2" />
<text  x="445.65" y="143.5" ></text>
</g>
<g >
<title>runtime.madvise (11 samples, 0.38%)</title><rect x="1145.5" y="197" width="4.5" height="15.0" fill="rgb(240,202,45)" rx="2" ry="2" />
<text  x="1148.51" y="207.5" ></text>
</g>
<g >
<title>runtime.write (1 samples, 0.03%)</title><rect x="1048.8" y="165" width="0.4" height="15.0" fill="rgb(236,15,3)" rx="2" ry="2" />
<text  x="1051.78" y="175.5" ></text>
</g>
<g >
<title>runtime.concatstrings (1 samples, 0.03%)</title><rect x="443.1" y="117" width="0.4" height="15.0" fill="rgb(217,162,28)" rx="2" ry="2" />
<text  x="446.06" y="127.5" ></text>
</g>
<g >
<title>net/http.serverHandler.ServeHTTP (625 samples, 21.62%)</title><rect x="435.3" y="229" width="255.1" height="15.0" fill="rgb(254,21,6)" rx="2" ry="2" />
<text  x="438.31" y="239.5" >net/http.serverHandler.ServeHTTP</text>
</g>
<g >
<title>runtime.notetsleep_internal (3 samples, 0.10%)</title><rect x="1156.9" y="181" width="1.3" height="15.0" fill="rgb(205,176,4)" rx="2" ry="2" />
<text  x="1159.94" y="191.5" ></text>
</g>
<g >
<title>runtime.semasleep (1 samples, 0.03%)</title><rect x="1141.0" y="117" width="0.4" height="15.0" fill="rgb(220,177,17)" rx="2" ry="2" />
<text  x="1144.02" y="127.5" ></text>
</g>
<g >
<title>runtime.isSystemGoroutine (2 samples, 0.07%)</title><rect x="214.1" y="149" width="0.8" height="15.0" fill="rgb(225,71,10)" rx="2" ry="2" />
<text  x="217.08" y="159.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).waitRead (1 samples, 0.03%)</title><rect x="691.2" y="197" width="0.4" height="15.0" fill="rgb(231,145,7)" rx="2" ry="2" />
<text  x="694.22" y="207.5" ></text>
</g>
<g >
<title>runtime.notewakeup (10 samples, 0.35%)</title><rect x="1163.5" y="165" width="4.1" height="15.0" fill="rgb(239,196,49)" rx="2" ry="2" />
<text  x="1166.47" y="175.5" ></text>
</g>
<g >
<title>runtime.growslice (3 samples, 0.10%)</title><rect x="448.8" y="101" width="1.2" height="15.0" fill="rgb(210,58,13)" rx="2" ry="2" />
<text  x="451.78" y="111.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (1 samples, 0.03%)</title><rect x="1142.7" y="117" width="0.4" height="15.0" fill="rgb(228,200,41)" rx="2" ry="2" />
<text  x="1145.65" y="127.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).wait (1 samples, 0.03%)</title><rect x="691.2" y="181" width="0.4" height="15.0" fill="rgb(216,89,6)" rx="2" ry="2" />
<text  x="694.22" y="191.5" ></text>
</g>
<g >
<title>syscall.syscall6 (165 samples, 5.71%)</title><rect x="621.8" y="101" width="67.4" height="15.0" fill="rgb(236,33,54)" rx="2" ry="2" />
<text  x="624.84" y="111.5" >syscall..</text>
</g>
<g >
<title>syscall.syscall6 (416 samples, 14.39%)</title><rect x="452.0" y="85" width="169.8" height="15.0" fill="rgb(215,15,19)" rx="2" ry="2" />
<text  x="455.04" y="95.5" >syscall.syscall6</text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.03%)</title><rect x="441.0" y="101" width="0.4" height="15.0" fill="rgb(219,120,8)" rx="2" ry="2" />
<text  x="444.02" y="111.5" ></text>
</g>
<g >
<title>runtime.sysUnusedOS (11 samples, 0.38%)</title><rect x="1150.0" y="213" width="4.5" height="15.0" fill="rgb(235,96,7)" rx="2" ry="2" />
<text  x="1153.00" y="223.5" ></text>
</g>
<g >
<title>runtime.(*guintptr).cas (1 samples, 0.03%)</title><rect x="1053.7" y="149" width="0.4" height="15.0" fill="rgb(217,30,54)" rx="2" ry="2" />
<text  x="1056.67" y="159.5" ></text>
</g>
<g >
<title>runtime.sysUsedOS (11 samples, 0.38%)</title><rect x="1145.5" y="213" width="4.5" height="15.0" fill="rgb(245,6,22)" rx="2" ry="2" />
<text  x="1148.51" y="223.5" ></text>
</g>
<g >
<title>regexp.(*inputString).step (1 samples, 0.03%)</title><rect x="448.0" y="53" width="0.4" height="15.0" fill="rgb(245,48,38)" rx="2" ry="2" />
<text  x="450.96" y="63.5" ></text>
</g>
<g >
<title>runtime.forEachP (1 samples, 0.03%)</title><rect x="718.2" y="181" width="0.4" height="15.0" fill="rgb(222,126,1)" rx="2" ry="2" />
<text  x="721.16" y="191.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone.func1.1 (1 samples, 0.03%)</title><rect x="718.2" y="165" width="0.4" height="15.0" fill="rgb(250,143,16)" rx="2" ry="2" />
<text  x="721.16" y="175.5" ></text>
</g>
<g >
<title>runtime.notewakeup (44 samples, 1.52%)</title><rect x="733.7" y="133" width="17.9" height="15.0" fill="rgb(213,141,45)" rx="2" ry="2" />
<text  x="736.67" y="143.5" ></text>
</g>
<g >
<title>time.Now (2 samples, 0.07%)</title><rect x="212.9" y="213" width="0.8" height="15.0" fill="rgb(205,63,53)" rx="2" ry="2" />
<text  x="215.86" y="223.5" ></text>
</g>
<g >
<title>net/http.(*conn).hijacked (2 samples, 0.07%)</title><rect x="437.8" y="101" width="0.8" height="15.0" fill="rgb(214,61,37)" rx="2" ry="2" />
<text  x="440.76" y="111.5" ></text>
</g>
<g >
<title>runtime.(*mcache).prepareForSweep (1 samples, 0.03%)</title><rect x="1123.5" y="149" width="0.4" height="15.0" fill="rgb(213,78,12)" rx="2" ry="2" />
<text  x="1126.47" y="159.5" ></text>
</g>
<g >
<title>runtime.writeHeapBits.write (1 samples, 0.03%)</title><rect x="447.6" y="85" width="0.4" height="15.0" fill="rgb(209,58,15)" rx="2" ry="2" />
<text  x="450.55" y="95.5" ></text>
</g>
<g >
<title>regexp.(*Regexp).backtrack (2 samples, 0.07%)</title><rect x="448.0" y="85" width="0.8" height="15.0" fill="rgb(250,6,54)" rx="2" ry="2" />
<text  x="450.96" y="95.5" ></text>
</g>
<g >
<title>os.Hostname (584 samples, 20.20%)</title><rect x="450.8" y="165" width="238.4" height="15.0" fill="rgb(228,211,43)" rx="2" ry="2" />
<text  x="453.82" y="175.5" >os.Hostname</text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.03%)</title><rect x="205.5" y="133" width="0.4" height="15.0" fill="rgb(205,159,48)" rx="2" ry="2" />
<text  x="208.51" y="143.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (1 samples, 0.03%)</title><rect x="721.4" y="149" width="0.4" height="15.0" fill="rgb(248,139,36)" rx="2" ry="2" />
<text  x="724.43" y="159.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.03%)</title><rect x="449.6" y="85" width="0.4" height="15.0" fill="rgb(233,113,32)" rx="2" ry="2" />
<text  x="452.59" y="95.5" ></text>
</g>
<g >
<title>regexp.(*Regexp).replaceAll (6 samples, 0.21%)</title><rect x="448.0" y="117" width="2.4" height="15.0" fill="rgb(254,123,31)" rx="2" ry="2" />
<text  x="450.96" y="127.5" ></text>
</g>
<g >
<title>internal/bytealg.IndexByteString (1 samples, 0.03%)</title><rect x="725.5" y="165" width="0.4" height="15.0" fill="rgb(242,59,42)" rx="2" ry="2" />
<text  x="728.51" y="175.5" ></text>
</g>
<g >
<title>runtime.ready (1 samples, 0.03%)</title><rect x="717.3" y="133" width="0.5" height="15.0" fill="rgb(212,39,21)" rx="2" ry="2" />
<text  x="720.35" y="143.5" ></text>
</g>
<g >
<title>runtime.injectglist.func1 (44 samples, 1.52%)</title><rect x="733.7" y="165" width="17.9" height="15.0" fill="rgb(211,136,27)" rx="2" ry="2" />
<text  x="736.67" y="175.5" ></text>
</g>
<g >
<title>runtime.newproc.func1 (18 samples, 0.62%)</title><rect x="1179.8" y="229" width="7.3" height="15.0" fill="rgb(213,114,32)" rx="2" ry="2" />
<text  x="1182.80" y="239.5" ></text>
</g>
<g >
<title>runtime.osyield (24 samples, 0.83%)</title><rect x="1170.0" y="213" width="9.8" height="15.0" fill="rgb(239,31,36)" rx="2" ry="2" />
<text  x="1173.00" y="223.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (1 samples, 0.03%)</title><rect x="1163.1" y="165" width="0.4" height="15.0" fill="rgb(246,18,48)" rx="2" ry="2" />
<text  x="1166.06" y="175.5" ></text>
</g>
<g >
<title>net/http.(*connReader).startBackgroundRead (5 samples, 0.17%)</title><rect x="213.7" y="229" width="2.0" height="15.0" fill="rgb(233,45,25)" rx="2" ry="2" />
<text  x="216.67" y="239.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (1 samples, 0.03%)</title><rect x="1154.5" y="213" width="0.4" height="15.0" fill="rgb(212,86,40)" rx="2" ry="2" />
<text  x="1157.49" y="223.5" ></text>
</g>
<g >
<title>runtime.pthread_kill (5 samples, 0.17%)</title><rect x="1154.9" y="133" width="2.0" height="15.0" fill="rgb(249,84,30)" rx="2" ry="2" />
<text  x="1157.90" y="143.5" ></text>
</g>
<g >
<title>runtime.gopreempt_m (12 samples, 0.42%)</title><rect x="1140.6" y="213" width="4.9" height="15.0" fill="rgb(219,47,49)" rx="2" ry="2" />
<text  x="1143.61" y="223.5" ></text>
</g>
<g >
<title>sync.(*Cond).Broadcast (1 samples, 0.03%)</title><rect x="717.3" y="229" width="0.5" height="15.0" fill="rgb(250,192,25)" rx="2" ry="2" />
<text  x="720.35" y="239.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (2 samples, 0.07%)</title><rect x="1187.1" y="197" width="0.9" height="15.0" fill="rgb(218,65,45)" rx="2" ry="2" />
<text  x="1190.14" y="207.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (1 samples, 0.03%)</title><rect x="205.5" y="117" width="0.4" height="15.0" fill="rgb(239,2,3)" rx="2" ry="2" />
<text  x="208.51" y="127.5" ></text>
</g>
<g >
<title>github.com/vivekprm/go-pprof-demo/stats.clean (6 samples, 0.21%)</title><rect x="448.0" y="149" width="2.4" height="15.0" fill="rgb(225,106,31)" rx="2" ry="2" />
<text  x="450.96" y="159.5" ></text>
</g>
<g >
<title>runtime.notesleep (5 samples, 0.17%)</title><rect x="721.8" y="197" width="2.1" height="15.0" fill="rgb(251,28,26)" rx="2" ry="2" />
<text  x="724.84" y="207.5" ></text>
</g>
<g >
<title>strings.Cut (1 samples, 0.03%)</title><rect x="204.7" y="165" width="0.4" height="15.0" fill="rgb(226,1,6)" rx="2" ry="2" />
<text  x="207.69" y="175.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.03%)</title><rect x="207.1" y="181" width="0.5" height="15.0" fill="rgb(218,0,32)" rx="2" ry="2" />
<text  x="210.14" y="191.5" ></text>
</g>
<g >
<title>net/http.checkConnErrorWriter.Write (528 samples, 18.26%)</title><rect x="219.0" y="197" width="215.5" height="15.0" fill="rgb(229,27,46)" rx="2" ry="2" />
<text  x="221.98" y="207.5" >net/http.checkConnErrorWrite..</text>
</g>
<g >
<title>github.com/varstr/uaparser.contains (1 samples, 0.03%)</title><rect x="439.0" y="101" width="0.4" height="15.0" fill="rgb(205,17,1)" rx="2" ry="2" />
<text  x="441.98" y="111.5" ></text>
</g>
<g >
<title>net/http.Header.Get (1 samples, 0.03%)</title><rect x="450.4" y="165" width="0.4" height="15.0" fill="rgb(226,68,2)" rx="2" ry="2" />
<text  x="453.41" y="175.5" ></text>
</g>
<g >
<title>runtime.semawakeup (10 samples, 0.35%)</title><rect x="1163.5" y="149" width="4.1" height="15.0" fill="rgb(220,110,13)" rx="2" ry="2" />
<text  x="1166.47" y="159.5" ></text>
</g>
<g >
<title>runtime.deductAssistCredit (1 samples, 0.03%)</title><rect x="205.5" y="165" width="0.4" height="15.0" fill="rgb(236,98,0)" rx="2" ry="2" />
<text  x="208.51" y="175.5" ></text>
</g>
<g >
<title>runtime.makechan (3 samples, 0.10%)</title><rect x="210.4" y="213" width="1.2" height="15.0" fill="rgb(230,52,43)" rx="2" ry="2" />
<text  x="213.41" y="223.5" ></text>
</g>
<g >
<title>strings.Contains (1 samples, 0.03%)</title><rect x="436.9" y="181" width="0.4" height="15.0" fill="rgb(223,129,20)" rx="2" ry="2" />
<text  x="439.94" y="191.5" ></text>
</g>
<g >
<title>runtime.getitab (1 samples, 0.03%)</title><rect x="438.6" y="133" width="0.4" height="15.0" fill="rgb(248,108,22)" rx="2" ry="2" />
<text  x="441.57" y="143.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.03%)</title><rect x="450.0" y="101" width="0.4" height="15.0" fill="rgb(253,119,41)" rx="2" ry="2" />
<text  x="453.00" y="111.5" ></text>
</g>
<g >
<title>runtime.mcall (1,025 samples, 35.45%)</title><rect x="721.8" y="245" width="418.4" height="15.0" fill="rgb(230,20,43)" rx="2" ry="2" />
<text  x="724.84" y="255.5" >runtime.mcall</text>
</g>
<g >
<title>runtime.osyield (1 samples, 0.03%)</title><rect x="727.6" y="197" width="0.4" height="15.0" fill="rgb(216,152,46)" rx="2" ry="2" />
<text  x="730.55" y="207.5" ></text>
</g>
<g >
<title>net/http.(*response).write (2 samples, 0.07%)</title><rect x="437.8" y="117" width="0.8" height="15.0" fill="rgb(248,217,17)" rx="2" ry="2" />
<text  x="440.76" y="127.5" ></text>
</g>
<g >
<title>strings.IndexByte (1 samples, 0.03%)</title><rect x="446.3" y="117" width="0.4" height="15.0" fill="rgb(253,117,25)" rx="2" ry="2" />
<text  x="449.33" y="127.5" ></text>
</g>
<g >
<title>runtime.semasleep (3 samples, 0.10%)</title><rect x="1156.9" y="165" width="1.3" height="15.0" fill="rgb(211,151,53)" rx="2" ry="2" />
<text  x="1159.94" y="175.5" ></text>
</g>
<g >
<title>runtime.wakep (10 samples, 0.35%)</title><rect x="1163.5" y="197" width="4.1" height="15.0" fill="rgb(225,192,54)" rx="2" ry="2" />
<text  x="1166.47" y="207.5" ></text>
</g>
<g >
<title>runtime.newobject (3 samples, 0.10%)</title><rect x="205.5" y="197" width="1.2" height="15.0" fill="rgb(253,92,1)" rx="2" ry="2" />
<text  x="208.51" y="207.5" ></text>
</g>
<g >
<title>runtime.startTheWorldWithSema (2 samples, 0.07%)</title><rect x="1161.0" y="213" width="0.8" height="15.0" fill="rgb(219,152,20)" rx="2" ry="2" />
<text  x="1164.02" y="223.5" ></text>
</g>
<g >
<title>runtime.goready (1 samples, 0.03%)</title><rect x="717.3" y="181" width="0.5" height="15.0" fill="rgb(232,96,12)" rx="2" ry="2" />
<text  x="720.35" y="191.5" ></text>
</g>
<g >
<title>context.newCancelCtx (1 samples, 0.03%)</title><rect x="202.2" y="197" width="0.5" height="15.0" fill="rgb(223,73,48)" rx="2" ry="2" />
<text  x="205.24" y="207.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (1 samples, 0.03%)</title><rect x="727.1" y="85" width="0.5" height="15.0" fill="rgb(231,194,54)" rx="2" ry="2" />
<text  x="730.14" y="95.5" ></text>
</g>
<g >
<title>runtime.(*randomEnum).next (2 samples, 0.07%)</title><rect x="729.2" y="181" width="0.8" height="15.0" fill="rgb(240,225,51)" rx="2" ry="2" />
<text  x="732.18" y="191.5" ></text>
</g>
<g >
<title>runtime.newproc1 (4 samples, 0.14%)</title><rect x="214.1" y="165" width="1.6" height="15.0" fill="rgb(217,222,35)" rx="2" ry="2" />
<text  x="217.08" y="175.5" ></text>
</g>
<g >
<title>net/http.(*chunkWriter).Write (8 samples, 0.28%)</title><rect x="215.7" y="197" width="3.3" height="15.0" fill="rgb(236,204,34)" rx="2" ry="2" />
<text  x="218.71" y="207.5" ></text>
</g>
<g >
<title>fmt.newPrinter (1 samples, 0.03%)</title><rect x="437.3" y="133" width="0.5" height="15.0" fill="rgb(224,36,16)" rx="2" ry="2" />
<text  x="440.35" y="143.5" ></text>
</g>
<g >
<title>net/http.(*conn).serve (1,667 samples, 57.66%)</title><rect x="10.0" y="245" width="680.4" height="15.0" fill="rgb(251,170,25)" rx="2" ry="2" />
<text  x="13.00" y="255.5" >net/http.(*conn).serve</text>
</g>
<g >
<title>aeshashbody (1 samples, 0.03%)</title><rect x="211.6" y="197" width="0.4" height="15.0" fill="rgb(237,130,27)" rx="2" ry="2" />
<text  x="214.63" y="207.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (2 samples, 0.07%)</title><rect x="447.1" y="101" width="0.9" height="15.0" fill="rgb(252,38,26)" rx="2" ry="2" />
<text  x="450.14" y="111.5" ></text>
</g>
<g >
<title>net/http.extraHeader.Write (1 samples, 0.03%)</title><rect x="217.3" y="165" width="0.5" height="15.0" fill="rgb(231,78,16)" rx="2" ry="2" />
<text  x="220.35" y="175.5" ></text>
</g>
<g >
<title>indexbytebody (2 samples, 0.07%)</title><rect x="208.8" y="133" width="0.8" height="15.0" fill="rgb(233,23,35)" rx="2" ry="2" />
<text  x="211.78" y="143.5" ></text>
</g>
<g >
<title>runtime.findObject (1 samples, 0.03%)</title><rect x="720.2" y="165" width="0.4" height="15.0" fill="rgb(239,215,19)" rx="2" ry="2" />
<text  x="723.20" y="175.5" ></text>
</g>
<g >
<title>runtime.usleep (1 samples, 0.03%)</title><rect x="727.6" y="181" width="0.4" height="15.0" fill="rgb(212,217,27)" rx="2" ry="2" />
<text  x="730.55" y="191.5" ></text>
</g>
<g >
<title>runtime.save (1 samples, 0.03%)</title><rect x="621.4" y="37" width="0.4" height="15.0" fill="rgb(218,12,19)" rx="2" ry="2" />
<text  x="624.43" y="47.5" ></text>
</g>
<g >
<title>time.Until (1 samples, 0.03%)</title><rect x="434.9" y="165" width="0.4" height="15.0" fill="rgb(241,66,7)" rx="2" ry="2" />
<text  x="437.90" y="175.5" ></text>
</g>
<g >
<title>regexp.(*Regexp).doExecute (2 samples, 0.07%)</title><rect x="448.0" y="101" width="0.8" height="15.0" fill="rgb(225,166,37)" rx="2" ry="2" />
<text  x="450.96" y="111.5" ></text>
</g>
<g >
<title>runtime.nanotime1 (1 samples, 0.03%)</title><rect x="1128.0" y="133" width="0.4" height="15.0" fill="rgb(211,145,46)" rx="2" ry="2" />
<text  x="1130.96" y="143.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.03%)</title><rect x="1179.8" y="213" width="0.4" height="15.0" fill="rgb(208,7,5)" rx="2" ry="2" />
<text  x="1182.80" y="223.5" ></text>
</g>
<g >
<title>runtime.lock2 (6 samples, 0.21%)</title><rect x="1167.6" y="213" width="2.4" height="15.0" fill="rgb(229,157,19)" rx="2" ry="2" />
<text  x="1170.55" y="223.5" ></text>
</g>
<g >
<title>sync.(*Pool).pin (1 samples, 0.03%)</title><rect x="437.3" y="101" width="0.5" height="15.0" fill="rgb(244,213,14)" rx="2" ry="2" />
<text  x="440.35" y="111.5" ></text>
</g>
<g >
<title>net.(*conn).Read (65 samples, 2.25%)</title><rect x="690.8" y="229" width="26.5" height="15.0" fill="rgb(214,225,36)" rx="2" ry="2" />
<text  x="693.82" y="239.5" >n..</text>
</g>
<g >
<title>runtime.(*scavengerState).run (1 samples, 0.03%)</title><rect x="717.8" y="229" width="0.4" height="15.0" fill="rgb(221,151,32)" rx="2" ry="2" />
<text  x="720.76" y="239.5" ></text>
</g>
<g >
<title>time.(*Time).sec (1 samples, 0.03%)</title><rect x="434.9" y="149" width="0.4" height="15.0" fill="rgb(250,92,45)" rx="2" ry="2" />
<text  x="437.90" y="159.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.03%)</title><rect x="444.3" y="117" width="0.4" height="15.0" fill="rgb(212,204,6)" rx="2" ry="2" />
<text  x="447.29" y="127.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (8 samples, 0.28%)</title><rect x="1124.7" y="197" width="3.3" height="15.0" fill="rgb(216,49,6)" rx="2" ry="2" />
<text  x="1127.69" y="207.5" ></text>
</g>
<g >
<title>runtime.markroot (2 samples, 0.07%)</title><rect x="718.6" y="181" width="0.8" height="15.0" fill="rgb(229,92,24)" rx="2" ry="2" />
<text  x="721.57" y="191.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).SetReadDeadline (1 samples, 0.03%)</title><rect x="434.9" y="197" width="0.4" height="15.0" fill="rgb(210,16,37)" rx="2" ry="2" />
<text  x="437.90" y="207.5" ></text>
</g>
<g >
<title>runtime.ready (10 samples, 0.35%)</title><rect x="1163.5" y="213" width="4.1" height="15.0" fill="rgb(221,199,32)" rx="2" ry="2" />
<text  x="1166.47" y="223.5" ></text>
</g>
<g >
<title>syscall.sysctl (416 samples, 14.39%)</title><rect x="452.0" y="101" width="169.8" height="15.0" fill="rgb(218,216,52)" rx="2" ry="2" />
<text  x="455.04" y="111.5" >syscall.sysctl</text>
</g>
<g >
<title>runtime.(*pageAlloc).scavenge.func1 (11 samples, 0.38%)</title><rect x="1150.0" y="229" width="4.5" height="15.0" fill="rgb(240,38,9)" rx="2" ry="2" />
<text  x="1153.00" y="239.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (2 samples, 0.07%)</title><rect x="721.0" y="165" width="0.8" height="15.0" fill="rgb(222,142,32)" rx="2" ry="2" />
<text  x="724.02" y="175.5" ></text>
</g>
<g >
<title>syscall.syscall (62 samples, 2.14%)</title><rect x="692.0" y="165" width="25.3" height="15.0" fill="rgb(252,142,22)" rx="2" ry="2" />
<text  x="695.04" y="175.5" >s..</text>
</g>
<g >
<title>runtime.madvise (1 samples, 0.03%)</title><rect x="717.8" y="133" width="0.4" height="15.0" fill="rgb(248,216,15)" rx="2" ry="2" />
<text  x="720.76" y="143.5" ></text>
</g>
<g >
<title>syscall.ByteSliceFromString (3 samples, 0.10%)</title><rect x="450.8" y="101" width="1.2" height="15.0" fill="rgb(240,180,13)" rx="2" ry="2" />
<text  x="453.82" y="111.5" ></text>
</g>
<g >
<title>runtime.notetsleep (2 samples, 0.07%)</title><rect x="1187.1" y="213" width="0.9" height="15.0" fill="rgb(252,58,20)" rx="2" ry="2" />
<text  x="1190.14" y="223.5" ></text>
</g>
<g >
<title>context.parentCancelCtx (1 samples, 0.03%)</title><rect x="202.7" y="165" width="0.4" height="15.0" fill="rgb(216,209,19)" rx="2" ry="2" />
<text  x="205.65" y="175.5" ></text>
</g>
<g >
<title>runtime.netpoll (2 samples, 0.07%)</title><rect x="1162.2" y="197" width="0.9" height="15.0" fill="rgb(241,157,52)" rx="2" ry="2" />
<text  x="1165.24" y="207.5" ></text>
</g>
<g >
<title>indexbytebody (1 samples, 0.03%)</title><rect x="725.1" y="165" width="0.4" height="15.0" fill="rgb(238,119,0)" rx="2" ry="2" />
<text  x="728.10" y="175.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.03%)</title><rect x="717.3" y="165" width="0.5" height="15.0" fill="rgb(209,202,10)" rx="2" ry="2" />
<text  x="720.35" y="175.5" ></text>
</g>
<g >
<title>runtime.findmoduledatap (1 samples, 0.03%)</title><rect x="214.1" y="133" width="0.4" height="15.0" fill="rgb(253,96,14)" rx="2" ry="2" />
<text  x="217.08" y="143.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (2 samples, 0.07%)</title><rect x="721.0" y="181" width="0.8" height="15.0" fill="rgb(205,59,13)" rx="2" ry="2" />
<text  x="724.02" y="191.5" ></text>
</g>
<g >
<title>net/http.Header.writeSubset (1 samples, 0.03%)</title><rect x="218.2" y="165" width="0.4" height="15.0" fill="rgb(226,6,52)" rx="2" ry="2" />
<text  x="221.16" y="175.5" ></text>
</g>
<g >
<title>runtime.mPark (6 samples, 0.21%)</title><rect x="730.4" y="165" width="2.5" height="15.0" fill="rgb(252,168,19)" rx="2" ry="2" />
<text  x="733.41" y="175.5" ></text>
</g>
<g >
<title>bufio.(*Writer).Flush (536 samples, 18.54%)</title><rect x="215.7" y="213" width="218.8" height="15.0" fill="rgb(230,78,17)" rx="2" ry="2" />
<text  x="218.71" y="223.5" >bufio.(*Writer).Flush</text>
</g>
<g >
<title>bytes.Cut (2 samples, 0.07%)</title><rect x="208.8" y="165" width="0.8" height="15.0" fill="rgb(215,134,54)" rx="2" ry="2" />
<text  x="211.78" y="175.5" ></text>
</g>
<g >
<title>net/http.(*ServeMux).ServeHTTP (625 samples, 21.62%)</title><rect x="435.3" y="213" width="255.1" height="15.0" fill="rgb(208,81,30)" rx="2" ry="2" />
<text  x="438.31" y="223.5" >net/http.(*ServeMux).ServeHTTP</text>
</g>
<g >
<title>runtime.gcstopm (6 samples, 0.21%)</title><rect x="730.4" y="181" width="2.5" height="15.0" fill="rgb(211,18,27)" rx="2" ry="2" />
<text  x="733.41" y="191.5" ></text>
</g>
<g >
<title>runtime.preemptall (7 samples, 0.24%)</title><rect x="1158.2" y="197" width="2.8" height="15.0" fill="rgb(231,101,34)" rx="2" ry="2" />
<text  x="1161.16" y="207.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (30 samples, 1.04%)</title><rect x="1167.6" y="229" width="12.2" height="15.0" fill="rgb(230,140,13)" rx="2" ry="2" />
<text  x="1170.55" y="239.5" ></text>
</g>
<g >
<title>internal/poll.setDeadlineImpl (1 samples, 0.03%)</title><rect x="434.9" y="181" width="0.4" height="15.0" fill="rgb(224,14,11)" rx="2" ry="2" />
<text  x="437.90" y="191.5" ></text>
</g>
<g >
<title>runtime.nanotime (6 samples, 0.21%)</title><rect x="1050.4" y="165" width="2.5" height="15.0" fill="rgb(227,185,37)" rx="2" ry="2" />
<text  x="1053.41" y="175.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).writeUnlock (1 samples, 0.03%)</title><rect x="219.4" y="133" width="0.4" height="15.0" fill="rgb(211,182,21)" rx="2" ry="2" />
<text  x="222.39" y="143.5" ></text>
</g>
<g >
<title>syscall.Read (62 samples, 2.14%)</title><rect x="692.0" y="197" width="25.3" height="15.0" fill="rgb(208,226,53)" rx="2" ry="2" />
<text  x="695.04" y="207.5" >s..</text>
</g>
<g >
<title>runtime.semawakeup (1 samples, 0.03%)</title><rect x="727.1" y="101" width="0.5" height="15.0" fill="rgb(234,150,49)" rx="2" ry="2" />
<text  x="730.14" y="111.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write (2 samples, 0.07%)</title><rect x="219.0" y="149" width="0.8" height="15.0" fill="rgb(208,173,3)" rx="2" ry="2" />
<text  x="221.98" y="159.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (1 samples, 0.03%)</title><rect x="1142.2" y="149" width="0.5" height="15.0" fill="rgb(250,110,20)" rx="2" ry="2" />
<text  x="1145.24" y="159.5" ></text>
</g>
<g >
<title>indexbytebody (1 samples, 0.03%)</title><rect x="204.7" y="133" width="0.4" height="15.0" fill="rgb(235,176,14)" rx="2" ry="2" />
<text  x="207.69" y="143.5" ></text>
</g>
<g >
<title>runtime.scanstack (2 samples, 0.07%)</title><rect x="718.6" y="149" width="0.8" height="15.0" fill="rgb(247,214,52)" rx="2" ry="2" />
<text  x="721.57" y="159.5" ></text>
</g>
<g >
<title>runtime.netpollBreak (1 samples, 0.03%)</title><rect x="1048.8" y="181" width="0.4" height="15.0" fill="rgb(253,210,44)" rx="2" ry="2" />
<text  x="1051.78" y="191.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.03%)</title><rect x="205.9" y="165" width="0.4" height="15.0" fill="rgb(236,177,44)" rx="2" ry="2" />
<text  x="208.92" y="175.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (6 samples, 0.21%)</title><rect x="730.4" y="117" width="2.5" height="15.0" fill="rgb(228,162,35)" rx="2" ry="2" />
<text  x="733.41" y="127.5" ></text>
</g>
<g >
<title>runtime.goexit0 (5 samples, 0.17%)</title><rect x="725.1" y="229" width="2.0" height="15.0" fill="rgb(240,74,2)" rx="2" ry="2" />
<text  x="728.10" y="239.5" ></text>
</g>
<g >
<title>runtime.startTheWorldWithSema (3 samples, 0.10%)</title><rect x="1162.2" y="213" width="1.3" height="15.0" fill="rgb(215,82,54)" rx="2" ry="2" />
<text  x="1165.24" y="223.5" ></text>
</g>
<g >
<title>runtime.schedule (6 samples, 0.21%)</title><rect x="1140.6" y="181" width="2.5" height="15.0" fill="rgb(242,83,49)" rx="2" ry="2" />
<text  x="1143.61" y="191.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (208 samples, 7.19%)</title><rect x="754.5" y="133" width="84.9" height="15.0" fill="rgb(243,144,37)" rx="2" ry="2" />
<text  x="757.49" y="143.5" >runtime.p..</text>
</g>
<g >
<title>runtime.(*timeHistogram).record (1 samples, 0.03%)</title><rect x="728.8" y="165" width="0.4" height="15.0" fill="rgb(243,180,29)" rx="2" ry="2" />
<text  x="731.78" y="175.5" ></text>
</g>
<g >
<title>context.WithCancel (2 samples, 0.07%)</title><rect x="202.2" y="213" width="0.9" height="15.0" fill="rgb(241,18,0)" rx="2" ry="2" />
<text  x="205.24" y="223.5" ></text>
</g>
<g >
<title>runtime.mallocgc (3 samples, 0.10%)</title><rect x="446.7" y="117" width="1.3" height="15.0" fill="rgb(215,90,15)" rx="2" ry="2" />
<text  x="449.73" y="127.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (6 samples, 0.21%)</title><rect x="1143.1" y="197" width="2.4" height="15.0" fill="rgb(220,69,48)" rx="2" ry="2" />
<text  x="1146.06" y="207.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).prepareRead (1 samples, 0.03%)</title><rect x="690.8" y="197" width="0.4" height="15.0" fill="rgb(210,116,21)" rx="2" ry="2" />
<text  x="693.82" y="207.5" ></text>
</g>
<g >
<title>sync.(*Pool).Get (1 samples, 0.03%)</title><rect x="218.2" y="133" width="0.4" height="15.0" fill="rgb(226,75,10)" rx="2" ry="2" />
<text  x="221.16" y="143.5" ></text>
</g>
<g >
<title>syscall.syscall (467 samples, 16.15%)</title><rect x="10.8" y="117" width="190.6" height="15.0" fill="rgb(239,104,45)" rx="2" ry="2" />
<text  x="13.82" y="127.5" >syscall.syscall</text>
</g>
<g >
<title>runtime.pthread_mutex_lock (4 samples, 0.14%)</title><rect x="839.4" y="133" width="1.6" height="15.0" fill="rgb(219,124,40)" rx="2" ry="2" />
<text  x="842.39" y="143.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (1 samples, 0.03%)</title><rect x="1142.2" y="101" width="0.5" height="15.0" fill="rgb(238,148,2)" rx="2" ry="2" />
<text  x="1145.24" y="111.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.03%)</title><rect x="1161.4" y="197" width="0.4" height="15.0" fill="rgb(247,59,10)" rx="2" ry="2" />
<text  x="1164.43" y="207.5" ></text>
</g>
<g >
<title>runtime.systemstack (8 samples, 0.28%)</title><rect x="718.6" y="229" width="3.2" height="15.0" fill="rgb(238,140,7)" rx="2" ry="2" />
<text  x="721.57" y="239.5" ></text>
</g>
<g >
<title>runtime.usleep (5 samples, 0.17%)</title><rect x="1125.9" y="165" width="2.1" height="15.0" fill="rgb(234,215,14)" rx="2" ry="2" />
<text  x="1128.92" y="175.5" ></text>
</g>
<g >
<title>runtime.nanotime1 (1 samples, 0.03%)</title><rect x="689.2" y="133" width="0.4" height="15.0" fill="rgb(238,194,33)" rx="2" ry="2" />
<text  x="692.18" y="143.5" ></text>
</g>
<g >
<title>runtime.growslice (2 samples, 0.07%)</title><rect x="445.5" y="101" width="0.8" height="15.0" fill="rgb(209,118,6)" rx="2" ry="2" />
<text  x="448.51" y="111.5" ></text>
</g>
<g >
<title>syscall.Sysctl (584 samples, 20.20%)</title><rect x="450.8" y="133" width="238.4" height="15.0" fill="rgb(253,162,48)" rx="2" ry="2" />
<text  x="453.82" y="143.5" >syscall.Sysctl</text>
</g>
<g >
<title>net/http.(*response).Write (2 samples, 0.07%)</title><rect x="437.8" y="133" width="0.8" height="15.0" fill="rgb(242,189,17)" rx="2" ry="2" />
<text  x="440.76" y="143.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).SetReadDeadline (2 samples, 0.07%)</title><rect x="201.4" y="229" width="0.8" height="15.0" fill="rgb(235,151,2)" rx="2" ry="2" />
<text  x="204.43" y="239.5" ></text>
</g>
<g >
<title>github.com/vivekprm/go-pprof-demo/stats.clean (4 samples, 0.14%)</title><rect x="445.1" y="149" width="1.6" height="15.0" fill="rgb(226,152,13)" rx="2" ry="2" />
<text  x="448.10" y="159.5" ></text>
</g>
<g >
<title>runtime.acquirep (1 samples, 0.03%)</title><rect x="1123.5" y="165" width="0.4" height="15.0" fill="rgb(248,125,7)" rx="2" ry="2" />
<text  x="1126.47" y="175.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (1 samples, 0.03%)</title><rect x="1161.8" y="165" width="0.4" height="15.0" fill="rgb(243,100,16)" rx="2" ry="2" />
<text  x="1164.84" y="175.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.03%)</title><rect x="721.4" y="117" width="0.4" height="15.0" fill="rgb(228,105,45)" rx="2" ry="2" />
<text  x="724.43" y="127.5" ></text>
</g>
<g >
<title>runtime.semawakeup (44 samples, 1.52%)</title><rect x="733.7" y="117" width="17.9" height="15.0" fill="rgb(241,76,20)" rx="2" ry="2" />
<text  x="736.67" y="127.5" ></text>
</g>
<g >
<title>runtime.execute (2 samples, 0.07%)</title><rect x="728.4" y="197" width="0.8" height="15.0" fill="rgb(210,143,47)" rx="2" ry="2" />
<text  x="731.37" y="207.5" ></text>
</g>
<g >
<title>runtime.gcstopm (1 samples, 0.03%)</title><rect x="1140.6" y="149" width="0.4" height="15.0" fill="rgb(241,162,27)" rx="2" ry="2" />
<text  x="1143.61" y="159.5" ></text>
</g>
<g >
<title>runtime.injectglist.func1 (1 samples, 0.03%)</title><rect x="727.1" y="149" width="0.5" height="15.0" fill="rgb(245,163,54)" rx="2" ry="2" />
<text  x="730.14" y="159.5" ></text>
</g>
<g >
<title>runtime.stopm (1 samples, 0.03%)</title><rect x="726.7" y="181" width="0.4" height="15.0" fill="rgb(245,62,45)" rx="2" ry="2" />
<text  x="729.73" y="191.5" ></text>
</g>
<g >
<title>regexp.(*Regexp).backtrack (1 samples, 0.03%)</title><rect x="445.1" y="85" width="0.4" height="15.0" fill="rgb(210,106,8)" rx="2" ry="2" />
<text  x="448.10" y="95.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.03%)</title><rect x="442.7" y="149" width="0.4" height="15.0" fill="rgb(235,110,48)" rx="2" ry="2" />
<text  x="445.65" y="159.5" ></text>
</g>
<g >
<title>runtime.mPark (214 samples, 7.40%)</title><rect x="754.5" y="181" width="87.3" height="15.0" fill="rgb(230,144,34)" rx="2" ry="2" />
<text  x="757.49" y="191.5" >runtime.mP..</text>
</g>
<g >
<title>github.com/vivekprm/go-pprof-demo/handlers.parseUserAgent (6 samples, 0.21%)</title><rect x="439.0" y="149" width="2.4" height="15.0" fill="rgb(245,174,27)" rx="2" ry="2" />
<text  x="441.98" y="159.5" ></text>
</g>
<g >
<title>regexp/syntax.(*Inst).MatchRune (1 samples, 0.03%)</title><rect x="448.4" y="69" width="0.4" height="15.0" fill="rgb(234,178,46)" rx="2" ry="2" />
<text  x="451.37" y="79.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (6 samples, 0.21%)</title><rect x="1167.6" y="181" width="2.4" height="15.0" fill="rgb(233,189,52)" rx="2" ry="2" />
<text  x="1170.55" y="191.5" ></text>
</g>
<g >
<title>runtime.startm (10 samples, 0.35%)</title><rect x="1163.5" y="181" width="4.1" height="15.0" fill="rgb(207,39,31)" rx="2" ry="2" />
<text  x="1166.47" y="191.5" ></text>
</g>
<g >
<title>time.Since (1 samples, 0.03%)</title><rect x="690.0" y="165" width="0.4" height="15.0" fill="rgb(219,203,24)" rx="2" ry="2" />
<text  x="693.00" y="175.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone (1 samples, 0.03%)</title><rect x="718.2" y="229" width="0.4" height="15.0" fill="rgb(223,110,50)" rx="2" ry="2" />
<text  x="721.16" y="239.5" ></text>
</g>
<g >
<title>runtime.exitsyscall0 (8 samples, 0.28%)</title><rect x="721.8" y="229" width="3.3" height="15.0" fill="rgb(215,150,14)" rx="2" ry="2" />
<text  x="724.84" y="239.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).SetReadDeadline (1 samples, 0.03%)</title><rect x="213.7" y="213" width="0.4" height="15.0" fill="rgb(214,163,30)" rx="2" ry="2" />
<text  x="216.67" y="223.5" ></text>
</g>
<g >
<title>runtime.startm (17 samples, 0.59%)</title><rect x="1180.2" y="197" width="6.9" height="15.0" fill="rgb(252,206,53)" rx="2" ry="2" />
<text  x="1183.20" y="207.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker.func2 (5 samples, 0.17%)</title><rect x="1154.9" y="229" width="2.0" height="15.0" fill="rgb(227,164,18)" rx="2" ry="2" />
<text  x="1157.90" y="239.5" ></text>
</g>
<g >
<title>regexp.(*Regexp).doExecute (1 samples, 0.03%)</title><rect x="445.1" y="101" width="0.4" height="15.0" fill="rgb(244,5,41)" rx="2" ry="2" />
<text  x="448.10" y="111.5" ></text>
</g>
<g >
<title>runtime.scanobject (1 samples, 0.03%)</title><rect x="205.5" y="69" width="0.4" height="15.0" fill="rgb(213,167,50)" rx="2" ry="2" />
<text  x="208.51" y="79.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.03%)</title><rect x="212.4" y="197" width="0.5" height="15.0" fill="rgb(240,222,32)" rx="2" ry="2" />
<text  x="215.45" y="207.5" ></text>
</g>
<g >
<title>path.Clean (3 samples, 0.10%)</title><rect x="435.7" y="165" width="1.2" height="15.0" fill="rgb(244,154,35)" rx="2" ry="2" />
<text  x="438.71" y="175.5" ></text>
</g>
<g >
<title>net/textproto.(*Reader).ReadLine (1 samples, 0.03%)</title><rect x="207.1" y="213" width="0.5" height="15.0" fill="rgb(209,175,52)" rx="2" ry="2" />
<text  x="210.14" y="223.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.03%)</title><rect x="441.0" y="85" width="0.4" height="15.0" fill="rgb(217,18,2)" rx="2" ry="2" />
<text  x="444.02" y="95.5" ></text>
</g>
<g >
<title>runtime.osyield (5 samples, 0.17%)</title><rect x="1125.9" y="181" width="2.1" height="15.0" fill="rgb(212,67,0)" rx="2" ry="2" />
<text  x="1128.92" y="191.5" ></text>
</g>
<g >
<title>runtime.usleep (1 samples, 0.03%)</title><rect x="1179.8" y="181" width="0.4" height="15.0" fill="rgb(205,227,22)" rx="2" ry="2" />
<text  x="1182.80" y="191.5" ></text>
</g>
<g >
<title>runtime.mapdelete_faststr (1 samples, 0.03%)</title><rect x="211.6" y="213" width="0.4" height="15.0" fill="rgb(238,94,37)" rx="2" ry="2" />
<text  x="214.63" y="223.5" ></text>
</g>
<g >
<title>runtime.schedule (3 samples, 0.10%)</title><rect x="723.9" y="213" width="1.2" height="15.0" fill="rgb(231,201,4)" rx="2" ry="2" />
<text  x="726.88" y="223.5" ></text>
</g>
<g >
<title>github.com/vivekprm/go-pprof-demo/stats.addTagsToName (3 samples, 0.10%)</title><rect x="446.7" y="149" width="1.3" height="15.0" fill="rgb(242,36,34)" rx="2" ry="2" />
<text  x="449.73" y="159.5" ></text>
</g>
<g >
<title>runtime.osyield (5 samples, 0.17%)</title><rect x="1143.5" y="181" width="2.0" height="15.0" fill="rgb(247,28,3)" rx="2" ry="2" />
<text  x="1146.47" y="191.5" ></text>
</g>
<g >
<title>time.now (1 samples, 0.03%)</title><rect x="689.6" y="149" width="0.4" height="15.0" fill="rgb(213,185,49)" rx="2" ry="2" />
<text  x="692.59" y="159.5" ></text>
</g>
<g >
<title>runtime.concatstring2 (1 samples, 0.03%)</title><rect x="443.1" y="133" width="0.4" height="15.0" fill="rgb(223,36,29)" rx="2" ry="2" />
<text  x="446.06" y="143.5" ></text>
</g>
<g >
<title>runtime.kevent (1 samples, 0.03%)</title><rect x="1161.0" y="181" width="0.4" height="15.0" fill="rgb(216,85,2)" rx="2" ry="2" />
<text  x="1164.02" y="191.5" ></text>
</g>
<g >
<title>bufio.(*Reader).fill (467 samples, 16.15%)</title><rect x="10.8" y="213" width="190.6" height="15.0" fill="rgb(235,128,11)" rx="2" ry="2" />
<text  x="13.82" y="223.5" >bufio.(*Reader).fill</text>
</g>
<g >
<title>runtime.pthread_cond_signal (44 samples, 1.52%)</title><rect x="733.7" y="101" width="17.9" height="15.0" fill="rgb(225,74,19)" rx="2" ry="2" />
<text  x="736.67" y="111.5" ></text>
</g>
<g >
<title>runtime.lock2 (3 samples, 0.10%)</title><rect x="1124.7" y="181" width="1.2" height="15.0" fill="rgb(236,2,38)" rx="2" ry="2" />
<text  x="1127.69" y="191.5" ></text>
</g>
<g >
<title>net/http.Header.get (1 samples, 0.03%)</title><rect x="203.1" y="213" width="0.4" height="15.0" fill="rgb(227,10,10)" rx="2" ry="2" />
<text  x="206.06" y="223.5" ></text>
</g>
<g >
<title>runtime.gcDrain (8 samples, 0.28%)</title><rect x="718.6" y="197" width="3.2" height="15.0" fill="rgb(253,112,13)" rx="2" ry="2" />
<text  x="721.57" y="207.5" ></text>
</g>
<g >
<title>runtime.kevent (2 samples, 0.07%)</title><rect x="1141.4" y="133" width="0.8" height="15.0" fill="rgb(221,170,13)" rx="2" ry="2" />
<text  x="1144.43" y="143.5" ></text>
</g>
<g >
<title>strings.(*Builder).grow (1 samples, 0.03%)</title><rect x="444.7" y="133" width="0.4" height="15.0" fill="rgb(246,3,35)" rx="2" ry="2" />
<text  x="447.69" y="143.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (1 samples, 0.03%)</title><rect x="205.5" y="101" width="0.4" height="15.0" fill="rgb(232,164,7)" rx="2" ry="2" />
<text  x="208.51" y="111.5" ></text>
</g>
<g >
<title>bytes.TrimLeft (1 samples, 0.03%)</title><rect x="208.4" y="181" width="0.4" height="15.0" fill="rgb(212,39,27)" rx="2" ry="2" />
<text  x="211.37" y="191.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (1 samples, 0.03%)</title><rect x="1188.8" y="181" width="0.4" height="15.0" fill="rgb(247,76,51)" rx="2" ry="2" />
<text  x="1191.78" y="191.5" ></text>
</g>
<g >
<title>runtime.gcDrain (5 samples, 0.17%)</title><rect x="1154.9" y="213" width="2.0" height="15.0" fill="rgb(249,102,8)" rx="2" ry="2" />
<text  x="1157.90" y="223.5" ></text>
</g>
<g >
<title>github.com/vivekprm/go-pprof-demo/handlers.getStatsTags (10 samples, 0.35%)</title><rect x="439.0" y="165" width="4.1" height="15.0" fill="rgb(244,17,1)" rx="2" ry="2" />
<text  x="441.98" y="175.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).put (1 samples, 0.03%)</title><rect x="1154.5" y="149" width="0.4" height="15.0" fill="rgb(229,0,22)" rx="2" ry="2" />
<text  x="1157.49" y="159.5" ></text>
</g>
<g >
<title>net/textproto.MIMEHeader.Get (1 samples, 0.03%)</title><rect x="450.4" y="149" width="0.4" height="15.0" fill="rgb(216,99,19)" rx="2" ry="2" />
<text  x="453.41" y="159.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).scavenge.func1 (1 samples, 0.03%)</title><rect x="717.8" y="165" width="0.4" height="15.0" fill="rgb(234,15,32)" rx="2" ry="2" />
<text  x="720.76" y="175.5" ></text>
</g>
<g >
<title>net/http.(*conn).setState (2 samples, 0.07%)</title><rect x="212.9" y="229" width="0.8" height="15.0" fill="rgb(242,125,4)" rx="2" ry="2" />
<text  x="215.86" y="239.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone.func1 (1 samples, 0.03%)</title><rect x="718.2" y="197" width="0.4" height="15.0" fill="rgb(235,80,32)" rx="2" ry="2" />
<text  x="721.16" y="207.5" ></text>
</g>
<g >
<title>github.com/varstr/uaparser.searchIn (4 samples, 0.14%)</title><rect x="439.0" y="117" width="1.6" height="15.0" fill="rgb(239,55,46)" rx="2" ry="2" />
<text  x="441.98" y="127.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.03%)</title><rect x="202.2" y="149" width="0.5" height="15.0" fill="rgb(248,229,7)" rx="2" ry="2" />
<text  x="205.24" y="159.5" ></text>
</g>
</g>
</svg>
